<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HTX.Net</name>
    </assembly>
    <members>
        <member name="T:HTX.Net.Clients.HTXRestClient">
            <inheritdoc cref="T:HTX.Net.Interfaces.Clients.IHTXRestClient" />
        </member>
        <member name="P:HTX.Net.Clients.HTXRestClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.HTXRestClient.UsdtMarginSwapApi">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.#ctor(System.Action{HTX.Net.Objects.Options.HTXRestOptions})">
            <summary>
            Create a new instance of the HTXRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,System.Action{HTX.Net.Objects.Options.HTXRestOptions})">
            <summary>
            Create a new instance of the HTXRestClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.SetDefaultOptions(System.Action{HTX.Net.Objects.Options.HTXRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.HTXSocketClient">
            <inheritdoc cref="T:HTX.Net.Interfaces.Clients.IHTXSocketClient" />
        </member>
        <member name="P:HTX.Net.Clients.HTXSocketClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.HTXSocketClient.UsdtMarginSwapApi">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.#ctor(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the HTXSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.#ctor(System.Action{HTX.Net.Objects.Options.HTXSocketOptions})">
            <summary>
            Create a new instance of the HTXSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.#ctor(System.Action{HTX.Net.Objects.Options.HTXSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the HTXSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.SetDefaultOptions(System.Action{HTX.Net.Objects.Options.HTXSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="E:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client
            </summary>
        </member>
        <member name="E:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client
            </summary>
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.FormatSymbol(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.TryParseError(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.GetSymbolName(System.String,System.String)">
            <summary>
            Get the name of a symbol for HTX based on the base and quote asset
            </summary>
            <param name="baseAsset"></param>
            <param name="quoteAsset"></param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.CommonSpotClient">
            <inheritdoc />
            TODO make this take an accountId param so we don't need it in the interface?
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetUserIdAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetSubAccountUsersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetSubUserAccountsAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetBalancesAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetAssetValuationAsync(HTX.Net.Enums.AccountType,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.TransferAssetAsync(System.Int64,HTX.Net.Enums.AccountType,System.Int64,System.Int64,HTX.Net.Enums.AccountType,System.Int64,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetAccountHistoryAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TransactionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetAccountLedgerAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TransactionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetSubAccountBalancesAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.TransferWithSubAccountAsync(System.Int64,System.String,System.Decimal,HTX.Net.Enums.TransferType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetDepositAddressesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.Decimal,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetWithdrawDepositAsync(HTX.Net.Enums.WithdrawDepositType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.FilterDirection},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.RepayMarginLoanAsync(System.String,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.TransferSpotToIsolatedMarginAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.TransferIsolatedMarginToSpotAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetIsolatedLoanInterestRateAndQuotaAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.RequestIsolatedMarginLoanAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.RepayIsolatedMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetIsolatedMarginClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.MarginOrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetIsolatedMarginBalanceAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.TransferSpotToCrossMarginAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.TransferCrossMarginToSpotAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetCrossLoanInterestRateAndQuotaAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.RequestCrossMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.RepayCrossMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetCrossMarginClosedOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.MarginOrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetCrossMarginBalanceAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetRepaymentHistoryAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetCurrentFeeRatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetLastTradeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetSymbolDetails24HAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetNavAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetSymbolStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetAssetDetailsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.PlaceOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.Nullable{HTX.Net.Enums.SourceType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOpenOrdersAsync(System.Nullable{System.Int64},System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelOrderByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelOrdersByCriteriaAsync(System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOrderByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOrderTradesAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatus},System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetUserTradesAsync(System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatus},System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetHistoricalOrdersAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.PlaceConditionalOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.ConditionalOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.TimeInForce},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelConditionalOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOpenConditionalOrdersAsync(System.Nullable{System.Int64},System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.ConditionalOrderType},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetClosedConditionalOrdersAsync(System.String,HTX.Net.Enums.ConditionalOrderStatus,System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.ConditionalOrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetConditionalOrderAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.FormatSymbol(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.PreprocessStreamMessage(CryptoExchange.Net.Sockets.SocketConnection,System.Net.WebSockets.WebSocketMessageType,System.ReadOnlyMemory{System.Byte})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetAuthenticationRequest(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetOrderBookWithMergeStepAsync(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetOrderBookAsync(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToPartialOrderBookUpdates1SecondAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToPartialOrderBookUpdates100MilisecondAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToOrderBookChangeUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXIncementalOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetTradeHistoryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetSymbolDetailsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToSymbolDetailUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolDetails}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXSymbolTicker}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToBestOfferUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXBestOffer}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToAccountUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXAccountUpdate}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToOrderDetailsUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXTradeUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.FormatSymbol(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.PreprocessStreamMessage(CryptoExchange.Net.Sockets.SocketConnection,System.Net.WebSockets.WebSocketMessageType,System.ReadOnlyMemory{System.Byte})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToIncrementalOrderBookUpdatesAsync(System.String,System.Boolean,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToSymbolTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToBestOfferUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToIndexKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToPremiumIndexKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToEstimatedFundingRateKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToBasisUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientUsdtMarginSwapApi.SubscribeToMarkPriceKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.FormatSymbol(System.String,System.String)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.GetUrl(System.String,System.String)">
            <summary>
            Construct url
            </summary>
            <param name="endpoint"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.FuturesApi.HTXRestClientUsdtMarginSwapApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetAssetValuationAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAssetAndPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAssetAndPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.SetSubAccountsTradingPermissionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginSubAccountsAssetsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginSubAccountsAssetsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetFinancialRecordsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.FinancialRecordType},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAvailableLeverageAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAvailableLeverageAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetTradingFeesAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.TransferMasterSubAsync(System.String,System.String,System.String,System.String,System.Decimal,HTX.Net.Enums.MasterSubTransferType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.GetMasterSubTransferRecordsAsync(System.String,System.Int32,System.Nullable{HTX.Net.Enums.MasterSubTransferType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.TransferMarginAccountsAsync(System.String,System.String,System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.ModifyIsolatedMarginPositionModeAsync(System.String,HTX.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiAccount.ModifyCrossMarginPositionModeAsync(System.String,HTX.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetContractInfoAsync(System.String,System.Nullable{HTX.Net.Enums.MarginMode},System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetSwapIndexPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetSwapPriceLimitationAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetSwapOpenInterestAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetOrderBookAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetBestOfferAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetMarketDataAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetMarketDatasAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetLastTradesAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetRecentTradesAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetSwapRiskInfoAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetInsuranceFundHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetIsolatedMarginAdjustFactorInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetCrossMarginAdjustFactorInfoAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetOpenInterestAsync(HTX.Net.Enums.InterestPeriod,HTX.Net.Enums.Unit,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetIsolatedMarginTieredInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetCrossTieredMarginInfoAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetIsolatedStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetCrossMarginTransferStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetCrossMarginTradeStatusAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetLiquidationOrdersAsync(System.Int32,HTX.Net.Enums.LiquidationTradeType,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetHistoricalSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetFundingRateAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetFundingRatesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetHistoricalFundingRatesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetPremiumIndexKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetEstimatedFundingRateKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetBasisDataAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiExchangeData.GetEstimatedSettlementPriceAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.PlaceIsolatedMarginOrderAsync(System.String,System.Decimal,HTX.Net.Enums.OrderSide,System.Int32,System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.PlaceCrossMarginOrderAsync(System.Decimal,HTX.Net.Enums.OrderSide,System.Int32,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.CancelIsolatedMarginOrderAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.CancelIsolatedMarginOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.CancelCrossMarginOrderAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.CancelCrossMarginOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.CancelAllIsolatedMarginOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.CancelAllCrossMarginOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.ChangeIsolatedMarginLeverageAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.ChangeCrossMarginLeverageAsync(System.Int32,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginOrderAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginOrderAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginOrderDetailsAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginOrderDetailsAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginOpenOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginClosedOrdersAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Boolean,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginClosedOrdersAsync(HTX.Net.Enums.MarginTradeType,System.Boolean,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginUserTradesAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtMarginSwapApi.HTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginUserTradesAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Enums.AccountActivation">
            <summary>
            Account activation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountActivation.Activated">
            <summary>
            Activated
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountActivation.Deactivated">
            <summary>
            Deactivated
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.AccountEventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderPlaced">
            <summary>
            Order placed event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderMatched">
            <summary>
            Order matched event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderRefunded">
            <summary>
            Order refunded event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderCanceled">
            <summary>
            Order canceled event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderFeeRefunded">
            <summary>
            Order fee refunded event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.MarginTransfer">
            <summary>
            Margin transfer event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.MarginLoan">
            <summary>
            Margin loan event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.MarginInterest">
            <summary>
            Margin interest event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.MarginRepay">
            <summary>
            Margin repay event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.Other">
            <summary>
            Other event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.Deposit">
            <summary>
            Deposit event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.Withdraw">
            <summary>
            Withdraw event
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.AccountStatus">
            <summary>
            Account state
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountStatus.Working">
            <summary>
            Working
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountStatus.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Margin">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.SuperMargin">
            <summary>
            Super margin account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Otc">
            <summary>
            Otc account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Point">
            <summary>
            Point account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Investment">
            <summary>
            Investment account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Borrow">
            <summary>
            Borrow account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.GridTrading">
            <summary>
            Grid trading
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.DepositEarning">
            <summary>
            Deposit earning
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.OtcOptions">
            <summary>
            Otc options
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Minepool">
            <summary>
            Minepool
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Etf">
            <summary>
            Etf
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.CryptoLoans">
            <summary>
            Crypto loans
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.BalanceType">
            <summary>
            Balance type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Trade">
            <summary>
            Trade balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Frozen">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Loan">
            <summary>
            Loan balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Interest">
            <summary>
            Interest balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.TransferOutAvailable">
            <summary>
            Transfer out available
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.LoanAvailable">
            <summary>
            Loan available
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BusinessType.Futures">
            <summary>
            Futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BusinessType.Swap">
            <summary>
            Swap
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ConditionalOrderStatus">
            <summary>
            Status of a conditional order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderStatus.Created">
            <summary>
            Created and active
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderStatus.Triggered">
            <summary>
            Triggered
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ConditionalOrderType">
            <summary>
            Conditional order type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderType.Limit">
            <summary>
            Limit order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderType.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ContractStatus">
            <summary>
            Contract status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Delisting">
            <summary>
            Delisting
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Listing">
            <summary>
            Listing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.PendingListing">
            <summary>
            Pending listing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Suspension">
            <summary>
            Suspension
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.SuspendingOfListing">
            <summary>
            Suspending of listing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.InSettlement">
            <summary>
            In settlement
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Delivering">
            <summary>
            Delivering
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.SettlementCompleted">
            <summary>
            Settlement completed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Delivered">
            <summary>
            Delivered
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.Swap">
            <summary>
            Swap
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.ThisWeek">
            <summary>
            This week
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.NextWeek">
            <summary>
            Next week
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.Quarter">
            <summary>
            Quarter
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.NextQuarter">
            <summary>
            Next quarter
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.CurrencyStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.CurrencyStatus.Allowed">
            <summary>
            Allowed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.CurrencyStatus.Prohibited">
            <summary>
            Prohibited
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.FeeDeductStatus">
            <summary>
            Fee deduction status.
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeDeductStatus.Ongoing">
            <summary>
            In deduction
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeDeductStatus.Done">
            <summary>
            Deduction completed
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.FeeType">
            <summary>
            Fee type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeType.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeType.Circulated">
            <summary>
            Circulated
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeType.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.FilterDirection">
            <summary>
            Filter direction
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FilterDirection.Next">
            <summary>
            Get results after
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FilterDirection.Previous">
            <summary>
            Get results before
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.FinancialRecordType">
            <summary>
            Financial record type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseLong">
            <summary>
            Close long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseShort">
            <summary>
            Close short
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FeesForOpenPositionsTaker">
            <summary>
            Fees for open position - taker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FeesForOpenPositionMaker">
            <summary>
            Fess for open position - maker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FeesForClosePositionTaker">
            <summary>
            Fees for close positon - taker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FeesForClosePositionMaker">
            <summary>
            Fees for close potion - maker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseLongForDelivery">
            <summary>
            Close long for delivery
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseShortForDelivery">
            <summary>
            Close short for delibery
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.DeliveryFee">
            <summary>
            Delivery fee
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseLongForLiquidation">
            <summary>
            Close long for liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseShortForLiquidation">
            <summary>
            Close short for liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferSpotToContract">
            <summary>
            Transfer spot to contract
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferContractToSpot">
            <summary>
            Transfer contract to spot
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.SettleUnrealizedLong">
            <summary>
            Settle unrealized long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.SettleUnrealizedShort">
            <summary>
            Settle unrealized short
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.Clawback">
            <summary>
            Clawback
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.ActivityPriceRewards">
            <summary>
            Activity price rewards
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.Rebate">
            <summary>
            Rebate
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FundingFeeIncome">
            <summary>
            Funding fee income
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FundingFeeExpenditure">
            <summary>
            Funding fee expenditure
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferToSub">
            <summary>
            Transfer to sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferFromSub">
            <summary>
            Transfer from sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferToMaster">
            <summary>
            Transfer to master account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferFromMaster">
            <summary>
            Transfer from master account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferFromOtherMargin">
            <summary>
            Transfer from other margin account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferToOtherMargin">
            <summary>
            Transfer to other margin account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.AdlCloseLong">
            <summary>
            Adl close long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.AdlCloseShort">
            <summary>
            Adl close short
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.InstrumentStatus">
            <summary>
            Status of an instrument
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InstrumentStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InstrumentStatus.Delisted">
            <summary>
            Delisted
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.InterestPeriod">
            <summary>
            Interest period
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InterestPeriod.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InterestPeriod.FourHour">
            <summary>
            Four hours
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InterestPeriod.TwelfHour">
            <summary>
            Twelf hours
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InterestPeriod.OneDay">
            <summary>
            One day
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.KlineInterval">
            <summary>
            Interval for klines, int value represent the time in seconds
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.FourHours">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneWeek">
            <summary>
            1w
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneMonth">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneYear">
            <summary>
            1y
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.LiquidationTradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationTradeType.FullyFilledLiquidationOrders">
            <summary>
            Fully filled liquidation orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationTradeType.LiquidatedCloseOrders">
            <summary>
            Liquidated close orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationTradeType.LiquidatedOpenOrders">
            <summary>
            Liquidated open orders
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.LiquidationType">
            <summary>
            Liquidation type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationType.NonLiquidated">
            <summary>
            Not a liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationType.LongAndShortNetting">
            <summary>
            Long and short netting
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationType.PartialLiquidated">
            <summary>
            Partial liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationType.FullLiquidated">
            <summary>
            Full liquidation
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginMode.Cross">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginMode.Isolated">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginMode.All">
            <summary>
            All (filter)
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginOrderStatus">
            <summary>
            Status of a margin order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Created">
            <summary>
            Created
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Accural">
            <summary>
            Loaned
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Cleared">
            <summary>
            Paid
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginOrderType">
            <summary>
            Margin order type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderType.Quatation">
            <summary>
            Quoatation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderType.CanceledOrder">
            <summary>
            Canceled order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderType.ForcedLiquidation">
            <summary>
            Forced liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderType.DeliveryOrder">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginTradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.All">
            <summary>
            All trades
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.BuyLong">
            <summary>
            Buy long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.SellShort">
            <summary>
            Sell short
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.BuyShort">
            <summary>
            Buy short
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.SellLong">
            <summary>
            Sell long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.BuyOneWay">
            <summary>
            Buy one way
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.SellOneWay">
            <summary>
            Sell one way
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarketStatus">
            <summary>
            Status of the market
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarketStatus.Normal">
            <summary>
            Operating normally
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarketStatus.Halted">
            <summary>
            Trading halted
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarketStatus.CancelOnly">
            <summary>
            Only cancelation is possible
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MasterSubTransferType">
            <summary>
            Transfer type between master and sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MasterSubTransferType.MasterToSub">
            <summary>
            Transfer from master to sub
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MasterSubTransferType.SubToMaster">
            <summary>
            Transfer from sub to master
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Offset.Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Offset.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Offset.Both">
            <summary>
            Both
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.Operator">
            <summary>
            Stop price operator
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Operator.GreaterThanOrEqual">
            <summary>
            Greater than or equal to stop price
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Operator.LesserThanOrEqual">
            <summary>
            Less than or equal to stop price
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.BestOffer">
            <summary>
            Best offer
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.PostOnly">
            <summary>
            Post only
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Optimal5">
            <summary>
            Optimal 5
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Optimal10">
            <summary>
            Optimal 10
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Optimal20">
            <summary>
            Optimal 20
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKill">
            <summary>
            Fill or kill
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancelBestBid">
            <summary>
            Immediate or cancel at best bid
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancelOptimal5">
            <summary>
            Immediate or cancel optimal 5
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancelOptimal10">
            <summary>
            Immediate or cancel optimal 10
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancelOptimal20">
            <summary>
            Immediate or cancel optimal 20
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKillBestBid">
            <summary>
            Fill or kill best offer
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKillOptimal5">
            <summary>
            Fill or kill optimal 5
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKillOptimal10">
            <summary>
            Fill or kill optimal 10
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKillOptimal20">
            <summary>
            Fill or kill optimal 20
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderRole">
            <summary>
            Order role
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderRole.Maker">
            <summary>
            Maker of an order book entry
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderRole.Taker">
            <summary>
            Taker of an order book entry
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.PreSubmitted">
            <summary>
            Pre-submitted
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Submitted">
            <summary>
            Submitted, nothing filled yet
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.PartiallyCanceled">
            <summary>
            Partially filled, then canceled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Filled">
            <summary>
            Filled completely
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Canceled">
            <summary>
            Canceled without fill
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Created">
            <summary>
            Created
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.IOC">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.LimitMaker">
            <summary>
            Limit maker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.StopLimit">
            <summary>
            Stop limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.FillOrKillLimit">
            <summary>
            Fill or kill limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.FillOrKillStopLimit">
            <summary>
            Fill or kill stop limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.MarketGrid">
            <summary>
            Grid market order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.LimitGrid">
            <summary>
            Grid limit order
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PositionMode.SingleSide">
            <summary>
            Single side
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PositionMode.DualSide">
            <summary>
            Dual side
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SettlementType.Settlement">
            <summary>
            Settlement
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SettlementType.Delivery">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SortingType">
            <summary>
            Sorting order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SortingType.Ascending">
            <summary>
            Ascending
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SortingType.Descending">
            <summary>
            Descending
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SourceType">
            <summary>
            Source
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SourceType.Spot">
            <summary>
            Spot api
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SourceType.IsolatedMargin">
            <summary>
            Isolate margin api
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SourceType.CrossMargin">
            <summary>
            Cross margin api
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SourceType.C2CMargin">
            <summary>
            c2c margin api
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SwapMarginOrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.ReadyToSubmit">
            <summary>
            Ready to submit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Submitting">
            <summary>
            Submitting
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Submitted">
            <summary>
            Submitted / active
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.PartiallyCancelled">
            <summary>
            Partially filled, cancelled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Cancelled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Cancelling">
            <summary>
            Cancelling
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SymbolStatus">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.PreOnline">
            <summary>
            Not yet online
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.Online">
            <summary>
            Online
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.Suspended">
            <summary>
            Suspended
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TimeInForce">
            <summary>
            Time an order is active
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TimeInForce.GoodTillCancel">
            <summary>
            Good until the order is canceled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            Should execute at least partly upon placing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TimeInForce.BookOrCancel">
            <summary>
            Should enter the book upon placing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TimeInForce.FillOrKill">
            <summary>
            Should fill entirely upon placing
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Etf">
            <summary>
            ETF
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.TransactionFee">
            <summary>
            Transaction fee
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Deduction">
            <summary>
            Deduction
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Transfer">
            <summary>
            Transfer between accounts
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Credit">
            <summary>
            Credit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Liquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.WithdrawFee">
            <summary>
            Withdraw fee
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Other">
            <summary>
            Other types
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Rebate">
            <summary>
            Rebate
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TransferType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferType.FromSubAccount">
            <summary>
            From sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferType.ToSubAccount">
            <summary>
            To sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferType.PointFromSubAccount">
            <summary>
            Point from sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferType.PointToSubAccount">
            <summary>
            Point to sub account
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.Unit">
            <summary>
            Unit type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Unit.Cont">
            <summary>
            Cont
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Unit.CryptoCurrency">
            <summary>
            Crypto currency
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.UserStatus">
            <summary>
            User status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.UserStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.UserStatus.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.WithdrawDepositStatus">
            <summary>
            The status of a transfer 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Verifying">
            <summary>
            Awaiting verification
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Failed">
            <summary>
            Verification failed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Submitted">
            <summary>
            Withdraw request submitted successfully
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Reexamine">
            <summary>
            Under examination for withdraw validation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Canceled">
            <summary>
            Withdraw canceled by user
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Pass">
            <summary>
            Withdraw validation passed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Reject">
            <summary>
            Withdraw validation rejected
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.PreTransfer">
            <summary>
            Withdraw is about to be released
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.WalletTransfer">
            <summary>
            On-chain transfer initiated
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.WalletReject">
            <summary>
            Transfer rejected by chain
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Confirmed">
            <summary>
            On-chain transfer completed with one confirmation for withdraw or for at least one block for deposit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.ConfirmError">
            <summary>
            On-chain transfer faied to get confirmation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Repealed">
            <summary>
            Withdraw terminated by system
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Unknown">
            <summary>
            On-chain transfer has not been received
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Confirming">
            <summary>
            On-chain transfer waits for first confirmation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Safe">
            <summary>
            Multiple on-chain confirmation happened
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Orphan">
            <summary>
            Confirmed but currently in an orphan branch
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.WithdrawDepositType">
            <summary>
            Define transfer type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositType.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="T:HTX.Net.ExtensionMethods.HTXExtensionMethods">
            <summary>
            Extension methods specific to using the HTX API
            </summary>
        </member>
        <member name="M:HTX.Net.ExtensionMethods.HTXExtensionMethods.ValidateHTXSymbol(System.String)">
            <summary>
            Validate the string is a valid HTX symbol.
            </summary>
            <param name="symbolString">string to validate</param>
        </member>
        <member name="T:HTX.Net.HTXEnvironment">
            <summary>
            HTX environments
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.RestBaseAddress">
            <summary>
            Spot Rest client address
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.UsdtMarginSwapRestBaseAddress">
            <summary>
            Spot Rest client address for USDT margin swap API
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.SocketBaseAddress">
            <summary>
            Base address for socket API
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.UsdtMarginSwapSocketBaseAddress">
            <summary>
            Socket base address for the USDT margin swap API
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:HTX.Net.HTXEnvironment.CreateCustom(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="restAddress"></param>
            <param name="socketAddress"></param>
            <param name="usdtMarginSwapRestAddress"></param>
            <param name="usdtMarginSwapSocketAddress"></param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.HTXExchange">
            <summary>
            HTX exchange information and configuration
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the HTX API
            </summary>
        </member>
        <member name="T:HTX.Net.BinanceRateLimiters">
            <summary>
            Rate limiter configuration for the HTX API
            </summary>
        </member>
        <member name="E:HTX.Net.BinanceRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.IHTXRestClient">
            <summary>
            Client for accessing the HTX API. 
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.IHTXRestClient.SpotApi">
            <summary>
            Spot endpoints
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.IHTXRestClient.UsdtMarginSwapApi">
            <summary>
            Usdt margin swap endpoints
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.IHTXRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.IHTXSocketClient">
            <summary>
            Client for accessing the HTX websocket API. 
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.IHTXSocketClient.SpotApi">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.IHTXSocketClient.UsdtMarginSwapApi">
            <summary>
            Usdt margin swap streams
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.IHTXSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.CommonSpotClient">
            <summary>
            Get the ISpotClient for this client. This is a common interface which allows for some basic operations without knowing any details of the exchange.
            </summary>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount">
            <summary>
            HTX account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetUserIdAsync(System.Threading.CancellationToken)">
            <summary>
            Get the user id associated with the apikey/secret
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-uid"/></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetSubAccountUsersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of users associated with the apikey/secret
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-sub-user-39-s-list"/></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetSubUserAccountsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Gets a list of sub-user accounts associated with the sub-user id
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-sub-user-39-s-account-list"/></para>
            </summary>
            <param name="subUserId">The if of the user to get accounts for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of accounts associated with the apikey/secret
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-all-accounts-of-the-current-user" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetBalancesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Gets a list of balances for a specific account
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-account-balance-of-a-specific-account" /></para>
            </summary>
            <param name="accountId">The id of the account to get the balances for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAssetValuationAsync(HTX.Net.Enums.AccountType,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Gets the valuation of all assets
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-total-valuation-of-platform-assets" /></para>
            </summary>
            <param name="accountType">Type of account to valuate</param>
            <param name="valuationCurrency">The currency to get the value in</param>
            <param name="subUserId">The id of the sub user</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.TransferAssetAsync(System.Int64,HTX.Net.Enums.AccountType,System.Int64,System.Int64,HTX.Net.Enums.AccountType,System.Int64,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer assets between accounts
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#asset-transfer" /></para>
            </summary>
            <param name="fromUserId">From user id</param>
            <param name="fromAccountType">From account type</param>
            <param name="fromAccountId">From account id</param>
            <param name="toUserId">To user id</param>
            <param name="toAccountType">To account type</param>
            <param name="toAccountId">To account id</param>
            <param name="asset">Asset to transfer</param>
            <param name="quantity">Amount to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountHistoryAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TransactionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of balance changes of specified user's account
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-account-history" /></para>
            </summary>
            <param name="accountId">The id of the account to get the balances for</param>
            <param name="asset">Asset name</param>
            <param name="transactionTypes">Blance change types</param>
            <param name="startTime">Far point of time of the query window. The maximum size of the query window is 1 hour. The query window can be shifted within 30 days</param>
            <param name="endTime">Near point of time of the query window. The maximum size of the query window is 1 hour. The query window can be shifted within 30 days</param>
            <param name="sort">Sorting order (Ascending by default)</param>
            <param name="size">Maximum number of items in each response (from 1 to 500, default is 100)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountLedgerAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TransactionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            This endpoint returns the balance changes of specified user's account.
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-account-ledger" /></para>
            </summary>
            <param name="accountId">The id of the account to get the ledger for</param>
            <param name="asset">Asset name</param>
            <param name="transactionTypes">Blanace change types</param>
            <param name="startTime">Far point of time of the query window. The maximum size of the query window is 10 days. The query window can be shifted within 30 days</param>
            <param name="endTime">Near point of time of the query window. The maximum size of the query window is 10 days. The query window can be shifted within 30 days</param>
            <param name="sort">Sorting order (Ascending by default)</param>
            <param name="size">Maximum number of items in each response (from 1 to 500, default is 100)</param>
            <param name="fromId">Only get orders with ID before or after this. Used together with the direction parameter</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetSubAccountBalancesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Gets a list of balances for a specific sub account
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-account-balance-of-a-sub-user" /></para>
            </summary>
            <param name="subAccountId">The id of the sub account to get the balances for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.TransferWithSubAccountAsync(System.Int64,System.String,System.Decimal,HTX.Net.Enums.TransferType,System.Threading.CancellationToken)">
            <summary>
            Transfer asset between parent and sub account
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#transfer-asset-between-parent-and-sub-account" /></para>
            </summary>
            <param name="subAccountId">The target sub account id to transfer to or from</param>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">The quantity of asset to transfer</param>
            <param name="transferType">The type of transfer</param>
            <param name="ct">Cancellation token</param>
            <returns>Unique transfer id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetDepositAddressesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Parent user and sub user could query deposit address of corresponding chain, for a specific crypto currency (except IOTA).
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#query-deposit-address" /></para>
            </summary>
            <param name="asset">Asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.Decimal,System.Decimal,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Parent user creates a withdraw request from spot account to an external address (exists in your withdraw address list), which doesn't require two-factor-authentication.
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#create-a-withdraw-request" /></para>
            </summary>
            <param name="address">The desination address of this withdraw</param>
            <param name="asset">Asset</param>
            <param name="quantity">The quantity of asset to withdraw</param>
            <param name="fee">The fee to pay with this withdraw</param>
            <param name="network">Set as "usdt" to withdraw USDT to OMNI, set as "trc20usdt" to withdraw USDT to TRX</param>
            <param name="addressTag">A tag specified for this address</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetWithdrawDepositAsync(HTX.Net.Enums.WithdrawDepositType,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.FilterDirection},System.Threading.CancellationToken)">
            <summary>
            Parent user and sub user searche for all existed withdraws and deposits and return their latest status.
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#search-for-existed-withdraws-and-deposits" /></para>
            </summary>
            <param name="type">Define transfer type to search</param>
            <param name="asset">The asset to withdraw</param>
            <param name="from">The transfer id to begin search</param>
            <param name="size">The number of items to return</param>
            <param name="direction">the order of response</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.RepayMarginLoanAsync(System.String,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Repay a margin loan
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#repay-margin-loan-cross-isolated" /></para>
            </summary>
            <param name="accountId">Account id</param>
            <param name="asset">Asset to repay</param>
            <param name="quantity">Quantity to repay</param>
            <param name="transactionId">Loan transaction ID</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.TransferSpotToIsolatedMarginAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer asset from spot account to isolated margin account
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#transfer-asset-from-spot-trading-account-to-isolated-margin-account-isolated" /></para>
            </summary>
            <param name="symbol">Trading symbol</param>
            <param name="asset">Asset to transfer</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.TransferIsolatedMarginToSpotAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer asset from isolated margin to spot account
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#transfer-asset-from-isolated-margin-account-to-spot-trading-account-isolated" /></para>
            </summary>
            <param name="symbol">Trading symbol</param>
            <param name="asset">Asset to transfer</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetIsolatedLoanInterestRateAndQuotaAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get isolated loan interest rate and quotas
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-loan-interest-rate-and-quota-isolated" /></para>
            </summary>
            <param name="symbols">Filter on symbols</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.RequestIsolatedMarginLoanAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Request a loan on isolated margin
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#request-a-margin-loan-isolated" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="asset">The asset</param>
            <param name="quantity">The quantity</param>
            <param name="ct">Cancellation token</param>
            <returns>Order id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.RepayIsolatedMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Repay a isolated margin loan
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#repay-margin-loan-isolated" /></para>
            </summary>
            <param name="orderId">Id to repay</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
            <returns>Order id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetIsolatedMarginClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.MarginOrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin orders history
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#search-past-margin-orders-isolated" /></para>
            </summary>
            <param name="symbol">The symbol to get history for</param>
            <param name="states">Filter by states</param>
            <param name="startDate">Filter by start date</param>
            <param name="endDate">Filter by end date</param>
            <param name="from">Start order id for use in combination with direction</param>
            <param name="direction">Direction of results in combination with from parameter</param>
            <param name="limit">Max amount of results</param>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetIsolatedMarginBalanceAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin account balance
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-balance-of-the-margin-loan-account-isolated" /></para>
            </summary>
            <param name="symbol">The symbol</param>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.TransferSpotToCrossMarginAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer from spot account to cross margin account
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#transfer-asset-from-spot-trading-account-to-cross-margin-account-cross" /></para>
            </summary>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.TransferCrossMarginToSpotAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer from cross margin account to spot account
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#transfer-asset-from-cross-margin-account-to-spot-trading-account-cross" /></para>
            </summary>
            <param name="asset">The asset to transfer</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetCrossLoanInterestRateAndQuotaAsync(System.Threading.CancellationToken)">
            <summary>
            Get cross margin interest rates and quotas
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-loan-interest-rate-and-quota-cross" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.RequestCrossMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Request a loan on cross margin
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#request-a-margin-loan-cross" /></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="quantity">The quantity</param>
            <param name="ct">Cancellation token</param>
            <returns>Order id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.RepayCrossMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Repay a isolated margin loan
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#repay-margin-loan-cross" /></para>
            </summary>
            <param name="orderId">Id to repay</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetCrossMarginClosedOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.MarginOrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin order history
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#search-past-margin-orders-cross" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="status">Filter by status</param>
            <param name="startDate">Filter by start date</param>
            <param name="endDate">Filter by end date</param>
            <param name="from">Start order id for use in combination with direction</param>
            <param name="direction">Direction of results in combination with from parameter</param>
            <param name="limit">Max amount of results</param>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetCrossMarginBalanceAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin account balance
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-balance-of-the-margin-loan-account-cross" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetRepaymentHistoryAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get repayment history
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#repayment-record-reference" /></para>
            </summary>
            <param name="repayId">Filter by repay id</param>
            <param name="accountId">Filter by account id</param>
            <param name="asset">Filter by asset</param>
            <param name="startTime">Only show records after this</param>
            <param name="endTime">Only show records before this</param>
            <param name="sort">Sort direction</param>
            <param name="limit">Result limit</param>
            <param name="fromId">Search id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetCurrentFeeRatesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get Current Fee Rate Applied to The User
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-current-fee-rate-applied-to-the-user" /></para>
            </summary>
            <param name="symbols">Filter on symbols</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData">
            <summary>
            HTX exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the latest ticker for all symbols
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-latest-tickers-for-all-pairs" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the ticker, including the best bid / best ask for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-latest-aggregated-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to get the ticker for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get candlestick data for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-klines-candles" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="period">The period of a single candlestick</param>
            <param name="limit">The amount of candlesticks</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets the order book for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-market-depth" /></para>
            </summary>
            <param name="symbol">The symbol to request for</param>
            <param name="mergeStep">The way the results will be merged together</param>
            <param name="limit">The depth of the book</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetLastTradeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the last trade for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-last-trade" /></para>
            </summary>
            <param name="symbol">The symbol to request for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the last x trades for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-most-recent-trades" /></para>
            </summary>
            <param name="symbol">The symbol to get trades for</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetSymbolDetails24HAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets 24h stats for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-last-24h-market-summary" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetNavAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets real time NAV for ETP
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-real-time-nav" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetSymbolStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the current market status
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-market-status" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of supported symbols
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-all-supported-trading-symbol" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets a list of supported currencies
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-all-supported-currencies" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetAssetDetailsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets a list of supported currencies and chains
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#apiv2-currency-amp-chains" /></para>
            </summary>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the server time
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-current-timestamp" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading">
            <summary>
            HTX trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.PlaceOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.Nullable{HTX.Net.Enums.SourceType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <summary>
            Places an order
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#place-a-new-order" /></para>
            </summary>
            <param name="accountId">The account to place the order for</param>
            <param name="symbol">The symbol to place the order for</param>
            <param name="side">The side of the order</param>
            <param name="type">The type of the order</param>
            <param name="quantity">The quantity of the order</param>
            <param name="price">The price of the order. Should be omitted for market orders</param>
            <param name="clientOrderId">The clientOrderId the order should get</param>
            <param name="source">Source. defaults to SpotAPI</param>
            <param name="stopPrice">Stop price</param>
            <param name="stopOperator">Operator of the stop price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOpenOrdersAsync(System.Nullable{System.Int64},System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of open orders
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-all-open-orders" /></para>
            </summary>
            <param name="accountId">The account id for which to get the orders for</param>
            <param name="symbol">The symbol for which to get the orders for</param>
            <param name="side">Only get buy or sell orders</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancels an open order
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#submit-cancel-for-an-order" /></para>
            </summary>
            <param name="orderId">The id of the order to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelOrderByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancels an open order
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#submit-cancel-for-an-order-based-on-client-order-id" /></para>
            </summary>
            <param name="clientOrderId">The client id of the order to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple open orders
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#submit-cancel-for-multiple-orders-by-ids" /></para>
            </summary>
            <param name="orderIds">The ids of the orders to cancel</param>
            <param name="clientOrderIds">The client ids of the orders to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelOrdersByCriteriaAsync(System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple open orders
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#submit-cancel-for-multiple-orders-by-criteria" /></para>
            </summary>
            <param name="accountId">The account id used for this cancel</param>
            <param name="symbols">The trading symbol list (maximum 10 symbols, default value all symbols)</param>
            <param name="side">Filter on the direction of the trade</param>
            <param name="limit">The number of orders to cancel [1, 100]</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get details of an order
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-order-detail-of-an-order" /></para>
            </summary>
            <param name="orderId">The id of the order to retrieve</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOrderByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of an order by client order id
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-order-detail-of-an-order-based-on-client-order-id" /></para>
            </summary>
            <param name="clientOrderId">The client id of the order to retrieve</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOrderTradesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Gets a list of trades made for a specific order
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-the-match-result-of-an-order" /></para>
            </summary>
            <param name="orderId">The id of the order to get trades for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatus},System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of orders
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#search-past-orders" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for</param>
            <param name="states">The states of orders to return</param>
            <param name="types">The types of orders to return</param>
            <param name="startTime">Only get orders after this date</param>
            <param name="endTime">Only get orders before this date</param>
            <param name="fromId">Only get orders with ID before or after this. Used together with the direction parameter</param>
            <param name="direction">Direction of the results to return when using the fromId parameter</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetUserTradesAsync(System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatus},System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of trades for a specific symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#search-match-results" /></para>
            </summary>
            <param name="states">Only return trades with specific states</param>
            <param name="symbol">The symbol to retrieve trades for</param>
            <param name="types">The type of orders to return</param>
            <param name="startTime">Only get orders after this date</param>
            <param name="endTime">Only get orders before this date</param>
            <param name="fromId">Only get orders with ID before or after this. Used together with the direction parameter</param>
            <param name="direction">Direction of the results to return when using the fromId parameter</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetHistoricalOrdersAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Gets a list of history orders
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#search-historical-orders-within-48-hours" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for</param>
            <param name="startTime">Only get orders after this date</param>
            <param name="endTime">Only get orders before this date</param>
            <param name="direction">Direction of the results to return</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.PlaceConditionalOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.ConditionalOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.TimeInForce},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new conditional order
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#place-a-conditional-order" /></para>
            </summary>
            <param name="accountId">The account the order should be placed from</param>
            <param name="symbol">The symbol the order is for</param>
            <param name="side">Side of the order</param>
            <param name="type">Type of the order</param>
            <param name="stopPrice">Stop price of the order</param>
            <param name="quantity">Quantity of the order</param>
            <param name="price">Price of the order</param>
            <param name="quoteQuantity">Quote quantity of the order</param>
            <param name="trailingRate">Trailing rate of the order</param>
            <param name="timeInForce">Time in force</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelConditionalOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Cancel conditional orders
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#cancel-conditional-orders-before-triggering" /></para>
            </summary>
            <param name="clientOrderIds">Client order ids of the conditional orders to cancels</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOpenConditionalOrdersAsync(System.Nullable{System.Int64},System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.ConditionalOrderType},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get open conditional orders based on the parameters
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#query-open-conditional-orders-before-triggering" /></para>
            </summary>
            <param name="accountId">Filter by account id</param>
            <param name="symbol">Filter by symbol</param>
            <param name="side">Filter by side</param>
            <param name="type">Filter by type</param>
            <param name="sort">Sort direction</param>
            <param name="limit">Max results</param>
            <param name="fromId">Ids after this</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetClosedConditionalOrdersAsync(System.String,HTX.Net.Enums.ConditionalOrderStatus,System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.ConditionalOrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get closed conditional orders
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#query-conditional-order-history" /></para>
            </summary>
            <param name="accountId">Filter by account id</param>
            <param name="symbol">Filter by symbol</param>
            <param name="side">Filter by side</param>
            <param name="type">Filter by type</param>
            <param name="sort">Sort direction</param>
            <param name="limit">Max results</param>
            <param name="fromId">Ids after this</param>
            <param name="ct">Cancelation token</param>
            <param name="status">Filter by status</param>
            <param name="startTime">Return only entries after this time</param>
            <param name="endTime">Return only entries before this time</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetConditionalOrderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a conditional order by id
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#query-a-specific-conditional-order" /></para>
            </summary>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval)">
            <summary>
            Gets candlestick data for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-latest-tickers-for-all-pairs" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="period">The period of a single candlestick</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to candlestick updates for a symbol
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="period">The period of a single candlestick</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetOrderBookWithMergeStepAsync(System.String,System.Int32)">
            <summary>
            Gets the current order book for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-depth" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="mergeStep">The way the results will be merged together</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetOrderBookAsync(System.String,System.Int32)">
            <summary>
            Gets the current order book for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-by-price-incremental-update" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for</param>
            <param name="levels">The amount of rows. 5, 20, 150 or 400</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToPartialOrderBookUpdates100MilisecondAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to order book updates for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-by-price-incremental-update" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="levels">The number of price levels. 5, 10 or 20</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToPartialOrderBookUpdates1SecondAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to order book updates for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-depth" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="mergeStep">The way the results will be merged together</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToOrderBookChangeUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXIncementalOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to order book updates for a symbol, 
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-by-price-incremental-update" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="levels">The number of price levels. 5, 20, 150 or 400</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetTradeHistoryAsync(System.String)">
            <summary>
            Gets a list of trades for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#trade-detail" /></para>
            </summary>
            <param name="symbol">The symbol to get trades for</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to trade updates for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#trade-detail" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetSymbolDetailsAsync(System.String)">
            <summary>
            Gets details for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-details" /></para>
            </summary>
            <param name="symbol">The symbol to get data for</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToSymbolDetailUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolDetails}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to symbol detail updates for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-details" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to updates for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-ticker" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXSymbolTicker}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to updates for all tickers
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-ticker" /></para>
            </summary>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToBestOfferUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXBestOffer}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to changes of a symbol's best ask/bid
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#best-bid-offer" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe to</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to updates of orders
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#subscribe-order-updates" /></para>
            </summary>
            <param name="symbol">Subscribe on a specific symbol</param>
            <param name="onOrderSubmitted">Event handler for the order submitted event</param>
            <param name="onOrderMatched">Event handler for the order matched event</param>
            <param name="onOrderCancelation">Event handler for the order cancelled event</param>
            <param name="onConditionalOrderTriggerFailure">Event handler for the conditional order trigger failed event</param>
            <param name="onConditionalOrderCanceled">Event handler for the condition order canceled event</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToAccountUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXAccountUpdate}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Subscribe to updates of account balances
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#subscribe-account-change" /></para>
            </summary>
            <param name="onAccountUpdate">Event handler</param>
            <param name="updateMode">The update mode. Defaults to 1, see API docs for more info</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToOrderDetailsUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXTradeUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to detailed order matched/canceled updates
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#subscribe-trade-details-amp-order-cancellation-post-clearing" /></para>
            </summary>
            <param name="symbol">Subscribe to a specific symbol</param>
            <param name="onOrderMatch">Event handler for the order matched event</param>
            <param name="onOrderCancel">Event handler for the order canceled event</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApi">
            <summary>
            Usdt margin swap api endpoints
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount">
            <summary>
            HTX usdt swap account endpoints
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetAssetValuationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get asset values
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-asset-valuation"/></para>
            </summary>
            <param name="asset">The asset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin account info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-user-s-account-information"/></para>
            </summary>
            <param name="contractCode">Optional contract code filter</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin account info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-user-39-s-account-information"/></para>
            </summary>
            <param name="marginAccount">Optional margin account filter</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAssetAndPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin assets and positions
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-assets-and-positions"/></para>
            </summary>
            <param name="marginAccount">Margin account</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAvailableLeverageAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin available leverage
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-user-s-available-leverage" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin positions
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-user-39-s-position-information" /></para>
            </summary>
            <param name="contractCode">Filter by contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin settlement records
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-settlement-records-of-users" /></para>
            </summary>
            <param name="marginAccount">Margin account</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginSubAccountsAssetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin sub account assets
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-assets-information-of-all-sub-accounts-under-the-master-account" /></para>
            </summary>
            <param name="marginAccount">Margin account</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetFinancialRecordsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.FinancialRecordType},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get financial records
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-account-financial-records" /></para>
            </summary>
            <param name="marginAccount">Margin account</param>
            <param name="contractCode">Contract code</param>
            <param name="types">Filter by type</param>
            <param name="createDate">Filter by create date</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAssetAndPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin assets and positisons
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-assets-and-positions" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAvailableLeverageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin available leverage
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-user-s-available-leverage" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin position info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-user-s-position-information" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin settlement records
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-settlement-records-of-users" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginSubAccountsAssetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin sub account assets
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-assets-information-of-all-sub-accounts-under-the-master-account" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetMasterSubTransferRecordsAsync(System.String,System.Int32,System.Nullable{HTX.Net.Enums.MasterSubTransferType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get master sub account transfer records
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-transfer-records-between-master-and-sub-account" /></para>
            </summary>
            <param name="marginAccount">Margin account</param>
            <param name="daysInHistory">Days in history</param>
            <param name="type">Filter by type</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.GetTradingFeesAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get trading fees
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-information-on-swap-trading-fee" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business tpye</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.ModifyCrossMarginPositionModeAsync(System.String,HTX.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <summary>
            Switch cross margin position mode
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-switch-position-mode" /></para>
            </summary>
            <param name="marginAccount">Margin account</param>
            <param name="positionMode">Position mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.ModifyIsolatedMarginPositionModeAsync(System.String,HTX.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <summary>
            Switch isolated margin position mode
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-switch-position-mode" /></para>
            </summary>
            <param name="marginAccount">Margin account</param>
            <param name="positionMode">Position mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.SetSubAccountsTradingPermissionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set sub account trading permissions
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-set-a-batch-of-sub-account-trading-permissions" /></para>
            </summary>
            <param name="subAccountUids">Uids of the subaccounts</param>
            <param name="enabled">Enable trading</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.TransferMarginAccountsAsync(System.String,System.String,System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Transfer between margin accounts
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-transfer-between-different-margin-accounts-under-the-same-account" /></para>
            </summary>
            <param name="asset">Asset to transfer</param>
            <param name="fromMarginAccount">From account</param>
            <param name="toMarginAccount">To account</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiAccount.TransferMasterSubAsync(System.String,System.String,System.String,System.String,System.Decimal,HTX.Net.Enums.MasterSubTransferType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Transfer between master and sub account
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-transfer-between-master-and-sub-account" /></para>
            </summary>
            <param name="subUid">Sub account uid</param>
            <param name="asset">Asset to transfer</param>
            <param name="fromMarginAccount">From account</param>
            <param name="toMarginAccount">To account</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="type">Type</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData">
            <summary>
            HTX usdt margin swap exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetBasisDataAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get basis data
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-basis-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="interval">Kline interval</param>
            <param name="limit">Limit</param>
            <param name="basisPriceType">Price type (open, close, high, low, average)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetBestOfferAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get the best current offer
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-get-market-bbo-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="type">Type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetContractInfoAsync(System.String,System.Nullable{HTX.Net.Enums.MarginMode},System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get contract info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-swap-info" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="supportMarginMode">Support margin mode</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetCrossMarginAdjustFactorInfoAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin adjust factor info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-information-on-tiered-adjustment-factor" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="asset">Asset</param>
            <param name="contractType">Type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetCrossMarginTradeStatusAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin trade status
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-information-on-trade-state" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Asset</param>
            <param name="contractType">Type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetCrossMarginTransferStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin transfer status
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-information-on-transfer-state" /></para>
            </summary>
            <param name="marginAccount">Margin account</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetCrossTieredMarginInfoAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Get cross tiered margin info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-query-information-on-tiered-margin" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetEstimatedFundingRateKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get estimated funding rate kliens
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-estimated-funding-rate-kline-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="interval">Kline interval</param>
            <param name="limit">Limit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetEstimatedSettlementPriceAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get estimated settlement price
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-get-the-estimated-settlement-price" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetFundingRateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get funding rate
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-funding-rate" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetFundingRatesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get funding rates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-a-batch-of-funding-rate" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetHistoricalFundingRatesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical funding rates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-historical-funding-rate" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetHistoricalSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical settlement records
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-historical-settlement-records-of-the-platform-interface" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetInsuranceFundHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get insurance fund history
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-history-records-of-insurance-fund-balance" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetIsolatedMarginAdjustFactorInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin adjust factor info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-information-on-tiered-adjustment-factor" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetIsolatedStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin status
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-information-on-system-status" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetIsolatedMarginTieredInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin tier info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-query-information-on-tiered-margin" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Threading.CancellationToken)">
            <summary>
            Get klines
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-get-kline-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="interval">Kline interval</param>
            <param name="limit">Limit</param>
            <param name="from">Filter by start time</param>
            <param name="to">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetLastTradesAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get last trades
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-the-last-trade-of-a-contract" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetLiquidationOrdersAsync(System.Int32,HTX.Net.Enums.LiquidationTradeType,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get liquidation orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-liquidation-orders" /></para>
            </summary>
            <param name="createDate">Create date</param>
            <param name="tradeType">Trade type</param>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetMarketDataAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get market data
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-get-market-data-overview" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetMarketDatasAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get market datas
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-get-a-batch-of-market-data-overview" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetOpenInterestAsync(HTX.Net.Enums.InterestPeriod,HTX.Net.Enums.Unit,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get open interest
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-information-on-open-interest" /></para>
            </summary>
            <param name="period">Period</param>
            <param name="unit">Unit</param>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="type">Type</param>
            <param name="limit">Limit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetOrderBookAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-get-market-depth" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="step">Merge step</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetPremiumIndexKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get premium index klines
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-premium-index-kline-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="interval">Interval</param>
            <param name="limit">Limit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetRecentTradesAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get recent trades
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-a-batch-of-trade-records-of-a-contract" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="limit">Limit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get server time
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#get-current-system-timestamp" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetSwapIndexPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get swap index price
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-swap-index-price-information" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetSwapOpenInterestAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get swap open interest
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-get-swap-open-interest-information" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business tpye</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetSwapPriceLimitationAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get swap price limitation
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-swap-price-limitation" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract tpye</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiExchangeData.GetSwapRiskInfoAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get swap risk info
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-query-information-on-contract-insurance-fund-balance-and-estimated-clawback-rate" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading">
            <summary>
            HTX usdt margin swap trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.CancelAllCrossMarginOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <summary>
            Cancel all cross margin orders fitting the parameters
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-cancel-all-orders" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="side">Side</param>
            <param name="offset">Offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.CancelAllIsolatedMarginOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <summary>
            Cancel all isolated margin order fitting the parameters
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-cancel-all-orders" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="side">Side</param>
            <param name="offset">Offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.CancelCrossMarginOrderAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Cancel cross margin order
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-cancel-all-orders" /></para>
            </summary>
            <param name="orderId">The order id</param>
            <param name="clientOrderId">The client order id</param>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.CancelCrossMarginOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Cancel cross margin orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-cancel-all-orders" /></para>
            </summary>
            <param name="orderIds">Order ids</param>
            <param name="clientOrderIds">Client order ids</param>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.CancelIsolatedMarginOrderAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel isolated margin order
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-cancel-an-order" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.CancelIsolatedMarginOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel isolated margin orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-cancel-an-order" /></para>
            </summary>
            <param name="contractCode">Contract  code</param>
            <param name="orderId">Order ids</param>
            <param name="clientOrderId">Client order ids</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.ChangeCrossMarginLeverageAsync(System.Int32,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Change cross margin leverage
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-switch-leverage" /></para>
            </summary>
            <param name="leverageRate">Leverage rate</param>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.ChangeIsolatedMarginLeverageAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Change isolated margin leverage
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-switch-leverage" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginClosedOrdersAsync(HTX.Net.Enums.MarginTradeType,System.Boolean,System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin closed orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-get-history-orders-new" /></para>
            </summary>
            <param name="tradeType">Trade type</param>
            <param name="allOrders">All orders</param>
            <param name="daysInHistory">Days in history</param>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginOpenOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin open orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-current-unfilled-order-acquisition" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by</param>
            <param name="tradeType">Trade type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginOrderAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross margin order
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-get-information-of-order" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginOrderDetailsAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get cross margin order details
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-get-detail-information-of-order" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-get-information-of-order" /></para>
            </summary>
            <param name="orderIds">Order ids</param>
            <param name="clientOrderIds">Client order ids</param>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetCrossMarginUserTradesAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin user trades
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-get-history-match-results" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="tradeType">Trade type</param>
            <param name="daysInHistory">Days in history</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginClosedOrdersAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Boolean,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin closed orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-get-history-orders" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="tradeType">Trade type</param>
            <param name="allOrders">All orders</param>
            <param name="daysInHistory">Days in history</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin open orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-current-unfilled-order-acquisition" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by</param>
            <param name="tradeType">Trade type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginOrderAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get isoalted margin order
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-get-information-of-an-order" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginOrderDetailsAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin order details
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-order-details-acquisition" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin orders
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-get-information-of-an-order" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="orderIds">Order ids</param>
            <param name="clientOrderIds">Client order ids</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.GetIsolatedMarginUserTradesAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin user trades
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-acquire-history-match-results-new" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="tradeType">Trade type</param>
            <param name="daysInHistory">Days in history</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.PlaceCrossMarginOrderAsync(System.Decimal,HTX.Net.Enums.OrderSide,System.Int32,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Place a new cross margin order
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#cross-place-an-order" /></para>
            </summary>
            <param name="quantity">Order quantity</param>
            <param name="side">Order side</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="contractCode">Contract code</param>
            <param name="symbol">Symbol</param>
            <param name="contractType">Contract type</param>
            <param name="price">Price</param>
            <param name="offset">Offset</param>
            <param name="orderPriceType">Order price type</param>
            <param name="takeProfitTriggerPrice">Take profit trigger price</param>
            <param name="takeProfitOrderPrice">Take profit order price</param>
            <param name="takeProfitOrderPriceType">Take profit order price type</param>
            <param name="stopLossTriggerPrice">Stop loss trigger price</param>
            <param name="stopLossOrderPrice">Stop loss order price</param>
            <param name="stopLossOrderPriceType">Stop loss order price type</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXRestClientUsdtMarginSwapApiTrading.PlaceIsolatedMarginOrderAsync(System.String,System.Decimal,HTX.Net.Enums.OrderSide,System.Int32,System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Place a new isolated margin order
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#isolated-place-an-order" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="quantity">Quantity</param>
            <param name="side">Order side</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="price">Price</param>
            <param name="offset">Offset</param>
            <param name="orderPriceType">Order price type</param>
            <param name="takeProfitTriggerPrice">Take profit trigger price</param>
            <param name="takeProfitOrderPrice">Take profit order price</param>
            <param name="takeProfitOrderPriceType">Take profit order price type</param>
            <param name="stopLossTriggerPrice">Stop loss trigger price</param>
            <param name="stopLossOrderPrice">Stop loss order price</param>
            <param name="stopLossOrderPriceType">Stop loss order price type</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi">
            <summary>
            Usdt margin swap streams
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToBasisUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to basis updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-basis-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="period">Period</param>
            <param name="priceType">Price type</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToBestOfferUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to best offer updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-market-bbo-data-push" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToEstimatedFundingRateKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to estimated funding rate kline updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-estimated-funding-rate-kline-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToIncrementalOrderBookUpdatesAsync(System.String,System.Boolean,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to incremental order book updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-incremental-market-depth-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="snapshot">Snapshot or incremental</param>
            <param name="limit">Depth</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToIndexKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to index kline updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-index-kline-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates
            <para><a href = "https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-kline-data" /></para >
            </summary >
            <param name="contractCode">Contract code</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToMarkPriceKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mark price updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-kline-data-of-mark-price" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-market-depth-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="mergeStep">Merge step</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToPremiumIndexKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to premium index kline updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-premium-index-kline-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToSymbolTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-market-detail-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtMarginSwapApi.IHTXSocketClientUsdtMarginSwapApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://huobiapi.github.io/docs/usdt_swap/v1/en/#general-subscribe-trade-detail-data" /></para>
            </summary>
            <param name="contractCode">Contract code</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.IHTXOrderBookFactory">
            <summary>
            HTX order book factory
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.IHTXOrderBookFactory.Spot">
            <summary>
            Spot order book factory methods
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.IHTXOrderBookFactory.CreateSpot(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the Spot API
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Order book options</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Objects.HTXApiAddresses">
            <summary>
            Api addresses usable for the HTX clients
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.HTXApiAddresses.RestClientAddress">
            <summary>
            The address used by the HTXRestClient for the rest spot API
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.HTXApiAddresses.SocketClientAddress">
            <summary>
            The address used by the HTXSocketClient for the public socket API
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.HTXApiAddresses.UsdtMarginSwapRestClientAddress">
            <summary>
            The address used by the HTXRestClient for the rest usdt margin swaps API
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.HTXApiAddresses.UsdtMarginSwapSocketClientAddress">
            <summary>
            The address used by the HTXSocketClient for the private user socket API
            </summary>
        </member>
        <member name="F:HTX.Net.Objects.HTXApiAddresses.Default">
            <summary>
            The default addresses to connect to the HTX.com API
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXSocketResponse`1.Timestamp">
            <summary>
            The timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXSocketResponse`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXSocketResponse2.Timestamp">
            <summary>
            The timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXSocketResponse2`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXDataEvent`1.Action">
            <summary>
            The action
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXDataEvent`1.Channel">
            <summary>
            The name of the data channel
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXDataEvent`1.Timestamp">
            <summary>
            The timestamp of the update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXDataEvent`1.Data">
            <summary>
            The data of the update
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAccount">
            <summary>
            HTX account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccount.Id">
            <summary>
            The id of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccount.Status">
            <summary>
            The state of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccount.Type">
            <summary>
            The type of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccount.SubType">
            <summary>
            Sub state
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAccountBalances">
            <summary>
            Account and balance info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountBalances.Data">
            <summary>
            The list of balances
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAccountHistory">
            <summary>
            Account history data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.AccountId">
            <summary>
            Account ID
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Quantity">
            <summary>
            Quantity change (positive value if income, negative value if outcome)	
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Type">
            <summary>
            Blance change types
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Available">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Total">
            <summary>
            Account balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Timestamp">
            <summary>
            Transaction time (database time)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.RecordId">
            <summary>
            Unique record ID in the database
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAccountValuation">
            <summary>
            Account valuation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountValuation.Balance">
            <summary>
            The balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountValuation.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAssetInfo">
            <summary>
            Info on an asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetInfo.Status">
            <summary>
            Status of the asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetInfo.Networks">
            <summary>
            Networks
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXNetwork">
            <summary>
            Info on an asset network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.Network">
            <summary>
            Network name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.BaseNetwork">
            <summary>
            Base network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.BaseNetworkProtocol">
            <summary>
            Protocol of the base network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.IsDynamic">
            <summary>
            Is dynamic fee type or not (only applicable to withdrawFeeType = fixed)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.DepositStatus">
            <summary>
            Deposit status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.MaxTransactFeeWithdraw">
            <summary>
            Maximum withdraw fee in each request (only applicable to withdrawFeeType = circulated or ratio)	
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.MaxWithdrawQuantity">
            <summary>
            Max withdraw quantity per request
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.MinDepositQuantity">
            <summary>
            Min deposit quantity per request
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.MinWithdrawQuantity">
            <summary>
            Min withdraw quantity per request
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.TransactFeeWithdraw">
            <summary>
            Withdraw fee in each request (only applicable to withdrawFeeType = fixed)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.TransactFeeRateWithdraw">
            <summary>
            Withdraw fee in each request (only applicable to withdrawFeeType = ratio)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.MinTransactFeeWithdraw">
            <summary>
            Minimal withdraw fee in each request (only applicable to withdrawFeeType = circulated or ratio)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.NumberOfConfirmations">
            <summary>
            Number of confirmations required for deposit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.NumberOfFastConfirmations">
            <summary>
            Number of confirmations required for quick success (trading allowed but withdrawal disallowed)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.WithdrawFeeType">
            <summary>
            Type of withdraw fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.WithdrawPrecision">
            <summary>
            Precision of withdrawing
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.WithdrawQuotaPerDay">
            <summary>
            Withdraw quota per day
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.WithdrawQuotaPerYear">
            <summary>
            Withdraw quota per year
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.WithdrawQuotaTotal">
            <summary>
            Withdraw quota in total
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNetwork.WithdrawStatus">
            <summary>
            Withdraw status
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBalance">
            <summary>
            Balance data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalance.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalance.Type">
            <summary>
            The type of the balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalance.Balance">
            <summary>
            The balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalance.SequenceNumber">
            <summary>
            Sequence number of the update
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBalanceWrapper">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalanceWrapper.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalanceWrapper.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalanceWrapper.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBatchCancelResult">
            <summary>
            Result of a batch cancel
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchCancelResult.Successful">
            <summary>
            Orders that were successfully canceled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchCancelResult.Failed">
            <summary>
            Orders that failed to cancel
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXFailedCancelResult">
            <summary>
            Cancel result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.ErrorCode">
            <summary>
            The error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.OrderId">
            <summary>
            The id of the failed order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.OrderStatus">
            <summary>
            The state of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.ClientOrderId">
            <summary>
            The id of the failed order
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBestOffer">
            <summary>
            Info on a symbol's best offer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.QuoteTime">
            <summary>
            Time of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.BestBidQuantity">
            <summary>
            Quantity of the best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.BestAskQuantity">
            <summary>
            Quantity of the best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.Sequence">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXByCriteriaCancelResult">
            <summary>
            Result of Cancel Orders by Criteria
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXByCriteriaCancelResult.Successful">
            <summary>
            The number of cancel request sent successfully
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXByCriteriaCancelResult.Failed">
            <summary>
            The number of cancel request failed
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXByCriteriaCancelResult.NextId">
            <summary>
            the next order id that can be canceled
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXConditionalOrder">
            <summary>
            Conditional order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.AccountId">
            <summary>
            Acount id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.TrailingRate">
            <summary>
            Trailing rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.ErrorCode">
            <summary>
            Error code if the conditional order is rejected
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.ErrorMessage">
            <summary>
            Error message if conditional order is rejected
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXConditionalOrderCancelResult">
            <summary>
            Conditional order cancelation result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrderCancelResult.Accepted">
            <summary>
            Orders accepted for cancelation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrderCancelResult.Rejected">
            <summary>
            Orders rejected for cancelation
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.Address">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.AddressTag">
            <summary>
            Deposit address tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.Network">
            <summary>
            Block chain name
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXFeeRate">
            <summary>
            Current transaction fee rate applied to the user
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.ActualMakerRate">
            <summary>
            Basic fee rate – passive side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.ActualTakerRate">
            <summary>
            Basic fee rate – aggressive side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.MakerFeeRate">
            <summary>
            Deducted fee rate – passive side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.TakerFeeRate">
            <summary>
            Basic fee rate – aggressive side
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXLedgerEntry">
            <summary>
            Ledger entry
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransactionQuantity">
            <summary>
            Quantity of the transaction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransactionType">
            <summary>
            Type of transaction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransferType">
            <summary>
            Type of transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.Transferer">
            <summary>
            Transferer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.Transferee">
            <summary>
            Transferee
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXLoanInfo">
            <summary>
            Loan info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfo.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfo.Assets">
            <summary>
            Currencies
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXLoanInfoAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.MinLoanQuantity">
            <summary>
            Minimal loan quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.MaxLoanQuantity">
            <summary>
            Maximal loan quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.LoanableQuantity">
            <summary>
            Remaining loanable quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.ActualRate">
            <summary>
            Actual interest rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXMarginBalances">
            <summary>
            Margin account balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.AccountBalanceSum">
            <summary>
            Account balance sum
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.DebtBalanceSum">
            <summary>
            Debt balance sum
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.FlPrice">
            <summary>
            The price which margin closeout was triggered
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.FlType">
            <summary>
            Fl type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.List">
            <summary>
            Account details
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXIsolatedBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIsolatedBalance.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIsolatedBalance.Type">
            <summary>
            Balance type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIsolatedBalance.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXMarginOrder">
            <summary>
            Margin order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.Id">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.AccrueTime">
            <summary>
            Accrue time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.LoanQuantity">
            <summary>
            Loan quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.LoanBalance">
            <summary>
            Loan balance left
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.InterestRate">
            <summary>
            Interst rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.InterestQuantity">
            <summary>
            Interest quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.InterestBalance">
            <summary>
            Interest left
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.Status">
            <summary>
            State
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.PaidPoints">
            <summary>
            Paid HTX points
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.PaidAsset">
            <summary>
            Paid asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.FilledPoints">
            <summary>
            Filled HTX points
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.FilledHt">
            <summary>
            HT deduction amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.DeductRate">
            <summary>
            Deduct rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.DeductAsset">
            <summary>
            Deduct asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.DeductQuantity">
            <summary>
            Deduct quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.UpdateTime">
            <summary>
            Last updated
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.HourInterestRate">
            <summary>
            Hourly interest rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.DayInterestRate">
            <summary>
            Daily interest rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXNav">
            <summary>
            NAV info for ETP
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.Nav">
            <summary>
            Latest Nav
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.NavTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.Outstanding">
            <summary>
            Outstanding shares
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.Basket">
            <summary>
            Baskets
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.ActualLeverage">
            <summary>
            Actual leverage ratio
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBasket">
            <summary>
            Basket
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBasket.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBasket.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOpenOrder">
            <summary>
            Open order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Id">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.ClientOrderId">
            <summary>
            The order id as specified by the client
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.AccountId">
            <summary>
            The id of the account that placed the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.CreateTime">
            <summary>
            The time the order was created
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.CancelTime">
            <summary>
            The time the order was canceled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.CompleteTime">
            <summary>
            The time the order was completed
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Source">
            <summary>
            The source of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Status">
            <summary>
            The state of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.QuantityFilled">
            <summary>
            The quantity of the order that is filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.QuoteQuantityFilled">
            <summary>
            Filled cash quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Fee">
            <summary>
            The quantity of fees paid for the filled quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Id">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.ClientOrderId">
            <summary>
            The order id as specified by the client
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.AccountId">
            <summary>
            The id of the account that placed the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.CreateTime">
            <summary>
            The time the order was created
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.CancelTime">
            <summary>
            The time the order was canceled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.CompleteTime">
            <summary>
            The time the order was finished
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Source">
            <summary>
            The source of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Status">
            <summary>
            The state of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.QuantityFilled">
            <summary>
            The quantity of the order that is filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.QuoteQuantityFilled">
            <summary>
            Filled cash quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Fee">
            <summary>
            The quantity of fees paid for the filled quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBook.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBook.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBook.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXIncementalOrderBook">
            <summary>
            Incremental order book update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIncementalOrderBook.SequenceNumber">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIncementalOrderBook.PreviousSequenceNumber">
            <summary>
            Previous sequence number
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIncementalOrderBook.Bids">
            <summary>
            List of changed bids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIncementalOrderBook.Asks">
            <summary>
            List of changed asks
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrders">
            <summary>
            Orders info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrders.NextTime">
            <summary>
            Timestamp for pagination
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrders.Orders">
            <summary>
            List of ticks for symbols
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrderTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Symbol">
            <summary>
            The symbol of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Timestamp">
            <summary>
            The timestamp in milliseconds when this record is created
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Quantity">
            <summary>
            The quantity which has been filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Fee">
            <summary>
            Transaction fee (positive value). If maker rebate applicable, revert maker rebate value per trade (negative value).
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.FilledPoints">
            <summary>
            Deduction amount (unit: in ht or hbpoint).
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.TradeId">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.MatchId">
            <summary>
            The id of the match
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.OrderId">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Price">
            <summary>
            The limit price of limit order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Source">
            <summary>
            The source where the order was triggered, possible values: sys, web, api, app
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Role">
            <summary>
            The role in the transaction: taker or maker
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.FeeAsset">
            <summary>
            Asset of transaction fee or transaction fee rebate (transaction fee of buy order is based on base asset, transaction fee of sell order is based on quote asset; transaction fee rebate of buy order is based on quote asset, transaction fee rebate of sell order is based on base asset)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.FeeDeductAsset">
            <summary>
            Deduction type: ht or hbpoint.
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.FeeDeductStatus">
            <summary>
            Fee deduction status.
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPlacedConditionalOrder">
            <summary>
            Placed conditional order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlacedConditionalOrder.ClientOrderId">
            <summary>
            The id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPlacedOrder">
            <summary>
            Placed order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlacedOrder.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXRepayment">
            <summary>
            Repayment info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.RepayId">
            <summary>
            Repayment id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.RepayTime">
            <summary>
            Repay time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.RepaidQuantity">
            <summary>
            Repay quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.Transactions">
            <summary>
            Transactions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXRepayTransaction">
            <summary>
            Repayment transaction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.TransactId">
            <summary>
            Transact id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.RepaidPrincipal">
            <summary>
            Principal repaid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.RepaidInterest">
            <summary>
            Interest repaid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.PaidHt">
            <summary>
            HT paid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.PaidPoint">
            <summary>
            Points paid
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXRepaymentResult">
            <summary>
            Repayment result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepaymentResult.RepayId">
            <summary>
            Repayment id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepaymentResult.RepayTime">
            <summary>
            Repay time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubUserAccount">
            <summary>
            HTX sub-user account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccount.Type">
            <summary>
            The type of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccount.Activation">
            <summary>
            Whether the account is active of not
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccount.Transferrable">
            <summary>
            Whether transfers are allowed (only for spot account type)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccount.AccountIds">
            <summary>
            Account ids
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubUserAccountId">
            <summary>
            HTX sub-user account id and state
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccountId.Id">
            <summary>
            The id of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccountId.Status">
            <summary>
            The status of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccountId.SubType">
            <summary>
            Sub state
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubUserAccounts">
            <summary>
            HTX sub-user account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccounts.UserId">
            <summary>
            The id of the sub-user
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccounts.DeductMode">
            <summary>
            Deduct mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccounts.Accounts">
            <summary>
            List of accounts for the sub-user
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbol">
            <summary>
            Symbol data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.Name">
            <summary>
            The symbol name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.BaseAsset">
            <summary>
            The base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.QuoteAsset">
            <summary>
            The quote asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.PricePrecision">
            <summary>
            The precision of the price in decimal numbers
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.QuantityPrecision">
            <summary>
            The precision of the quantity in decimal numbers
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.SymbolPartition">
            <summary>
            Partition
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.Status">
            <summary>
            The status of the symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MinOrderQuantity">
            <summary>
            Minimum value of the quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MaxOrderQuantity">
            <summary>
            Maximum value of the quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MinLimitOrderQuantity">
            <summary>
            Minimum order quantity of limit order in base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MaxLimitOrderBuyQuantity">
            <summary>
            Max buy order quantity of limit order in base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MaxLimitOrderSellQuantity">
            <summary>
            Max sell order quantity of limit order in base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MaxLimitOrderQuantity">
            <summary>
            Max order quantity of limit order in base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MinMarketSellOrderQuantity">
            <summary>
            Minimum order quantity of sell-market order in base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MaxMarketSellOrderQuantity">
            <summary>
            Max order quantity of sell-market order in base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MaxMarketBuyOrderValue">
            <summary>
            Max order value of buy-market order in quote asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MinOrderValue">
            <summary>
            Minimum value of the order quantity in quote asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.MaxOrderValue">
            <summary>
            Max order value of limit order and buy-market order in usdt
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.ValuePrecision">
            <summary>
            The precision of the order quantity in quote asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.ApiTrading">
            <summary>
            Api trading status, enabled or disabled
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolData">
            <summary>
            Symbol data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.HighPrice">
            <summary>
            The highest price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.LowPrice">
            <summary>
            The lowest price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.OpenPrice">
            <summary>
            The price at the opening
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.ClosePrice">
            <summary>
            The last price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.Volume">
            <summary>
            The volume in base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.QuoteVolume">
            <summary>
            The volume in quote asset (quantity * price)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.TradeCount">
            <summary>
            The number of trades
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTicker">
            <summary>
            Ticker data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTicker.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXKline">
            <summary>
            Symbol kline data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXKline.OpenTime">
            <summary>
            The start time of the kline
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolDetails">
            <summary>
            Symbol details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolDetails.Id">
            <summary>
            The id of the details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolDetails.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTick">
            <summary>
            Symbol tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.BestBidQuantity">
            <summary>
            Quantity of the best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.BestAskQuantity">
            <summary>
            Quantity of the best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.LastTradePrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.LastTradeQuantity">
            <summary>
            Last trade quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolStatus">
            <summary>
            Status of the symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.Status">
            <summary>
            The status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.HaltStartTime">
            <summary>
            Start time of when market halted
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.HaltEndTime">
            <summary>
            Estimated end time of the halt
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.HaltReason">
            <summary>
            Reason for halting
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.AffectedSymbols">
            <summary>
            Affected symbols, comma separated or 'all' if all symbols are affected
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTickMerged">
            <summary>
            Symbol tick info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTickMerged.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTickMerged.Id">
            <summary>
            The id of the tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTickMerged.BestBid">
            <summary>
            The current best bid for the symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTickMerged.BestAsk">
            <summary>
            The current best ask for the symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBookEntry.Price">
            <summary>
            The price for this entry
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBookEntry.Quantity">
            <summary>
            The quantity for this entry
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolDatas">
            <summary>
            Symbol ticks
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolDatas.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolDatas.Ticks">
            <summary>
            List of ticks for symbols
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTicks">
            <summary>
            Symbol ticks
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTicks.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTicks.Ticks">
            <summary>
            List of ticks for symbols
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTrade">
            <summary>
            Symbol trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTrade.Timestamp">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTrade.Details">
            <summary>
            The details of the trade
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTradeDetails">
            <summary>
            Symbol trade details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Id">
            <summary>
            The id of the update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.TradeId">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Quantity">
            <summary>
            The quantity of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Side">
            <summary>
            The side of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Timestamp">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXTransactionResult">
            <summary>
            Transaction result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXTransactionResult.TransactionId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXTransactionResult.TransactionTime">
            <summary>
            Time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXUser">
            <summary>
            HTX user info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXUser.Id">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXUser.Status">
            <summary>
            The status of the user
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXWithdrawDeposit">
            <summary>
            Withdraw or Deposit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Id">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Type">
            <summary>
            Define transfer type to search, possible values: [deposit, withdraw]
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.SubType">
            <summary>
            Sub type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Asset">
            <summary>
            The crypto asset to withdraw
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.TransactionHash">
            <summary>
            The on-chain transaction hash
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Network">
            <summary>
            Block chain name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Quantity">
            <summary>
            The number of crypto asset transfered in its minimum unit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Address">
            <summary>
            The deposit or withdraw target address
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.AddressTag">
            <summary>
            The user defined address tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.FromAddressTag">
            <summary>
            The address tag of the address its from
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Fee">
            <summary>
            Withdraw fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Status">
            <summary>
            The status of this transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.ErrorCode">
            <summary>
            Error code for withdrawal failure, only returned when the type is "withdraw" and the state is "reject", "wallet-reject" and "failed".
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.ErrorMessage">
            <summary>
            Error description of withdrawal failure, only returned when the type is "withdraw" and the state is "reject", "wallet-reject" and "failed".
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.CreateTime">
            <summary>
            The timestamp in milliseconds for the transfer creation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.UpdateTime">
            <summary>
            The timestamp in milliseconds for the transfer's latest update
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXAccountUpdate">
            <summary>
            Account update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.Balance">
            <summary>
            Total balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.Available">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.ChangeType">
            <summary>
            Type of change
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.ChangeTime">
            <summary>
            Change time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.SequenceNumber">
            <summary>
            Update sequence number
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate">
            <summary>
            Best offer update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.Id">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.Bid">
            <summary>
            Best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.Ask">
            <summary>
            Best ask
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook">
            <summary>
            Incremental order book update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook.Id">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook.Bids">
            <summary>
            List of changed bids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIncementalOrderBook.Asks">
            <summary>
            List of changed asks
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate">
            <summary>
            Cancelation details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderQuantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.Operator">
            <summary>
            Operator
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderCreateTime">
            <summary>
            Order creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.QuantityRemaining">
            <summary>
            Remaining quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXOrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.UpdateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate">
            <summary>
            Submitted order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.Price">
            <summary>
            Price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.Quantity">
            <summary>
            Quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.QuoteQuantity">
            <summary>
            Value of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate">
            <summary>
            Matched order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.TradePrice">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.TradeQuantity">
            <summary>
            Trade volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.TradeTime">
            <summary>
            Timestamp of trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.IsTaker">
            <summary>
            Is the taker
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.QuantityRemaining">
            <summary>
            Remaining quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.QuantityFilled">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.Price">
            <summary>
            Price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.Quantity">
            <summary>
            Quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate">
            <summary>
            Canceled order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.QuantityRemaining">
            <summary>
            Remaining quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.QuantityFilled">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.Price">
            <summary>
            Price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.Quantity">
            <summary>
            Quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate">
            <summary>
            Info on a failed trigger for a conditional order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate.Side">
            <summary>
            Side of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate.ErrorCode">
            <summary>
            The error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate">
            <summary>
            Symbol update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.TradeTurnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.BestBid">
            <summary>
            Best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.BestAsk">
            <summary>
            Best ask
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXTradeUpdate">
            <summary>
            Trade update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Price">
            <summary>
            Price of this trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Quantity">
            <summary>
            Volume of this trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.IsTaker">
            <summary>
            Is the taker
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Timestamp">
            <summary>
            Time of trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.TransactionFee">
            <summary>
            Transaction fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.FeeAsset">
            <summary>
            Asset of the fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.FeeDeduct">
            <summary>
            Fee deduction quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.FeeDeductType">
            <summary>
            Fee deduction type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderQuantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Operator">
            <summary>
            Operator
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderCreateTime">
            <summary>
            Order creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate">
            <summary>
            Basis update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.ContractPrice">
            <summary>
            Contract price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.Basis">
            <summary>
            Basis
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.BasisRate">
            <summary>
            Basis rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate.Id">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate.Timestamp">
            <summary>
            Update timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Amount">
            <summary>
            Amount of trades
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.TradeTurnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAssetValue">
            <summary>
            Asset valuation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAssetValue.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAssetValue.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData">
            <summary>
            Basis data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.Basis">
            <summary>
            Basis
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.BasisRate">
            <summary>
            Basis rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.ContractPrice">
            <summary>
            Contract price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.Id">
            <summary>
            Unique id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchResult">
            <summary>
            Batch result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchResult.Errors">
            <summary>
            Errors in the batch
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchResult.Successes">
            <summary>
            Success
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchError">
            <summary>
            Batch operation error
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchError.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchError.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchError.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo">
            <summary>
            Contract info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.ContractSize">
            <summary>
            Contract size
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.PriceTick">
            <summary>
            Price tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.DeliveryDate">
            <summary>
            Deliverty date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.CreateDate">
            <summary>
            Created date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.SettlementDate">
            <summary>
            Settlement date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus">
            <summary>
            Contract status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.Open">
            <summary>
            Open order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.Close">
            <summary>
            Close order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.Cancel">
            <summary>
            Cancel order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.TranferIn">
            <summary>
            Deposit access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.TransferOut">
            <summary>
            Withdrawal access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MasterTransferSub">
            <summary>
            Transfer from master to sub
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.SubTransferMaster">
            <summary>
            Transfer from sub to master
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MasterTransferSubInnerIn">
            <summary>
            Master transfer sub inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MasterTransferSubInnerOut">
            <summary>
            Master transfer sub inner out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.SubTransferMasterInnerIn">
            <summary>
            Sub transfer master inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.SubTransferMasterInnerOut">
            <summary>
            Sub transfer master inner out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.TransferInnerIn">
            <summary>
            Transfer inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.TransferInnerOut">
            <summary>
            Tranfer inner out
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract">
            <summary>
            Cross margin account contract details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.ContractCode">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.ProfitUnreal">
            <summary>
            Profit unreal
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.LeverRate">
            <summary>
            Lever rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.TradePartition">
            <summary>
            Trade partition
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.ProfitReal">
            <summary>
            Profit real
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.ProfitUnreal">
            <summary>
            Profit unreal
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.WithdrawAvailable">
            <summary>
            Withdraw available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginStatic">
            <summary>
            Margin static
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.ContractDetails">
            <summary>
            Contract details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.FuturesContractDetails">
            <summary>
            Futures contract details
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAssetsAndPositions">
            <summary>
            Cross margin assets and positions info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAssetsAndPositions.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageAvailable">
            <summary>
            Available leverage info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageAvailable.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageAvailable.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageAvailable.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrderPage">
            <summary>
            Order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAssets">
            <summary>
            Sub account assets info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAssets.SubUid">
            <summary>
            Sub account uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAssets.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset">
            <summary>
            Sub account asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus">
            <summary>
            Cross margin trade status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Open">
            <summary>
            Open order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Close">
            <summary>
            Close order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Cancel">
            <summary>
            Cancel order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus">
            <summary>
            Cross margin transfer status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.TranferIn">
            <summary>
            Deposit access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.TransferOut">
            <summary>
            Withdrawal access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MasterTransferSub">
            <summary>
            Transfer from master to sub
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.SubTransferMaster">
            <summary>
            Transfer from sub to master
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MasterTransferSubInnerIn">
            <summary>
            Master transfer sub inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MasterTransferSubInnerOut">
            <summary>
            Master transfer sub inner out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.SubTransferMasterInnerIn">
            <summary>
            Sub transfer master inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.SubTransferMasterInnerOut">
            <summary>
            Sub transfer master inner out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.TransferInnerIn">
            <summary>
            Transfer inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.TransferInnerOut">
            <summary>
            Tranfer inner out
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage">
            <summary>
            User settlement record page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage.CurrentPage">
            <summary>
            Current pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord">
            <summary>
            User settlement record
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.MarginBalanceInit">
            <summary>
            Margin balance init
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.SettlementProfitReal">
            <summary>
            Settlement profit realized
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.SettlementTime">
            <summary>
            Settlement time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.Clawback">
            <summary>
            Clawback
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.FundingFee">
            <summary>
            Funding fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.OffsetProfitLoss">
            <summary>
            Offset profit loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.ContractDetails">
            <summary>
            Contract details
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract">
            <summary>
            Settlement contract details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.OffsetProfitLoss">
            <summary>
            Offset profit loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition">
            <summary>
            Settlement position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.CostOpen">
            <summary>
            Cost open
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.CostHoldPre">
            <summary>
            Cost hold before settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.ColdHold">
            <summary>
            Cost hold after settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.SettlementProfitUnreal">
            <summary>
            Settlement profit unreal
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.SettlementPrice">
            <summary>
            Settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserTradePage">
            <summary>
            Margin user trade page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserTradePage.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserTrade.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserTrade.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice">
            <summary>
            Estimated settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.EstimatedSettlementPrice">
            <summary>
            Estimated settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecordsPage">
            <summary>
            Financial records page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecordsPage.TotalPages">
            <summary>
            Total amount of pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecordsPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecordsPage.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecordsPage.Records">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord">
            <summary>
            Financial records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Id">
            <summary>
            Record id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Type">
            <summary>
            Record type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.FaceMarginAccount">
            <summary>
            Face margin account
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.EstimatedRate">
            <summary>
            Estimated rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.Asset">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.FundingTime">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.NextFundingTime">
            <summary>
            Next funding time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage">
            <summary>
            Funding rates page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage.TotalResults">
            <summary>
            Total results
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage.Rates">
            <summary>
            Rates
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate">
            <summary>
            Historical funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.AveragePremiumIndex">
            <summary>
            Average premium index
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.RealizedRate">
            <summary>
            Realized rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.FundingTime">
            <summary>
            Funding time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.Asset">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo">
            <summary>
            Insurance info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.TotalPage">
            <summary>
            Total amount of pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.TotalSize">
            <summary>
            Total amount of results
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.History">
            <summary>
            The history data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceValue">
            <summary>
            Insurance value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceValue.InsuranceFund">
            <summary>
            Insurance fund
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceValue.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.Asset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.ProfitReal">
            <summary>
            Profit real
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.ProfitUnreal">
            <summary>
            Profit unreal
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.WithdrawAvailable">
            <summary>
            Withdraw available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.LeverRate">
            <summary>
            Lever rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginStatic">
            <summary>
            Margin static
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAssetsAndPositions">
            <summary>
            Isolated margin assets and positions info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAssetsAndPositions.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageAvailable">
            <summary>
            Available leverage info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageAvailable.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageAvailable.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageAvailable.AvailableLevelRate">
            <summary>
            Available rates
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder">
            <summary>
            Isolated margin order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Quantity">
            <summary>
            Quantity of contract
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Side">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.CancelTime">
            <summary>
            Cancel time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.ValueFilled">
            <summary>
            Value of the quantity filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.AverageFillPrice">
            <summary>
            Average fill price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.LiquidationType">
            <summary>
            Liquidation type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.IsTakeProfitStopLoss">
            <summary>
            Is take profit/stop loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.RealProfit">
            <summary>
            Real profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrder">
            <summary>
            Cross margin order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrder.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrderPage">
            <summary>
            Order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAssets">
            <summary>
            Sub account assets info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAssets.SubUid">
            <summary>
            Sub account uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAssets.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset">
            <summary>
            Sub account asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage">
            <summary>
            User settlement record page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage.CurrentPage">
            <summary>
            Current pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord">
            <summary>
            User settlement record
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.MarginBalanceInit">
            <summary>
            Margin balance init
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.SettlementProfitReal">
            <summary>
            Settlement profit realized
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.SettlementTime">
            <summary>
            Settlement time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.Clawback">
            <summary>
            Clawback
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.FundingFee">
            <summary>
            Funding fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.OffsetProfitLoss">
            <summary>
            Offset profit loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition">
            <summary>
            Settlement position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.CostOpen">
            <summary>
            Cost open
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.CostHoldPre">
            <summary>
            Cost hold before settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.ColdHold">
            <summary>
            Cost hold after settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.SettlementProfitUnreal">
            <summary>
            Settlement profit unreal
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.SettlementPrice">
            <summary>
            Settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTradePage">
            <summary>
            Margin user trade page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTradePage.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.MatchId">
            <summary>
            Match id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.OffsetProfitloss">
            <summary>
            Offset profit loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade">
            <summary>
            Last trade data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Amount">
            <summary>
            Amount of contracts
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.QuoteQuantity">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLastTrade">
            <summary>
            Last trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLastTrade.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLastTrade.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageRate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageRate.Mode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageRate.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageRate.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageRate.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrderPage">
            <summary>
            Liquidation order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrderPage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrderPage.TotalSize">
            <summary>
            Total results
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder">
            <summary>
            Liquidation order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails">
            <summary>
            Isolated margin order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.IntrumentPrice">
            <summary>
            Instrument price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.FinalInterest">
            <summary>
            Final interest
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.AdjustValue">
            <summary>
            Adjust value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Value">
            <summary>
            Trade value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Role">
            <summary>
            Trade role
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.FeeAssset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.RealProfit">
            <summary>
            Real profit
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarketData">
            <summary>
            Market data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarketData.Ask">
            <summary>
            Best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarketData.Bid">
            <summary>
            Best bid
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer">
            <summary>
            Transfer between master and sub account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.FromMarginAccount">
            <summary>
            From margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.ToMarginAccount">
            <summary>
            To margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.SubUid">
            <summary>
            Sub uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.SubAccountName">
            <summary>
            Sub account name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.Type">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.TradeAmount">
            <summary>
            Trade amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.TradeVolume">
            <summary>
            Trade volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.TradeTurnover">
            <summary>
            Trade turnover
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue">
            <summary>
            Open interest value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.Tick">
            <summary>
            Tick
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick">
            <summary>
            Open interest value tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick.Unit">
            <summary>
            Unit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderId.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPage">
            <summary>
            Page of data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPage.TotalPages">
            <summary>
            Total amount of pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPage.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPlacedOrderId">
            <summary>
            Placed order id 
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPlacedOrderId.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPlacedOrderId.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition">
            <summary>
            Isolated margin position info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.CostOpen">
            <summary>
            Opening average price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.CostHold">
            <summary>
            Average price of position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.ProfitUnreal">
            <summary>
            Unrealized pnl
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.ProfitRate">
            <summary>
            Profit rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.LeverRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.PositionMargin">
            <summary>
            Position margin
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Side">
            <summary>
            Order direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionMode.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionMode.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation">
            <summary>
            Price limitation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.HighLimit">
            <summary>
            High limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.LowLimit">
            <summary>
            Low limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage">
            <summary>
            Settlement page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage.TotalSize">
            <summary>
            Total size
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord">
            <summary>
            Settlement info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.SettlementTime">
            <summary>
            Settlement time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.ClawbackRatio">
            <summary>
            Clawback ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.SettlementPrice">
            <summary>
            Settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountResult">
            <summary>
            sub account results
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountResult.Successes">
            <summary>
            Successfully updated ids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountResult.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountError">
            <summary>
            Sub account error info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountError.SubUid">
            <summary>
            Sub uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountError.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountError.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo">
            <summary>
            Adjust factor info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo.List">
            <summary>
            list
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSwapAdjustFactorInfo">
            <summary>
            Cross margin adjust factor info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSwapAdjustFactorInfo.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSwapAdjustFactorInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSwapAdjustFactorInfo.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorInfo">
            <summary>
            Factor info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorInfo.LeverRate">
            <summary>
            Lever rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorInfo.Ladders">
            <summary>
            Ladders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry">
            <summary>
            Factor info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry.Ladder">
            <summary>
            Ladder
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry.MinSize">
            <summary>
            Min size
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry.MaxSize">
            <summary>
            Max size
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBestOffer">
            <summary>
            Best offer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBestOffer.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBestOffer.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBestOffer.Ask">
            <summary>
            Best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBestOffer.Bid">
            <summary>
            Best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBestOffer.Id">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBestOffer.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapIndex">
            <summary>
            Swap index
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapIndex.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapIndex.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapIndex.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo">
            <summary>
            Swap risk info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.InsuranceFund">
            <summary>
            Insurance fund
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.EstimatedClawback">
            <summary>
            Estimated clawback
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.BusinuessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo">
            <summary>
            Tiered margin info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.List">
            <summary>
            List
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredCrossMarginInfo">
            <summary>
            Tiered cross margin info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredCrossMarginInfo.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredCrossMarginInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredCrossMarginInfo.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginRate">
            <summary>
            Margin rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginRate.LeverRate">
            <summary>
            Lever rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginRate.Ladders">
            <summary>
            Ladders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder">
            <summary>
            Ladder info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder.MinMarginBalance">
            <summary>
            Min marging balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder.MaxMarginBalance">
            <summary>
            Max margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder.MinMarginAvailable">
            <summary>
            Min margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder.MaxMarginAvailable">
            <summary>
            Max margin available
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee">
            <summary>
            Trading fee info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.OpenMakerFee">
            <summary>
            Open position maker fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.OpenTakerFee">
            <summary>
            Open position taker fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.CloseMakerfee">
            <summary>
            Close position maker fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.CloseTakerFee">
            <summary>
            Close position taker fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.DeliveryFee">
            <summary>
            Delivery fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Options.HTXOrderBookOptions">
            <summary>
            Options for the HTX SymbolOrderBook
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOrderBookOptions.Default">
            <summary>
            Default options for the HTX SymbolOrderBook
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOrderBookOptions.MergeStep">
            <summary>
            The way the entries are merged. 0 is no merge, 2 means to combine the entries on 2 decimal places
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOrderBookOptions.Levels">
            <summary>
            The amount of entries to maintain. Either 5, 20 or 150. Level 5 and 20 are currently only supported for the following symbols: btcusdt, ethusdt, xrpusdt, eosusdt, ltcusdt, etcusdt, adausdt, dashusdt, bsvusdt.
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Options.HTXRestOptions">
            <summary>
            Options for the HTXRestClient
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.Default">
            <summary>
            Default options for the HTXRestClient
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.SignPublicRequests">
            <summary>
            Whether public requests should be signed if ApiCredentials are provided. Needed for accurate rate limiting.
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.BrokerId">
            <summary>
            Broker id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.UsdtMarginSwapOptions">
            <summary>
            USDT margin swap API options
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Options.HTXSocketOptions">
            <summary>
            Options for the HTXSocketClient
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXSocketOptions.Default">
            <summary>
            Default options for the HTXSocketClient
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXSocketOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXSocketOptions.UsdtMarginSwapOptions">
            <summary>
            Usdt Margin Swap API options
            </summary>
        </member>
        <member name="T:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.Spot">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.CreateSpot(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook">
            <summary>
            HTX order book implementation
            </summary>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.#ctor(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.#ctor(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,HTX.Net.Interfaces.Clients.IHTXSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.HTX(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the HTX REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.HTX(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the HTX Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddHTX(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{HTX.Net.Objects.Options.HTXRestOptions},System.Action{HTX.Net.Objects.Options.HTXSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            Add the IHTXClient and IHTXSocketClient to the sevice collection so they can be injected
            </summary>
            <param name="services">The service collection</param>
            <param name="defaultRestOptionsDelegate">Set default options for the rest client</param>
            <param name="defaultSocketOptionsDelegate">Set default options for the socket client</param>
            <param name="socketClientLifeTime">The lifetime of the IHTXSocketClient for the service collection. Defaults to Singleton.</param>
            <returns></returns>
        </member>
    </members>
</doc>
