<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HTX.Net</name>
    </assembly>
    <members>
        <member name="T:HTX.Net.Clients.HTXRestClient">
            <inheritdoc cref="T:HTX.Net.Interfaces.Clients.IHTXRestClient" />
        </member>
        <member name="P:HTX.Net.Clients.HTXRestClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.HTXRestClient.UsdtFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.#ctor(System.Action{HTX.Net.Objects.Options.HTXRestOptions})">
            <summary>
            Create a new instance of the HTXRestClient using provided options
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILoggerFactory,Microsoft.Extensions.Options.IOptions{HTX.Net.Objects.Options.HTXRestOptions})">
            <summary>
            Create a new instance of the HTXRestClient
            </summary>
            <param name="options">Option configuration delegate</param>
            <param name="loggerFactory">The logger factory</param>
            <param name="httpClient">Http client for this client</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.SetDefaultOptions(System.Action{HTX.Net.Objects.Options.HTXRestOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.HTXSocketClient">
            <inheritdoc cref="T:HTX.Net.Interfaces.Clients.IHTXSocketClient" />
        </member>
        <member name="P:HTX.Net.Clients.HTXSocketClient.SpotApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.HTXSocketClient.UsdtFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.#ctor(System.Action{HTX.Net.Objects.Options.HTXSocketOptions})">
            <summary>
            Create a new instance of the HTXSocketClient
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.#ctor(Microsoft.Extensions.Options.IOptions{HTX.Net.Objects.Options.HTXSocketOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            Create a new instance of the HTXSocketClient
            </summary>
            <param name="loggerFactory">The logger factory</param>
            <param name="options">Option configuration</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.SetDefaultOptions(System.Action{HTX.Net.Objects.Options.HTXSocketOptions})">
            <summary>
            Set the default options to be used when creating new clients
            </summary>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.Clients.HTXSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="E:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.OnOrderPlaced">
            <summary>
            Event triggered when an order is placed via this client
            </summary>
        </member>
        <member name="E:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.OnOrderCanceled">
            <summary>
            Event triggered when an order is canceled via this client
            </summary>
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.Margin">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.SubAccount">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.TryParseError(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.GetSymbolName(System.String,System.String)">
            <summary>
            Get the name of a symbol for HTX based on the base and quote asset
            </summary>
            <param name="baseAsset"></param>
            <param name="quoteAsset"></param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXRestClientSpotApi.CommonSpotClient">
            <inheritdoc />
            TODO make this take an accountId param so we don't need it in the interface?
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetBalancesAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetPlatformValuationAsync(System.Nullable{HTX.Net.Enums.AccountType},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetAssetValuationAsync(HTX.Net.Enums.AccountType,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.InternalTransferAsync(System.Int64,HTX.Net.Enums.AccountType,System.Int64,System.Int64,HTX.Net.Enums.AccountType,System.Int64,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetAccountHistoryAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TransactionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetAccountLedgerAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TransactionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.TransferAsync(HTX.Net.Enums.TransferAccount,HTX.Net.Enums.TransferAccount,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetPointBalanceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.TransferPointsAsync(System.String,System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetUserDeductionInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetDeductAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.SetDeductionSwitchAsync(HTX.Net.Enums.DeductionSwitchType,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetDepositAddressesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetWithdrawalQuotasAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetWithdrawalAddressesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.Decimal,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetWithdrawalByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.CancelWithdrawalAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetWithdrawDepositHistoryAsync(HTX.Net.Enums.WithdrawDepositType,System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.FilterDirection},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetTradingFeesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetApiKeyInfoAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiAccount.GetUserIdAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetSymbolStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetSymbolConfigAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetNetworksAsync(System.Nullable{HTX.Net.Enums.NetworkRequestFilter},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetAssetsAndNetworksAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetLastTradeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetSymbolDetails24HAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiExchangeData.GetFullOrderBookAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.RepayLoanAsync(System.String,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.TransferSpotToIsolatedMarginAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.TransferIsolatedMarginToSpotAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.GetIsolatedLoanInterestRateAndQuotaAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.RequestIsolatedMarginLoanAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.RepayIsolatedMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.GetIsolatedMarginClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.MarginOrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.GetIsolatedMarginBalanceAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.TransferSpotToCrossMarginAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.TransferCrossMarginToSpotAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.GetCrossLoanInterestRateAndQuotaAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.RequestCrossMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.RepayCrossMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.GetCrossMarginClosedOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.MarginOrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.GetCrossMarginBalanceAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.GetCrossMarginLimitAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiMargin.GetRepaymentHistoryAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.SetDeductModeAsync(System.Collections.Generic.IEnumerable{System.String},HTX.Net.Enums.DeductMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.CreateSubAccountsAsync(System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXSubAccountRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.GetSubUserListAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.SetLockAsync(System.Int64,HTX.Net.Enums.LockAction,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.GetSubUserAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.SetTradableMarketAsync(System.Collections.Generic.IEnumerable{System.String},HTX.Net.Enums.SubAccountMarketType,System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.SetAssetTransferPermissionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.GetSubUserAccountsAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.CreateApiKeyAsync(System.String,System.Int64,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.EditApiKeyAsync(System.Int64,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.DeleteApiKeyAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.TransferWithSubAccountAsync(System.Int64,System.String,System.Decimal,HTX.Net.Enums.TransferType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.GetDepositAddressAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.GetDepositHistoryAsync(System.Int64,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.GetAggregateBalancesAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiSubAccount.GetBalancesAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.PlaceOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.Nullable{HTX.Net.Enums.SourceType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.PlaceMultipleOrderAsync(System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.PlaceMarginOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,HTX.Net.Enums.MarginPurpose,HTX.Net.Enums.SourceType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelOrderByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOpenOrdersAsync(System.Nullable{System.Int64},System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelOrdersByCriteriaAsync(System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOrderByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOrderTradesAsync(System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatus},System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetHistoricalOrdersAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.PlaceConditionalOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.ConditionalOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.TimeInForce},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.CancelConditionalOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetOpenConditionalOrdersAsync(System.Nullable{System.Int64},System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.ConditionalOrderType},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetClosedConditionalOrdersAsync(System.String,HTX.Net.Enums.ConditionalOrderStatus,System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.ConditionalOrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXRestClientSpotApiTrading.GetConditionalOrderAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.PreprocessStreamMessage(CryptoExchange.Net.Sockets.SocketConnection,System.Net.WebSockets.WebSocketMessageType,System.ReadOnlyMemory{System.Byte})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetAuthenticationRequestAsync(CryptoExchange.Net.Sockets.SocketConnection)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetOrderBookWithMergeStepAsync(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetOrderBookAsync(System.String,System.Int32)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToPartialOrderBookUpdates1SecondAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToPartialOrderBookUpdates100MilisecondAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToOrderBookChangeUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXIncementalOrderBook}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetTradeHistoryAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolTrade}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.GetSymbolDetailsAsync(System.String)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToSymbolDetailUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolDetails}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXSymbolTicker}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolTick}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXBestOffer}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToAccountUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXAccountUpdate}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.SubscribeToOrderDetailsUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXTradeUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.PlaceOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.Nullable{HTX.Net.Enums.SourceType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXOrderRequest},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.PlaceMarginOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,HTX.Net.Enums.MarginPurpose,HTX.Net.Enums.SourceType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.CancelAllOrdersAsync(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.SpotApi.HTXSocketClientSpotApi.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.ClientOptions">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.ExchangeName">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.Account">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.ExchangeData">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.SubAccount">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.Trading">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.ParseErrorResponse(System.Int32,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.TryParseError(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Collections.Generic.IEnumerable{System.String}}},CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.GetServerTimestampAsync">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.GetTimeSyncInfo">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApi.GetTimeOffset">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetAssetValuationAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAssetsAndPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAssetsAndPositionsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetFinancialRecordsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.FinancialRecordType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginAvailableLeverageAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginAvailableLeverageAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetOrderLimitsAsync(HTX.Net.Enums.OrderPriceType,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetTradingFeesAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginTransferLimitsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginTransferLimitsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginPositionLimitAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginPositionLimitsAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginLeveragePositionLimitsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginLeveragePositionLimitsAsync(HTX.Net.Enums.BusinessType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.TransferMarginAccountsAsync(System.String,System.String,System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetTradingStatusAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.SetIsolatedMarginPositionModeAsync(System.String,HTX.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.SetCrossMarginPositionModeAsync(System.String,HTX.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginPositionModeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginPositionModeAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetIsolatedMarginSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtMarginSwapApiAccount.GetCrossMarginSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetFundingRateAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetHistoricalFundingRatesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetLiquidationOrdersAsync(System.String,HTX.Net.Enums.LiquidationTradeType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetHistoricalSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetTopTraderAccountSentimentAsync(System.String,HTX.Net.Enums.Period,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetTopTraderPositionSentimentAsync(System.String,HTX.Net.Enums.Period,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetIsolatedMarginStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetCrossTieredMarginInfoAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetIsolatedMarginTieredInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetEstimatedSettlementPriceAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetIsolatedMarginAdjustFactorInfoAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetCrossMarginAdjustFactorInfoAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetInsuranceFundHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetInsuranceFundInfoAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetSwapRiskInfoAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetSwapPriceLimitationAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetSwapOpenInterestAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetContractsAsync(System.String,System.Nullable{HTX.Net.Enums.MarginMode},System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetSwapIndexPriceAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetContractElementsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetBookTickerAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetTickersAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetLastTradesAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetOpenInterestHistoryAsync(HTX.Net.Enums.InterestPeriod,HTX.Net.Enums.Unit,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetPremiumIndexKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetEstimatedFundingRateKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetBasisDataAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetCrossMarginTradeStatusAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiExchangeData.GetCrossMarginTransferStatusAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.SetTradingPermissionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.GetTradePermissionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.GetIsolatedMarginAssetsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.GetCrossMarginAssetsAsync(System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.GetIsolatedMarginAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.GetCrossMarginAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.GetIsolatedMarginPositionsAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.GetCrossMarginPositionsAsync(System.Int64,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.TransferMasterSubAsync(System.String,System.String,System.String,System.String,System.Decimal,HTX.Net.Enums.MasterSubTransferType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiSubAccount.GetMasterSubTransferRecordsAsync(System.String,System.Int32,System.Nullable{HTX.Net.Enums.MasterSubTransferType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelOrdersAfterAsync(System.Boolean,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.PlaceIsolatedMarginOrderAsync(System.String,System.Int64,HTX.Net.Enums.OrderSide,System.Int32,HTX.Net.Enums.OrderPriceType,System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.PlaceCrossMarginOrderAsync(System.Int64,HTX.Net.Enums.OrderSide,System.Int32,HTX.Net.Enums.OrderPriceType,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginOrderAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelCrossMarginOrderAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelCrossMarginOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelAllIsolatedMarginOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelAllCrossMarginOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.SetIsolatedMarginLeverageAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.SetCrossMarginLeverageAsync(System.Int32,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOrderAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginOrderAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOrderDetailsAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginOrderDetailsAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginOpenOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginClosedOrdersAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Boolean,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatusFilter},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginClosedOrdersAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Boolean,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatusFilter},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginUserTradesAsync(System.String,HTX.Net.Enums.MarginTradeType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginUserTradesAsync(System.String,HTX.Net.Enums.MarginTradeType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CloseIsolatedMarginPositionAsync(System.String,HTX.Net.Enums.OrderSide,System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.LightningPriceType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CloseCrossMarginPositionAsync(HTX.Net.Enums.OrderSide,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.LightningPriceType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.PlaceIsolatedMarginTriggerOrderAsync(System.String,HTX.Net.Enums.TriggerType,System.Decimal,System.Decimal,HTX.Net.Enums.OrderSide,System.Nullable{HTX.Net.Enums.Offset},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.PlaceCrossMarginTriggerOrderAsync(HTX.Net.Enums.TriggerType,System.Decimal,System.Decimal,HTX.Net.Enums.OrderSide,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginTriggerOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelCrossMarginTriggerOrderAsync(System.String,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelAllIsolatedMarginTriggerOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelAllCrossMarginTriggerOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOpenTriggerOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginOpenTriggerOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginTriggerOrderHistoryAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Int32,HTX.Net.Enums.OrderStatusFilter,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginTriggerOrderHistoryAsync(HTX.Net.Enums.MarginTradeType,System.Int32,HTX.Net.Enums.OrderStatusFilter,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.SetIsolatedMarginTpSlAsync(System.String,HTX.Net.Enums.OrderSide,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.SetCrossMarginTpSlAsync(HTX.Net.Enums.OrderSide,System.Decimal,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginTpSlAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelCrossMarginTpSlAsync(System.String,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelAllIsolatedMarginTpSlAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelAllCrossMarginTpSlAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOpenTpSlOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginOpenTpSlOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginTpSlHistoryAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TpSlStatus},System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginTpSlHistoryAsync(System.Collections.Generic.IEnumerable{HTX.Net.Enums.TpSlStatus},System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginPositionOpenTpSlInfoAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetCrossMarginPositionOpenTpSlInfoAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.PlaceIsolatedMarginTrailingOrderAsync(System.String,System.Boolean,HTX.Net.Enums.OrderSide,HTX.Net.Enums.Offset,System.Int32,System.Decimal,System.Decimal,System.Decimal,HTX.Net.Enums.OrderPriceType,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.PlaceCrossMarginTrailingOrderAsync(HTX.Net.Enums.OrderSide,HTX.Net.Enums.Offset,System.Int32,System.Decimal,System.Decimal,System.Decimal,HTX.Net.Enums.OrderPriceType,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginTrailingOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelCrossMarginTrailingOrderAsync(System.String,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelAllIsolatedMarginTrailingOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.CancelAllCrossMarginTrailingOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetOpenIsolatedMarginTrailingOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetOpenCrossMarginTrailingOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetClosedIsolatedMarginTrailingOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TpSlStatus},HTX.Net.Enums.MarginTradeType,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXRestClientUsdtFuturesApiTrading.GetClosedCrossMarginTrailingOrdersAsync(System.Collections.Generic.IEnumerable{HTX.Net.Enums.TpSlStatus},HTX.Net.Enums.MarginTradeType,System.Int32,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.PreprocessStreamMessage(CryptoExchange.Net.Sockets.SocketConnection,System.Net.WebSockets.WebSocketMessageType,System.ReadOnlyMemory{System.Byte})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.GetListenerIdentifier(CryptoExchange.Net.Interfaces.IMessageAccessor)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.CreateAuthenticationProvider(CryptoExchange.Net.Authentication.ApiCredentials)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSwapKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToIncrementalOrderBookUpdatesAsync(System.String,System.Boolean,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXIncrementalOrderBookUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToIndexKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToPremiumIndexKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToEstimatedFundingRateKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToBasisUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToMarkPriceKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToFundingRateUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToContractUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToContractElementsUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate}}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToSystemStatusUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXStatusUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToOrderUpdatesAsync(HTX.Net.Enums.MarginMode,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToIsolatedMarginBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToCrossMarginBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToIsolatedMarginPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToCrossMarginPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToIsolatedMarginUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToCrossMarginUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTradeUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToIsolatedMarginTriggerOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.Clients.UsdtFutures.HTXSocketClientUsdtFuturesApi.SubscribeToCrossMarginTriggerOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdate}},System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Enums.AccountActivation">
            <summary>
            Account activation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountActivation.Activated">
            <summary>
            Activated
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountActivation.Deactivated">
            <summary>
            Deactivated
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.AccountEventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderPlaced">
            <summary>
            Order placed event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderMatched">
            <summary>
            Order matched event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderRefunded">
            <summary>
            Order refunded event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderCanceled">
            <summary>
            Order canceled event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.OrderFeeRefunded">
            <summary>
            Order fee refunded event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.MarginTransfer">
            <summary>
            Margin transfer event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.MarginLoan">
            <summary>
            Margin loan event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.MarginInterest">
            <summary>
            Margin interest event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.MarginRepay">
            <summary>
            Margin repay event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.Other">
            <summary>
            Other event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.Deposit">
            <summary>
            Deposit event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountEventType.Withdraw">
            <summary>
            Withdraw event
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.AccountStatus">
            <summary>
            Account state
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountStatus.Working">
            <summary>
            Working
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountStatus.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Spot">
            <summary>
            Spot account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Margin">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.SuperMargin">
            <summary>
            Super margin account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Otc">
            <summary>
            Otc account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Point">
            <summary>
            Point account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Investment">
            <summary>
            Investment account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Borrow">
            <summary>
            Borrow account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.GridTrading">
            <summary>
            Grid trading
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.DepositEarning">
            <summary>
            Deposit earning
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.OtcOptions">
            <summary>
            Otc options
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Minepool">
            <summary>
            Minepool
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.Etf">
            <summary>
            Etf
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AccountType.CryptoLoans">
            <summary>
            Crypto loans
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ApiKeyStatus">
            <summary>
            Api key status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ApiKeyStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ApiKeyStatus.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.AssetStatus">
            <summary>
            Asset status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AssetStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AssetStatus.Delisted">
            <summary>
            Delisted
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.AssetType">
            <summary>
            Asset type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AssetType.Virtual">
            <summary>
            Virtual asset
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.AssetType.Fiat">
            <summary>
            Fiat asset
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.BalanceType">
            <summary>
            Balance type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Trade">
            <summary>
            Trade balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Frozen">
            <summary>
            Frozen balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Loan">
            <summary>
            Loan balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Lock">
            <summary>
            Locked balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Bank">
            <summary>
            Bank balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.Interest">
            <summary>
            Interest balance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.CreditRepay">
            <summary>
            Credit repay
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.TrustAsset">
            <summary>
            Trust asset
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.TransferOutAvailable">
            <summary>
            Transfer out available
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BalanceType.LoanAvailable">
            <summary>
            Loan available
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BusinessType.Futures">
            <summary>
            Futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.BusinessType.Swap">
            <summary>
            Swap
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ComponentStatus">
            <summary>
            Component status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ComponentStatus.Operational">
            <summary>
            Operational
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ComponentStatus.DegradedPerformance">
            <summary>
            Degraded performance
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ComponentStatus.PartialOutage">
            <summary>
            Partial outage
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ComponentStatus.MajorOutage">
            <summary>
            Major outage
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ComponentStatus.UnderMaintenance">
            <summary>
            Under maintance
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ConditionalOrderStatus">
            <summary>
            Status of a conditional order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderStatus.Created">
            <summary>
            Created and active
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderStatus.Canceled">
            <summary>
            Canceled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderStatus.Triggered">
            <summary>
            Triggered
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ConditionalOrderType">
            <summary>
            Conditional order type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderType.Limit">
            <summary>
            Limit order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ConditionalOrderType.Market">
            <summary>
            Market order
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ContractNetworkType">
            <summary>
            Contract network type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractNetworkType.Coin">
            <summary>
            Coin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractNetworkType.Token">
            <summary>
            Token
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ContractStatus">
            <summary>
            Contract status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Delisting">
            <summary>
            Delisting
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Listing">
            <summary>
            Listing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.PendingListing">
            <summary>
            Pending listing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Suspension">
            <summary>
            Suspension
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.SuspendingOfListing">
            <summary>
            Suspending of listing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.InSettlement">
            <summary>
            In settlement
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Delivering">
            <summary>
            Delivering
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.SettlementCompleted">
            <summary>
            Settlement completed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractStatus.Delivered">
            <summary>
            Delivered
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.Swap">
            <summary>
            Swap
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.ThisWeek">
            <summary>
            This week
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.NextWeek">
            <summary>
            Next week
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.Quarter">
            <summary>
            Quarter
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ContractType.NextQuarter">
            <summary>
            Next quarter
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.CurrencyStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.CurrencyStatus.Allowed">
            <summary>
            Allowed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.CurrencyStatus.Prohibited">
            <summary>
            Prohibited
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.DeductionSwitchType">
            <summary>
            Deduction switch type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.DeductionSwitchType.PointCardDeduction">
            <summary>
            Point card deduction
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.DeductionSwitchType.AssetDeduction">
            <summary>
            Asset deduction
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.DeductionSwitchType.CloseDeduction">
            <summary>
            Close deduction
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.DeductMode">
            <summary>
            Sub account deduct mode
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.DeductMode.Master">
            <summary>
            Deduct from master
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.DeductMode.Sub">
            <summary>
            Deduct from sub
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ElementBusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementBusinessType.PerpetualFutures">
            <summary>
            Perpetual futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementBusinessType.DeliveryFutures">
            <summary>
            Delivery futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementBusinessType.PerpetualAndDeliveryFutures">
            <summary>
            Perpetual + Delivery futures
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ElementInstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementInstrumentType.PerpetualFutures">
            <summary>
            Perpetual futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementInstrumentType.WeeklyFutures">
            <summary>
            Weekly futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementInstrumentType.BiWeeklyFutures">
            <summary>
            Bi-weekly futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementInstrumentType.QuarterlyFutures">
            <summary>
            Quarterly futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementInstrumentType.BiQuarterlyFutures">
            <summary>
            Bi-quareterly futures
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ElementModeType">
            <summary>
            Margin mode type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementModeType.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementModeType.CrossAndIsolatedMargin">
            <summary>
            Cross and isolated margin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ElementModeType.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.EventOrderTrigger">
            <summary>
            Trigger order event
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventOrderTrigger.TriggerPlaced">
            <summary>
            Trigger order placed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventOrderTrigger.TriggerCanceled">
            <summary>
            Trigger order canceled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventOrderTrigger.TriggerSuccess">
            <summary>
            Successfully triggered
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventOrderTrigger.TriggerFail">
            <summary>
            Failed to trigger
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.EventTrigger">
            <summary>
            Event trigger
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Open">
            <summary>
            Open order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Match">
            <summary>
            Order match
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Settlement">
            <summary>
            Settlement and delivery
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Liquidation">
            <summary>
            Order liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Cancel">
            <summary>
            Order cancel
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Transfer">
            <summary>
            Asset transfer
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.SwitchLeverageRate">
            <summary>
            Switch leverage
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Initial">
            <summary>
            Initial update
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.EventTrigger.Snapshot">
            <summary>
            Snapshot
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.FeeDeductStatus">
            <summary>
            Fee deduction status.
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeDeductStatus.Ongoing">
            <summary>
            In deduction
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeDeductStatus.Done">
            <summary>
            Deduction completed
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.FeeType">
            <summary>
            Fee type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeType.Fixed">
            <summary>
            Fixed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeType.Circulated">
            <summary>
            Circulated
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FeeType.Ratio">
            <summary>
            Ratio
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.FilterDirection">
            <summary>
            Filter direction
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FilterDirection.Next">
            <summary>
            Get results after
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FilterDirection.Previous">
            <summary>
            Get results before
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.FinancialRecordType">
            <summary>
            Financial record type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseLong">
            <summary>
            Close long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseShort">
            <summary>
            Close short
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FeesForOpenPositionsTaker">
            <summary>
            Fees for open position - taker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FeesForOpenPositionMaker">
            <summary>
            Fess for open position - maker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FeesForClosePositionTaker">
            <summary>
            Fees for close positon - taker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FeesForClosePositionMaker">
            <summary>
            Fees for close potion - maker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseLongForDelivery">
            <summary>
            Close long for delivery
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseShortForDelivery">
            <summary>
            Close short for delibery
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.DeliveryFee">
            <summary>
            Delivery fee
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseLongForLiquidation">
            <summary>
            Close long for liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.CloseShortForLiquidation">
            <summary>
            Close short for liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferSpotToContract">
            <summary>
            Transfer spot to contract
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferContractToSpot">
            <summary>
            Transfer contract to spot
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.SettleUnrealizedLong">
            <summary>
            Settle unrealized long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.SettleUnrealizedShort">
            <summary>
            Settle unrealized short
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.Clawback">
            <summary>
            Clawback
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.ActivityPriceRewards">
            <summary>
            Activity price rewards
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.Rebate">
            <summary>
            Rebate
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FundingFeeIncome">
            <summary>
            Funding fee income
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.FundingFeeExpenditure">
            <summary>
            Funding fee expenditure
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferToSub">
            <summary>
            Transfer to sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferFromSub">
            <summary>
            Transfer from sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferToMaster">
            <summary>
            Transfer to master account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferFromMaster">
            <summary>
            Transfer from master account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferFromOtherMargin">
            <summary>
            Transfer from other margin account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.TransferToOtherMargin">
            <summary>
            Transfer to other margin account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.AdlCloseLong">
            <summary>
            Adl close long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.FinancialRecordType.AdlCloseShort">
            <summary>
            Adl close short
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.IncidentStatus">
            <summary>
            Incident status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.IncidentStatus.Investigating">
            <summary>
            Investigating
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.IncidentStatus.Identified">
            <summary>
            Identified
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.IncidentStatus.Monitoring">
            <summary>
            Monitoring
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.IncidentStatus.Resolved">
            <summary>
            Resolved
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.InstrumentStatus">
            <summary>
            Status of an instrument
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InstrumentStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InstrumentStatus.Delisted">
            <summary>
            Delisted
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.InterestPeriod">
            <summary>
            Interest period
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InterestPeriod.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InterestPeriod.FourHour">
            <summary>
            Four hours
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InterestPeriod.TwelfHour">
            <summary>
            Twelf hours
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.InterestPeriod.OneDay">
            <summary>
            One day
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.KlineInterval">
            <summary>
            Interval for klines, int value represent the time in seconds
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneMinute">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.FiveMinutes">
            <summary>
            5m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.FifteenMinutes">
            <summary>
            15m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.ThirtyMinutes">
            <summary>
            30m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneHour">
            <summary>
            1h
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.FourHours">
            <summary>
            4h
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneDay">
            <summary>
            1d
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneWeek">
            <summary>
            1w
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneMonth">
            <summary>
            1m
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.KlineInterval.OneYear">
            <summary>
            1y
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.LightningPriceType">
            <summary>
            Price type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LightningPriceType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LightningPriceType.LightningFok">
            <summary>
            Fill or kill
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LightningPriceType.LightningIoc">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.LiquidationTradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationTradeType.FullyFilledLiquidationOrders">
            <summary>
            Fully filled liquidation orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationTradeType.LiquidatedCloseOrders">
            <summary>
            Liquidated close orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationTradeType.LiquidatedOpenOrders">
            <summary>
            Liquidated open orders
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.LiquidationType">
            <summary>
            Liquidation type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationType.NonLiquidated">
            <summary>
            Not a liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationType.LongAndShortNetting">
            <summary>
            Long and short netting
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationType.PartialLiquidated">
            <summary>
            Partial liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LiquidationType.FullLiquidated">
            <summary>
            Full liquidation
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.LockAction">
            <summary>
            Lock 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LockAction.Lock">
            <summary>
            Lock
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.LockAction.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MaintenanceStatus">
            <summary>
            Maintenance status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MaintenanceStatus.Scheduled">
            <summary>
            Scheduled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MaintenanceStatus.InProgress">
            <summary>
            In progress
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MaintenanceStatus.Verifying">
            <summary>
            Verifying
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MaintenanceStatus.Completed">
            <summary>
            Completed
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginMode.Cross">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginMode.Isolated">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginMode.All">
            <summary>
            All (filter)
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginOrderStatus">
            <summary>
            Status of a margin order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Created">
            <summary>
            Created
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Accural">
            <summary>
            Loaned
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Cleared">
            <summary>
            Paid
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Invalid">
            <summary>
            Invalid
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginOrderType">
            <summary>
            Margin order type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderType.Quatation">
            <summary>
            Quoatation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderType.CanceledOrder">
            <summary>
            Canceled order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderType.ForcedLiquidation">
            <summary>
            Forced liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginOrderType.DeliveryOrder">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginPurpose">
            <summary>
            Margin order purpose
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginPurpose.AutomaticLoan">
            <summary>
            Loan
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginPurpose.AutomaticRepayment">
            <summary>
            Repayment
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarginTradeType">
            <summary>
            Trade type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.All">
            <summary>
            All trades
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.BuyLong">
            <summary>
            Buy long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.SellShort">
            <summary>
            Sell short
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.BuyShort">
            <summary>
            Buy short
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.SellLong">
            <summary>
            Sell long
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.LiquidateLong">
            <summary>
            Liquidate long positions
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.LiquidateShort">
            <summary>
            Liquidate short positions
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.BuyOneWay">
            <summary>
            Buy one way
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarginTradeType.SellOneWay">
            <summary>
            Sell one way
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MarketStatus">
            <summary>
            Status of the market
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarketStatus.Normal">
            <summary>
            Operating normally
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarketStatus.Halted">
            <summary>
            Trading halted
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MarketStatus.CancelOnly">
            <summary>
            Only cancelation is possible
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.MasterSubTransferType">
            <summary>
            Transfer type between master and sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MasterSubTransferType.MasterToSub">
            <summary>
            Transfer from master to sub
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.MasterSubTransferType.SubToMaster">
            <summary>
            Transfer from sub to master
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.NetworkRequestFilter">
            <summary>
            GetNetworksAsync filter
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkRequestFilter.NoDescriptions">
            <summary>
            Do not return descriptions
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkRequestFilter.AllDescriptions">
            <summary>
            Include all descriptions
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkRequestFilter.SuspendedDescriptions">
            <summary>
            Only include suspended withdrawal/deposit descriptions
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.NetworkStatus">
            <summary>
            Network action status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkStatus.Allowed">
            <summary>
            Allowed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkStatus.Prohibited">
            <summary>
            Prohibited
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.NetworkType">
            <summary>
            Type of network
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkType.Plain">
            <summary>
            Plain
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkType.Live">
            <summary>
            Live
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkType.Old">
            <summary>
            Old
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkType.New">
            <summary>
            New
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkType.Legal">
            <summary>
            Legal
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.NetworkType.TooOld">
            <summary>
            Too old
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Offset.Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Offset.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Offset.Both">
            <summary>
            Both
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.Operator">
            <summary>
            Stop price operator
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Operator.GreaterThanOrEqual">
            <summary>
            Greater than or equal to stop price
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Operator.LesserThanOrEqual">
            <summary>
            Less than or equal to stop price
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.BestOffer">
            <summary>
            Best offer
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.PostOnly">
            <summary>
            Post only
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Optimal5">
            <summary>
            Optimal 5
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Optimal10">
            <summary>
            Optimal 10
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.Optimal20">
            <summary>
            Optimal 20
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancel">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKill">
            <summary>
            Fill or kill
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancelBestBid">
            <summary>
            Immediate or cancel at best bid
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancelOptimal5">
            <summary>
            Immediate or cancel optimal 5
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancelOptimal10">
            <summary>
            Immediate or cancel optimal 10
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.ImmediateOrCancelOptimal20">
            <summary>
            Immediate or cancel optimal 20
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKillBestBid">
            <summary>
            Fill or kill best offer
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKillOptimal5">
            <summary>
            Fill or kill optimal 5
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKillOptimal10">
            <summary>
            Fill or kill optimal 10
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FillOrKillOptimal20">
            <summary>
            Fill or kill optimal 20
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderPriceType.FormulaPrice">
            <summary>
            Formula price
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderRole">
            <summary>
            Order role
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderRole.Maker">
            <summary>
            Maker of an order book entry
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderRole.Taker">
            <summary>
            Taker of an order book entry
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderSide.Buy">
            <summary>
            Buy
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderSide.Sell">
            <summary>
            Sell
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.PreSubmitted">
            <summary>
            Pre-submitted
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Submitted">
            <summary>
            Submitted, nothing filled yet
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.PartiallyCanceled">
            <summary>
            Partially filled, then canceled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Filled">
            <summary>
            Filled completely
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Canceled">
            <summary>
            Canceled without fill
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Created">
            <summary>
            Created
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatus.Rejected">
            <summary>
            Rejected
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderStatusFilter">
            <summary>
            Order status filter
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatusFilter.All">
            <summary>
            Order statuses
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatusFilter.ReadyToPlace">
            <summary>
            Placing in book
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatusFilter.Submitted">
            <summary>
            Submitted orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatusFilter.PartiallyMatched">
            <summary>
            Partially matched orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatusFilter.PartiallyCanceled">
            <summary>
            Partially canceled orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatusFilter.FullyMatched">
            <summary>
            Fully executed orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatusFilter.Canceled">
            <summary>
            Canceled orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderStatusFilter.Canceling">
            <summary>
            Canceled orders
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.Limit">
            <summary>
            Limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.Market">
            <summary>
            Market
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.IOC">
            <summary>
            Immediate or cancel
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.LimitMaker">
            <summary>
            Limit maker
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.StopLimit">
            <summary>
            Stop limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.FillOrKillLimit">
            <summary>
            Fill or kill limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.FillOrKillStopLimit">
            <summary>
            Fill or kill stop limit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.MarketGrid">
            <summary>
            Grid market order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.OrderType.LimitGrid">
            <summary>
            Grid limit order
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.Period">
            <summary>
            Period
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Period.FiveMinutes">
            <summary>
            Five minutes
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Period.FifteenMinutes">
            <summary>
            Fifteen minutes
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Period.ThirtyMinutes">
            <summary>
            Thirty minutes
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Period.OneHour">
            <summary>
            One hour
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Period.FourHours">
            <summary>
            Four hours
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Period.OneDay">
            <summary>
            One day
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.PointAccountStatus">
            <summary>
            Point account status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PointAccountStatus.Working">
            <summary>
            Working
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PointAccountStatus.Lock">
            <summary>
            Lock
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PointAccountStatus.FlSys">
            <summary>
            Fl sys
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PointAccountStatus.FlMgt">
            <summary>
            Fl mgt
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PointAccountStatus.FlEnd">
            <summary>
            Fl end
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PointAccountStatus.FlNegative">
            <summary>
            Fl negative
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PositionMode.SingleSide">
            <summary>
            Single side
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.PositionMode.DualSide">
            <summary>
            Dual side
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SettlementType.Settlement">
            <summary>
            Settlement
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SettlementType.Delivery">
            <summary>
            Delivery
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SortingType">
            <summary>
            Sorting order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SortingType.Ascending">
            <summary>
            Ascending
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SortingType.Descending">
            <summary>
            Descending
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SourceType">
            <summary>
            Source
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SourceType.Spot">
            <summary>
            Spot api
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SourceType.IsolatedMargin">
            <summary>
            Isolate margin api
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SourceType.CrossMargin">
            <summary>
            Cross margin api
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SourceType.C2CMargin">
            <summary>
            c2c margin api
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SubAccountMarketType">
            <summary>
            Market type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SubAccountMarketType.IsolatedMargin">
            <summary>
            Isolated margin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SubAccountMarketType.CrossMargin">
            <summary>
            Cross margin
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SubAccountMarketType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SwapDeliveryType">
            <summary>
            Delivery type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapDeliveryType.UsdtPerpetualFutures">
            <summary>
            Perpetual futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapDeliveryType.UsdtDeliveryFutures">
            <summary>
            Delivery futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapDeliveryType.UsdtPerpetualAndDeliveryFutures">
            <summary>
            Both USDT perpetual and delivery futures
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SwapMarginOrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.ReadyToSubmit">
            <summary>
            Ready to submit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Submitting">
            <summary>
            Submitting
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Submitted">
            <summary>
            Submitted / active
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.PartiallyFilled">
            <summary>
            Partially filled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.PartiallyCancelled">
            <summary>
            Partially filled, cancelled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Filled">
            <summary>
            Filled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Cancelled">
            <summary>
            Cancelled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SwapMarginOrderStatus.Cancelling">
            <summary>
            Cancelling
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SymbolStatus">
            <summary>
            Symbol status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.NotOnline">
            <summary>
            Not online
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.PreOnline">
            <summary>
            Not yet online
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.Online">
            <summary>
            Online
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.Offline">
            <summary>
            Offline
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.Suspended">
            <summary>
            Suspended
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.TransferBoard">
            <summary>
            Transfer board
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SymbolStatus.Fuse">
            <summary>
            Fuse
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.SystemStatusIndicator">
            <summary>
            System status indicator
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SystemStatusIndicator.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SystemStatusIndicator.Minor">
            <summary>
            Minor
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SystemStatusIndicator.Major">
            <summary>
            Major
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SystemStatusIndicator.Critical">
            <summary>
            Critical
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.SystemStatusIndicator.Maintenance">
            <summary>
            Maintenance
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TimeInForce">
            <summary>
            Time an order is active
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TimeInForce.GoodTillCancel">
            <summary>
            Good until the order is canceled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TimeInForce.ImmediateOrCancel">
            <summary>
            Should execute at least partly upon placing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TimeInForce.BookOrCancel">
            <summary>
            Should enter the book upon placing
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TimeInForce.FillOrKill">
            <summary>
            Should fill entirely upon placing
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TpslOrderType">
            <summary>
            Take profit / stop loss type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpslOrderType.TakeProfit">
            <summary>
            Take profit order
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpslOrderType.StopLoss">
            <summary>
            Stop loss order
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TpSlStatus">
            <summary>
            Tp/Sl order status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.All">
            <summary>
            All (for filtering)
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.NotActivated">
            <summary>
            Not activated
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.ReadyToSubmit">
            <summary>
            Ready to submit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.Submitting">
            <summary>
            Submitting orders
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.SubmitSuccess">
            <summary>
            Orders successfully submited
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.SubmitFailed">
            <summary>
            Orders failed to submit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.Canceled">
            <summary>
            Orders canceled
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.CanceledOrderNotFound">
            <summary>
            Canceled orders not found
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.Canceling">
            <summary>
            Orders canceling
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.Expired">
            <summary>
            Expired
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TpSlStatus.NotActivatedExpired">
            <summary>
            Not activated - Expired
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TransactionType">
            <summary>
            Transaction type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Etf">
            <summary>
            ETF
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.TransactionFee">
            <summary>
            Transaction fee
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Deduction">
            <summary>
            Deduction
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Transfer">
            <summary>
            Transfer between accounts
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Credit">
            <summary>
            Credit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Liquidation">
            <summary>
            Liquidation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Interest">
            <summary>
            Interest
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.WithdrawFee">
            <summary>
            Withdraw fee
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Exchange">
            <summary>
            Exchange
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Other">
            <summary>
            Other types
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransactionType.Rebate">
            <summary>
            Rebate
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TransferAccount">
            <summary>
            Account type for transfer
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferAccount.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferAccount.LinearSwap">
            <summary>
            Linear swap
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferAccount.Otc">
            <summary>
            OTC
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferAccount.Futures">
            <summary>
            Futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferAccount.Swap">
            <summary>
            Swap
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TransferType">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferType.FromSubAccount">
            <summary>
            From sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferType.ToSubAccount">
            <summary>
            To sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferType.PointFromSubAccount">
            <summary>
            Point from sub account
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TransferType.PointToSubAccount">
            <summary>
            Point to sub account
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TriggerType.GreaterThanOrEqual">
            <summary>
            Greater than or equal to price
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.TriggerType.LesserThanOrEqual">
            <summary>
            Lesser than or equal to price
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.Unit">
            <summary>
            Unit type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Unit.Cont">
            <summary>
            Cont
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.Unit.CryptoCurrency">
            <summary>
            Crypto currency
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.UserStatus">
            <summary>
            User status
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.UserStatus.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.UserStatus.Locked">
            <summary>
            Locked
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.ValuationBalanceType">
            <summary>
            Balance type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.Spot">
            <summary>
            Spot
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.IsolatedMargin">
            <summary>
            Isolated 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.CrossMargin">
            <summary>
            Cross 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.CoinFutures">
            <summary>
            Coin futures
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.Flat">
            <summary>
            Flat 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.Minepool">
            <summary>
            Minepool 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.CoinSwaps">
            <summary>
            Coin swaps
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.Investment">
            <summary>
            Investment
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.Borrow">
            <summary>
            Borrow 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.Earn">
            <summary>
            Earn 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.UsdtSwaps">
            <summary>
            Usdt swaps
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.Option">
            <summary>
            Option
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.OtcOptions">
            <summary>
            Otc-options
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.CryptoLoans">
            <summary>
            Crypto loans
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.ValuationBalanceType.GridTrading">
            <summary>
            Grid trading
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.WithdrawDepositStatus">
            <summary>
            The status of a transfer 
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Verifying">
            <summary>
            Awaiting verification
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Failed">
            <summary>
            Verification failed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Submitted">
            <summary>
            Withdraw request submitted successfully
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Reexamine">
            <summary>
            Under examination for withdraw validation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Canceled">
            <summary>
            Withdraw canceled by user
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Pass">
            <summary>
            Withdraw validation passed
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Reject">
            <summary>
            Withdraw validation rejected
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.PreTransfer">
            <summary>
            Withdraw is about to be released
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.WalletTransfer">
            <summary>
            On-chain transfer initiated
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.WalletReject">
            <summary>
            Transfer rejected by chain
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Confirmed">
            <summary>
            On-chain transfer completed with one confirmation for withdraw or for at least one block for deposit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.ConfirmError">
            <summary>
            On-chain transfer faied to get confirmation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Repealed">
            <summary>
            Withdraw terminated by system
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Unknown">
            <summary>
            On-chain transfer has not been received
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Confirming">
            <summary>
            On-chain transfer waits for first confirmation
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Safe">
            <summary>
            Multiple on-chain confirmation happened
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositStatus.Orphan">
            <summary>
            Confirmed but currently in an orphan branch
            </summary>
        </member>
        <member name="T:HTX.Net.Enums.WithdrawDepositType">
            <summary>
            Define transfer type
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositType.Deposit">
            <summary>
            Deposit
            </summary>
        </member>
        <member name="F:HTX.Net.Enums.WithdrawDepositType.Withdraw">
            <summary>
            Withdraw
            </summary>
        </member>
        <member name="T:HTX.Net.ExtensionMethods.HTXExtensionMethods">
            <summary>
            Extension methods specific to using the HTX API
            </summary>
        </member>
        <member name="T:HTX.Net.HTXEnvironment">
            <summary>
            HTX environments
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.RestBaseAddress">
            <summary>
            Spot Rest client address
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.UsdtMarginSwapRestBaseAddress">
            <summary>
            Spot Rest client address for USDT margin swap API
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.SocketBaseAddress">
            <summary>
            Base address for socket API
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.UsdtMarginSwapSocketBaseAddress">
            <summary>
            Socket base address for the USDT margin swap API
            </summary>
        </member>
        <member name="M:HTX.Net.HTXEnvironment.#ctor">
            <summary>
            ctor for DI, use <see cref="M:HTX.Net.HTXEnvironment.CreateCustom(System.String,System.String,System.String,System.String,System.String)"/> for creating a custom environment
            </summary>
        </member>
        <member name="M:HTX.Net.HTXEnvironment.GetEnvironmentByName(System.String)">
            <summary>
            Get the HTX environment by name
            </summary>
        </member>
        <member name="P:HTX.Net.HTXEnvironment.Live">
            <summary>
            Live environment
            </summary>
        </member>
        <member name="M:HTX.Net.HTXEnvironment.CreateCustom(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Create a custom environment
            </summary>
            <param name="name"></param>
            <param name="restAddress"></param>
            <param name="socketAddress"></param>
            <param name="usdtMarginSwapRestAddress"></param>
            <param name="usdtMarginSwapSocketAddress"></param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.HTXExchange">
            <summary>
            HTX exchange information and configuration
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.ExchangeName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.DisplayName">
            <summary>
            Exchange name
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.ImageUrl">
            <summary>
            Url to exchange image
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.Url">
            <summary>
            Url to the main website
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.ApiDocsUrl">
            <summary>
            Urls to the API documentation
            </summary>
        </member>
        <member name="P:HTX.Net.HTXExchange.Type">
            <summary>
            Type of exchange
            </summary>
        </member>
        <member name="M:HTX.Net.HTXExchange.FormatSymbol(System.String,System.String,CryptoExchange.Net.SharedApis.TradingMode,System.Nullable{System.DateTime})">
            <summary>
            Format a base and quote asset to an HTX recognized symbol 
            </summary>
            <param name="baseAsset">Base asset</param>
            <param name="quoteAsset">Quote asset</param>
            <param name="tradingMode">Trading mode</param>
            <param name="deliverTime">Delivery time for delivery futures</param>
            <returns></returns>
        </member>
        <member name="P:HTX.Net.HTXExchange.RateLimiter">
            <summary>
            Rate limiter configuration for the HTX API
            </summary>
        </member>
        <member name="T:HTX.Net.HTXRateLimiters">
            <summary>
            Rate limiter configuration for the HTX API
            </summary>
        </member>
        <member name="E:HTX.Net.HTXRateLimiters.RateLimitTriggered">
            <summary>
            Event for when a rate limit is triggered
            </summary>
        </member>
        <member name="T:HTX.Net.HTXTrackerFactory">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.HTXTrackerFactory.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="M:HTX.Net.HTXTrackerFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:HTX.Net.HTXTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.HTXTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.IHTXRestClient">
            <summary>
            Client for accessing the HTX API. 
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.IHTXRestClient.SpotApi">
            <summary>
            Spot endpoints
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.IHTXRestClient.UsdtFuturesApi">
            <summary>
            Usdt futures endpoints
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.IHTXRestClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changable after the client has been created</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.IHTXRestClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.IHTXSocketClient">
            <summary>
            Client for accessing the HTX websocket API. 
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.IHTXSocketClient.SpotApi">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.IHTXSocketClient.UsdtFuturesApi">
            <summary>
            Usdt futures streams
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.IHTXSocketClient.SetOptions(CryptoExchange.Net.Objects.Options.UpdateOptions)">
            <summary>
            Update specific options
            </summary>
            <param name="options">Options to update. Only specific options are changable after the client has been created</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.IHTXSocketClient.SetApiCredentials(CryptoExchange.Net.Authentication.ApiCredentials)">
            <summary>
            Set the API credentials for this client. All Api clients in this client will use the new credentials, regardless of earlier set options.
            </summary>
            <param name="credentials">The credentials to set</param>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi">
            <summary>
            Spot API endpoints
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.Margin">
            <summary>
            Endpoints related to margin
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.SubAccount">
            <summary>
            Endpoints related to sub-accounts
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.CommonSpotClient">
            <summary>
            DEPRECATED; use <see cref="T:CryptoExchange.Net.SharedApis.ISharedClient" /> instead for common/shared functionality. See <see href="https://jkorf.github.io/CryptoExchange.Net/docs/index.html#shared" /> for more info.
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount">
            <summary>
            HTX account endpoints. Account endpoints include balance info, withdraw/deposit info and requesting and account settings
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetUserIdAsync(System.Threading.CancellationToken)">
            <summary>
            Get the user id associated with the apikey/secret
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52d6c-7773-11ed-9966-0242ac110003"/></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of accounts associated with the apikey/secret
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4b291-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetBalancesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of balances for a specific account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4b429-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">The id of the account to get the balances for, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">GetAccountsAsync</see>.</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetPlatformValuationAsync(System.Nullable{HTX.Net.Enums.AccountType},System.String,System.Threading.CancellationToken)">
            <summary>
            Get platform asset valuation
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5058c-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountType">Filter by account type</param>
            <param name="valuationAsset">Valuation asset, only BTC supported at the moment</param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAssetValuationAsync(HTX.Net.Enums.AccountType,System.String,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the valuation of all assets
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4ff6d-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountType">Type of account to valuate</param>
            <param name="valuationAsset">The asset to get the value in</param>
            <param name="subUserId">The id of the sub user</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountHistoryAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TransactionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get a list of balance changes of specified user's account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4b85b-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">The id of the account to get the account history for, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">GetAccountsAsync</see>.</param>
            <param name="asset">Asset name, for example `ETH`</param>
            <param name="transactionTypes">Blance change types</param>
            <param name="startTime">Far point of time of the query window. The maximum size of the query window is 1 hour. The query window can be shifted within 30 days</param>
            <param name="endTime">Near point of time of the query window. The maximum size of the query window is 1 hour. The query window can be shifted within 30 days</param>
            <param name="sort">Sorting order (Ascending by default)</param>
            <param name="limit">Maximum number of items in each response (from 1 to 500, default is 100)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountLedgerAsync(System.Int64,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TransactionType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get the balance changes of specified user's account.
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec501f7-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">The id of the account to get the ledger for, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">GetAccountsAsync</see>.</param>
            <param name="asset">Asset name, for example `ETH`</param>
            <param name="transactionTypes">Blanace change types</param>
            <param name="startTime">Far point of time of the query window. The maximum size of the query window is 10 days. The query window can be shifted within 30 days</param>
            <param name="endTime">Near point of time of the query window. The maximum size of the query window is 10 days. The query window can be shifted within 30 days</param>
            <param name="sort">Sorting order (Ascending by default)</param>
            <param name="limit">Maximum number of items in each response (from 1 to 500, default is 100)</param>
            <param name="fromId">Only get orders with ID before or after this. Used together with the direction parameter</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.TransferAsync(HTX.Net.Enums.TransferAccount,HTX.Net.Enums.TransferAccount,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Transfer asset between accounts
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=10000096-77b7-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="fromAccount">Source account type</param>
            <param name="toAccount">Target account type</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="quantity">Quantity</param>
            <param name="marginAccount">Margin account. Use `USDT` for cross margin</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetDepositAddressesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the deposit addresses for an asset
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec50029-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.WithdrawAsync(System.String,System.String,System.Decimal,System.Decimal,System.String,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Withdraw an asset from the account to an address
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4cc41-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="address">The desination address of this withdraw</param>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="quantity">The quantity of asset to withdraw</param>
            <param name="fee">The fee to pay with this withdraw</param>
            <param name="network">Set as "usdt" to withdraw USDT to OMNI, set as "trc20usdt" to withdraw USDT to TRX</param>
            <param name="addressTag">A tag specified for this address</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetWithdrawDepositHistoryAsync(HTX.Net.Enums.WithdrawDepositType,System.String,System.Nullable{System.Int64},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.FilterDirection},System.Threading.CancellationToken)">
            <summary>
            Get withdrawal/deposit history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4f050-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="type">Transfer type to search</param>
            <param name="asset">The asset to withdraw, for example `ETH`</param>
            <param name="from">The transfer id to begin search</param>
            <param name="size">The number of items to return</param>
            <param name="direction">the order of response</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetTradingFeesAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get current trading fees for symbols
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec51870-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbols">Filter on symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetPointBalanceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get point balance
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec514e2-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id to request for</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.TransferPointsAsync(System.String,System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer points to another user
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec515bf-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="fromUserId">From user id</param>
            <param name="toUserId">To user id</param>
            <param name="groupId">Group id</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetUserDeductionInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get user deduction info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-18f7c48b051" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetDeductAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get deduction assets
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-18f7c4cea32" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.SetDeductionSwitchAsync(HTX.Net.Enums.DeductionSwitchType,System.String,System.Threading.CancellationToken)">
            <summary>
            Set deduction switch
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-18f7c4ff921" /></para>
            </summary>
            <param name="switchType">Deduction switch type</param>
            <param name="deductionAsset">Asset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetWithdrawalQuotasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get withdrawal quota
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec50799-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetWithdrawalAddressesAsync(System.String,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get withdrawal addresses
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec50654-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="network">Filter by network</param>
            <param name="note">Filter by note</param>
            <param name="limit">Max number of results</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetWithdrawalByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a withdrawal by client order id
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4f198-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="clientOrderId">The client order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.CancelWithdrawalAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel a pending withdrawal
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4cda7-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="id">The withdrawal id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetApiKeyInfoAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Get API key info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52c92-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="userId">User id</param>
            <param name="apiKey">The API key</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.InternalTransferAsync(System.Int64,HTX.Net.Enums.AccountType,System.Int64,System.Int64,HTX.Net.Enums.AccountType,System.Int64,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer assets between accounts
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4b9db-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="fromUserId">From user id</param>
            <param name="fromAccountType">From account type</param>
            <param name="fromAccountId">From account id</param>
            <param name="toUserId">To user id</param>
            <param name="toAccountType">To account type</param>
            <param name="toAccountId">To account id</param>
            <param name="asset">Asset to transfer, for example `ETH`</param>
            <param name="quantity">Amount to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData">
            <summary>
            HTX exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetSystemStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Get current system status and announcements
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52f93-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetSymbolsAsync(System.Threading.CancellationToken)">
            <summary>
            Get supported symbols
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec51cb5-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetAssetsAsync(System.Threading.CancellationToken)">
            <summary>
            Get supported assets
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec51aee-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetSymbolConfigAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get symbol trading configuration
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4f5d6-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbols">Filter by symbols, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetNetworksAsync(System.Nullable{HTX.Net.Enums.NetworkRequestFilter},System.String,System.Threading.CancellationToken)">
            <summary>
            Get information on networks
            <para><a href="https://www.htx.com/en-in/opend/newApiPages/?id=7ec4f25c-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="descFilter">Description filter</param>
            <param name="asset">Filter by asset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetAssetsAndNetworksAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get assets and network information
            <para><a href="https://www.htx.com/en-in/opend/newApiPages/?id=7ec516fc-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetTickersAsync(System.Threading.CancellationToken)">
            <summary>
            Gets the latest ticker for all symbols
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4a808-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets the ticker, including the best bid / best ask for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4a3b6-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to get the ticker for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get kline/candlestick data for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4a4da-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="period">The period of a single candlestick</param>
            <param name="limit">The amount of candlesticks</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetOrderBookAsync(System.String,System.Int32,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the order book for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4a0fc-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to request for, for example `ETHUSDT`</param>
            <param name="mergeStep">The way the results will be merged together</param>
            <param name="limit">The depth of the book</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetLastTradeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the last trade for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4aa2b-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to request for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetTradeHistoryAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get the last x trades for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4a59d-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to get trades for, for example `ETHUSDT`</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetSymbolDetails24HAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get 24h stats for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4a2cd-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetFullOrderBookAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get the full order book. Updated once per second and returns up to 5000 levels.
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-193426b1a86" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetSymbolStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Get the current market status
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec513b1-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get the server time
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4bb2c-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin">
            <summary>
            HTX margin endpoints.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.RepayLoanAsync(System.String,System.String,System.Decimal,System.String,System.Threading.CancellationToken)">
            <summary>
            Repay a margin loan
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5037d-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">Account id</param>
            <param name="asset">Asset to repay, for example `ETH`</param>
            <param name="quantity">Quantity to repay</param>
            <param name="transactionId">Loan transaction ID</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.TransferSpotToIsolatedMarginAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer asset from spot account to isolated margin account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4c545-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">Trading symbol, for example `ETHUSDT`</param>
            <param name="asset">Asset to transfer, for example `ETH`</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.TransferIsolatedMarginToSpotAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer asset from isolated margin to spot account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4cb3f-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">Trading symbol, for example `ETHUSDT`</param>
            <param name="asset">Asset to transfer, for example `ETH`</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns>Transfer id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.GetIsolatedLoanInterestRateAndQuotaAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Get isolated loan interest rate and quotas
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4d178-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbols">Filter on symbol, for example `ETHUSDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.RequestIsolatedMarginLoanAsync(System.String,System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Request a loan on isolated margin
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4d587-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="quantity">The quantity</param>
            <param name="ct">Cancellation token</param>
            <returns>Order id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.RepayIsolatedMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Repay an isolated margin loan
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4d7f0-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderId">Id to repay</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
            <returns>Order id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.GetIsolatedMarginClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.MarginOrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4d423-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to get history for, for example `ETHUSDT`</param>
            <param name="states">Filter by states</param>
            <param name="startDate">Filter by start date</param>
            <param name="endDate">Filter by end date</param>
            <param name="from">Start order id for use in combination with direction</param>
            <param name="direction">Direction of results in combination with from parameter</param>
            <param name="limit">Max amount of results</param>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.GetIsolatedMarginBalanceAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin account balance
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4d015-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol, for example `ETHUSDT`</param>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.TransferSpotToCrossMarginAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer from spot account to cross margin account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4c32c-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">The asset to transfer, for example `ETH`</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.TransferCrossMarginToSpotAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Transfer from cross margin account to spot account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4c47a-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">The asset to transfer, for example `ETH`</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.GetCrossLoanInterestRateAndQuotaAsync(System.Threading.CancellationToken)">
            <summary>
            Get cross margin interest rates and quotas
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4bef5-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.RequestCrossMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Request a loan on cross margin
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4c1ac-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="quantity">The quantity</param>
            <param name="ct">Cancellation token</param>
            <returns>Order id</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.RepayCrossMarginLoanAsync(System.String,System.Decimal,System.Threading.CancellationToken)">
            <summary>
            Repay a isolated margin loan
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4c26f-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderId">Id to repay</param>
            <param name="quantity">Quantity</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.GetCrossMarginClosedOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.MarginOrderStatus},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4c055-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="status">Filter by status</param>
            <param name="startDate">Filter by start date</param>
            <param name="endDate">Filter by end date</param>
            <param name="from">Start order id for use in combination with direction</param>
            <param name="direction">Direction of results in combination with from parameter</param>
            <param name="limit">Max amount of results</param>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.GetCrossMarginBalanceAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin account balance
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4bca0-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.GetCrossMarginLimitAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin limits
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec512ec-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiMargin.GetRepaymentHistoryAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get repayment history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec50446-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="repayId">Filter by repay id</param>
            <param name="accountId">Filter by account id</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Only show records after this</param>
            <param name="endTime">Only show records before this</param>
            <param name="sort">Sort direction</param>
            <param name="limit">Result limit</param>
            <param name="fromId">Search id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiShared">
            <summary>
            Shared interface for Spot rest API usage
            </summary>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount">
            <summary>
            HTX sub-account endpoints.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.SetDeductModeAsync(System.Collections.Generic.IEnumerable{System.String},HTX.Net.Enums.DeductMode,System.Threading.CancellationToken)">
            <summary>
            Set fee deduct mode for sub accounts
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52497-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserIds">Sub user ids</param>
            <param name="deductMode">Deduct from account</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.CreateSubAccountsAsync(System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXSubAccountRequest},System.Threading.CancellationToken)">
            <summary>
            Create new sub accounts
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52336-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accounts">Accounts to create</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.GetSubUserListAsync(System.Threading.CancellationToken)">
            <summary>
            Get a list of users associated with the apikey/secret
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52a87-7773-11ed-9966-0242ac110003"/></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.SetLockAsync(System.Int64,HTX.Net.Enums.LockAction,System.Threading.CancellationToken)">
            <summary>
            Set (un)lock status on a sub account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52620-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="lockAction">Lock action</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.GetSubUserAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get sub user by id
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52b46-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.SetTradableMarketAsync(System.Collections.Generic.IEnumerable{System.String},HTX.Net.Enums.SubAccountMarketType,System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set tradable market for sub accounts
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52859-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserIds">Sub user ids</param>
            <param name="accountType">Account type</param>
            <param name="enabled">Enabled or not</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.SetAssetTransferPermissionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set asset transfer permissions for sub accounts
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec529c3-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserIds">Sub user ids</param>
            <param name="enabled">Enabled</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.GetSubUserAccountsAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Gets a list of sub-user accounts associated with the sub-user id
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec51da3-7773-11ed-9966-0242ac110003"/></para>
            </summary>
            <param name="subUserId">The if of the user to get accounts for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.CreateApiKeyAsync(System.String,System.Int64,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Create a new API key
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52185-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="otpToken">Two factor authentication code</param>
            <param name="subUserId">Sub user id</param>
            <param name="note">Note</param>
            <param name="permissions">Permissions</param>
            <param name="ipAddresses">Ip addresses</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.EditApiKeyAsync(System.Int64,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Edit an API key
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52249-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="apiKey">Api key to edit</param>
            <param name="note">Note</param>
            <param name="permissions">Permissions</param>
            <param name="ipAddresses">Ip addresses</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.DeleteApiKeyAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Delete an API key
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5208e-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="apiKey">Api key to remove</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.GetDepositAddressAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Get deposit address for a sub account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5255a-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.GetDepositHistoryAsync(System.Int64,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.SortingType},System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get deposit history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5278c-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="asset">Filter by asset, for example `ETH`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="sort">Sort</param>
            <param name="limit">Max number of results</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.GetAggregateBalancesAsync(System.Threading.CancellationToken)">
            <summary>
            Get aggregate balances of all sub accounts
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4fd28-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.GetBalancesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of balances for a specific sub account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4b62b-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subAccountId">The id of the sub account to get the balances for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiSubAccount.TransferWithSubAccountAsync(System.Int64,System.String,System.Decimal,HTX.Net.Enums.TransferType,System.Threading.CancellationToken)">
            <summary>
            Transfer asset between parent and sub account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4feac-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subAccountId">The target sub account id to transfer to or from</param>
            <param name="asset">The asset to transfer, for example `ETH`</param>
            <param name="quantity">The quantity of asset to transfer</param>
            <param name="transferType">The type of transfer</param>
            <param name="ct">Cancellation token</param>
            <returns>Unique transfer id</returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading">
            <summary>
            HTX trading endpoints, placing and mananging orders.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.PlaceOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.Nullable{HTX.Net.Enums.SourceType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <summary>
            Places an order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4ee16-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">The account to place the order for, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">SpotApi.Account.GetAccountsAsync</see>.</param>
            <param name="symbol">The symbol to place the order for, for example `ETHUSDT`</param>
            <param name="side">The side of the order</param>
            <param name="type">The type of the order</param>
            <param name="quantity">The quantity of the order</param>
            <param name="price">The price of the order. Should be omitted for market orders</param>
            <param name="clientOrderId">The clientOrderId the order should get</param>
            <param name="source">Source. defaults to SpotAPI</param>
            <param name="stopPrice">Stop price</param>
            <param name="stopOperator">Operator of the stop price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.PlaceMultipleOrderAsync(System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders in a single call
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4d8cc-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orders">Orders to place</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.PlaceMarginOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,HTX.Net.Enums.MarginPurpose,HTX.Net.Enums.SourceType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <summary>
            Place a new margin order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=10000066-77b7-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">The account to place the order for, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">SpotApi.Account.GetAccountsAsync</see>.</param>
            <param name="symbol">The symbol to place the order for, for example `ETHUSDT`</param>
            <param name="side">The side of the order</param>
            <param name="type">The type of the order</param>
            <param name="purpose">Transaction purpose</param>
            <param name="quantity">The quantity of the order in base asset</param>
            <param name="quoteQuantity">The quantity of the order in quote asset</param>
            <param name="borrowQuantity">The quantity that needs to be borrowed</param>
            <param name="price">The price of the order. Should be omitted for market orders</param>
            <param name="source">Source. defaults to SpotAPI</param>
            <param name="stopPrice">Stop price</param>
            <param name="stopOperator">Operator of the stop price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOpenOrdersAsync(System.Nullable{System.Int64},System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.String,System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get a list of open orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4e04b-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">The account id for which to get the orders for, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">SpotApi.Account.GetAccountsAsync</see>.</param>
            <param name="symbol">The symbol for which to get the orders for, for example `ETHUSDT`</param>
            <param name="side">Only get buy or sell orders</param>
            <param name="orderTypes">Filter by order types</param>
            <param name="fromId">Return results after this id</param>
            <param name="direction">Direction of results</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Cancel an open order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4e938-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderId">The id of the order to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelOrderByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an open order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4ef06-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="clientOrderId">The client id of the order to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple open orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4ea21-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderIds">The ids of the orders to cancel</param>
            <param name="clientOrderIds">The client ids of the orders to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelAllOrdersAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel all order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4ef06-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">Symbol</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelOrdersByCriteriaAsync(System.Nullable{System.Int64},System.Collections.Generic.IEnumerable{System.String},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Cancel multiple open orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4eb66-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">The account id used for this cancel</param>
            <param name="symbols">The trading symbol list (maximum 10 symbols, default value all symbols)</param>
            <param name="side">Filter on the direction of the trade</param>
            <param name="limit">The number of orders to cancel [1, 100]</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOrderAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get details of an order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4e31c-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderId">The id of the order to retrieve</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOrderByClientOrderIdAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get details of an order by client order id
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4ec26-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="clientOrderId">The client id of the order to retrieve</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOrderTradesAsync(System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get a list of trades made for a specific order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4e708-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderId">The id of the order to get trades for</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetClosedOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatus},System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get a list of orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4e1c4-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for, for example `ETHUSDT`</param>
            <param name="states">The states of orders to return</param>
            <param name="types">The types of orders to return</param>
            <param name="startTime">Only get orders after this date</param>
            <param name="endTime">Only get orders before this date</param>
            <param name="fromId">Only get orders with ID before or after this. Used together with the direction parameter</param>
            <param name="direction">Direction of the results to return when using the fromId parameter</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetUserTradesAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get a list of user trades
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4de21-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to retrieve trades for, for example `ETHUSDT`</param>
            <param name="types">The type of orders to return</param>
            <param name="startTime">Only get orders after this date</param>
            <param name="endTime">Only get orders before this date</param>
            <param name="fromId">Only get orders with ID before or after this. Used together with the direction parameter</param>
            <param name="direction">Direction of the results to return when using the fromId parameter</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetHistoricalOrdersAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec4db3d-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to get orders for, for example `ETHUSDT`</param>
            <param name="startTime">Only get orders after this date</param>
            <param name="endTime">Only get orders before this date</param>
            <param name="direction">Direction of the results to return</param>
            <param name="limit">The max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.PlaceConditionalOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.ConditionalOrderType,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.TimeInForce},System.String,System.Threading.CancellationToken)">
            <summary>
            Place a new conditional order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec50918-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">The account the order should be placed from, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">SpotApi.Account.GetAccountsAsync</see>.</param>
            <param name="symbol">The symbol the order is for, for example `ETHUSDT`</param>
            <param name="side">Side of the order</param>
            <param name="type">Type of the order</param>
            <param name="stopPrice">Stop price of the order</param>
            <param name="quantity">Quantity of the order</param>
            <param name="price">Price of the order</param>
            <param name="quoteQuantity">Quote quantity of the order</param>
            <param name="trailingRate">Trailing rate of the order</param>
            <param name="timeInForce">Time in force</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.CancelConditionalOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Cancel conditional orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec50be1-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="clientOrderIds">Client order ids of the conditional orders to cancels</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetOpenConditionalOrdersAsync(System.Nullable{System.Int64},System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.ConditionalOrderType},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get open conditional orders based on the parameters
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec51082-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">Filter by account id, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">SpotApi.Account.GetAccountsAsync</see>.</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="side">Filter by side</param>
            <param name="type">Filter by type</param>
            <param name="sort">Sort direction</param>
            <param name="limit">Max results</param>
            <param name="fromId">Ids after this</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetClosedConditionalOrdersAsync(System.String,HTX.Net.Enums.ConditionalOrderStatus,System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.ConditionalOrderType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.String,System.Nullable{System.Int32},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get closed conditional orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec50dcf-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="accountId">Filter by account id, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">SpotApi.Account.GetAccountsAsync</see>.</param>
            <param name="symbol">Filter by symbol, for example `ETHUSDT`</param>
            <param name="side">Filter by side</param>
            <param name="type">Filter by type</param>
            <param name="sort">Sort direction</param>
            <param name="limit">Max results</param>
            <param name="fromId">Ids after this</param>
            <param name="ct">Cancelation token</param>
            <param name="status">Filter by status</param>
            <param name="startTime">Return only entries after this time</param>
            <param name="endTime">Return only entries before this time</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiTrading.GetConditionalOrderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get a conditional order by id
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5121b-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancelation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi">
            <summary>
            Spot streams
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval)">
            <summary>
            Get kline/candlestick data for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#get-latest-tickers-for-all-pairs" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="period">The period of a single candlestick</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to kline/candlestick updates for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec53241-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="period">The period of a single candlestick</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetOrderBookWithMergeStepAsync(System.String,System.Int32)">
            <summary>
            Get the current order book for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-depth" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="mergeStep">The way the results will be merged together</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetOrderBookAsync(System.String,System.Int32)">
            <summary>
            Get the current order book for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-by-price-incremental-update" /></para>
            </summary>
            <param name="symbol">The symbol to get the data for, for example `ETHUSDT`</param>
            <param name="levels">The amount of rows. 5, 20, 150 or 400</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToPartialOrderBookUpdates100MilisecondAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to order book updates for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5378b-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="levels">The number of price levels. 5, 10 or 20</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToPartialOrderBookUpdates1SecondAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to order book updates for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5342e-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="mergeStep">The way the results will be merged together</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToOrderBookChangeUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXIncementalOrderBook}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to order book updates for a symbol, 
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5362b-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="levels">The number of price levels. 5, 20, 150 or 400</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetTradeHistoryAsync(System.String)">
            <summary>
            Get a list of trades for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#trade-detail" /></para>
            </summary>
            <param name="symbol">The symbol to get trades for, for example `ETHUSDT`</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolTrade}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to trade updates for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec53b69-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.GetSymbolDetailsAsync(System.String)">
            <summary>
            Get details for a symbol
            <para><a href="https://huobiapi.github.io/docs/spot/v1/en/#market-details" /></para>
            </summary>
            <param name="symbol">The symbol to get data for, for example `ETHUSDT`</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToSymbolDetailUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolDetails}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to symbol detail updates for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec53561-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSymbolTick}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to updates for a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec538cf-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">The symbol to subscribe, for example `ETHUSDT`</param>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToTickerUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXSymbolTicker}}},System.Threading.CancellationToken)">
            <summary>
            Subscribes to updates for all tickers
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec538cf-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">The handler for updates</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXBestOffer}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to changes of a symbol's best ask/bid
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec5333f-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">Symbol to subscribe to, for example `ETHUSDT`</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToOrderUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to updates of orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec53c8f-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">Subscribe on a specific symbol</param>
            <param name="onOrderSubmitted">Event handler for the order submitted event</param>
            <param name="onOrderMatched">Event handler for the order matched event</param>
            <param name="onOrderCancelation">Event handler for the order cancelled event</param>
            <param name="onConditionalOrderTriggerFailure">Event handler for the conditional order trigger failed event</param>
            <param name="onConditionalOrderCanceled">Event handler for the condition order canceled event</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToAccountUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXAccountUpdate}},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Subscribe to updates of account balances
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec52e28-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onAccountUpdate">Event handler</param>
            <param name="updateMode">The update mode. Defaults to 1, see API docs for more info</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.SubscribeToOrderDetailsUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXTradeUpdate}},System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to detailed order matched/canceled updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=7ec53dd5-7773-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="symbol">Subscribe to a specific symbol, for example `ETHUSDT`</param>
            <param name="onOrderMatch">Event handler for the order matched event</param>
            <param name="onOrderCancel">Event handler for the order canceled event</param>
            <param name="ct">Cancellation token for closing this subscription</param>
            <returns>A stream subscription. This stream subscription can be used to be notified when the socket is disconnected/reconnected</returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.PlaceOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,System.Decimal,System.Nullable{System.Decimal},System.String,System.Nullable{HTX.Net.Enums.SourceType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <summary>
            Place a new order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-1928f079ab6" /></para>
            </summary>
            <param name="accountId"></param>
            <param name="symbol"></param>
            <param name="side"></param>
            <param name="type"></param>
            <param name="quantity"></param>
            <param name="price"></param>
            <param name="clientOrderId"></param>
            <param name="source"></param>
            <param name="stopPrice"></param>
            <param name="stopOperator"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.PlaceMultipleOrdersAsync(System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.HTXOrderRequest},System.Threading.CancellationToken)">
            <summary>
            Place multiple orders in a single call. Make sure to check each order response to see if placement succeeded.
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-1928f115372" /></para>
            </summary>
            <param name="orders"></param>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.PlaceMarginOrderAsync(System.Int64,System.String,HTX.Net.Enums.OrderSide,HTX.Net.Enums.OrderType,HTX.Net.Enums.MarginPurpose,HTX.Net.Enums.SourceType,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Operator},System.Threading.CancellationToken)">
            <summary>
            Place a new margin order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-1928f216d9e" /></para>
            </summary>
            <param name="accountId">The account to place the order for, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">SpotApi.Account.GetAccountsAsync</see>.</param>
            <param name="symbol">The symbol to place the order for, for example `ETHUSDT`</param>
            <param name="side">The side of the order</param>
            <param name="type">The type of the order</param>
            <param name="purpose">Transaction purpose</param>
            <param name="quantity">The quantity of the order in base asset</param>
            <param name="quoteQuantity">The quantity of the order in quote asset</param>
            <param name="borrowQuantity">The quantity that needs to be borrowed</param>
            <param name="price">The price of the order. Should be omitted for market orders</param>
            <param name="source">Source</param>
            <param name="stopPrice">Stop price</param>
            <param name="stopOperator">Operator of the stop price</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.CancelAllOrdersAsync(System.Int64,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Cancel all orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-1928f2962a5" /></para>
            </summary>
            <param name="accountId">The account to place the order for, account ids can be retrieved with <see cref="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientSpotApiAccount.GetAccountsAsync(System.Threading.CancellationToken)">SpotApi.Account.GetAccountsAsync</see>.</param>
            <param name="symbols">Filter by symbols</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.CancelOrdersAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an order
            </summary>
            <param name="orderId">Order id, either this or clientOrderId should be provided</param>
            <param name="clientOrderId">Client order id, either this or orderId should be provided</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApi.CancelOrdersAsync(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            Cancel orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-1928f2fa07f" /></para>
            </summary>
            <param name="orderIds">Order ids to cancel</param>
            <param name="clientOrderIds">Client order ids to cancel</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXSocketClientSpotApiShared">
            <summary>
            Shared interface for Spot socket API usage
            </summary>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.SpotApi.IHTXRestClientUsdtFuturesApiShared">
            <summary>
            Shared interface for Usdt futures rest API usage
            </summary>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApi">
            <summary>
            Usdt futures api endpoints
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApi.Account">
            <summary>
            Endpoints related to account settings, info or actions
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApi.ExchangeData">
            <summary>
            Endpoints related to retrieving market and system data
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApi.SubAccount">
            <summary>
            Endpoints related to sub accounts
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApi.Trading">
            <summary>
            Endpoints related to orders and trades
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApi.SharedClient">
            <summary>
            Get the shared rest requests client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount">
            <summary>
            HTX usdt futures endpoints
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetAssetValuationAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get asset valuation
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8172e-77b5-11ed-9966-0242ac110003"/></para>
            </summary>
            <param name="asset">The asset, for example `ETH`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin account info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb81843-77b5-11ed-9966-0242ac110003"/></para>
            </summary>
            <param name="contractCode">Optional contract code filter, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginAccountInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin account info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb819b6-77b5-11ed-9966-0242ac110003"/></para>
            </summary>
            <param name="marginAccount">Optional margin account filter, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginAssetsAndPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin assets and positions
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb81e77-77b5-11ed-9966-0242ac110003"/></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginAvailableLeverageAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin available leverage
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb82f42-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin positions
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb81c49-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Filter by contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin settlement records
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb82cf8-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetFinancialRecordsAsync(System.String,System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.FinancialRecordType},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get financial records
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb82988-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="types">Filter by type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="direction">Direction</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginAssetsAndPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin assets and positions
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb81d85-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginAvailableLeverageAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin available leverage
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb82e6c-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginPositionsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin position info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb81b5a-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin settlement records
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb82ba7-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetTradingFeesAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get trading fees
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb831de-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business tpye</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.SetCrossMarginPositionModeAsync(System.String,HTX.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <summary>
            Set cross margin position mode
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb843e0-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="positionMode">Position mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.SetIsolatedMarginPositionModeAsync(System.String,HTX.Net.Enums.PositionMode,System.Threading.CancellationToken)">
            <summary>
            Set isolated margin position mode
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb842fe-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="positionMode">Position mode</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.TransferMarginAccountsAsync(System.String,System.String,System.String,System.Decimal,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Transfer between margin accounts
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb83f97-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="asset">Asset to transfer, for example `USDT`</param>
            <param name="fromMarginAccount">From account</param>
            <param name="toMarginAccount">To account</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetOrderLimitsAsync(HTX.Net.Enums.OrderPriceType,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get order limits
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb83090-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderType">The order type</param>
            <param name="contractCode">Filter by contract code, for example `ETH-USDT`</param>
            <param name="pair">Filter by pair, for example `ETH-USDT`</param>
            <param name="contractType">Filter by contract type</param>
            <param name="businessType">Filter by businessType</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginTransferLimitsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin transfer limits
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb83330-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginTransferLimitsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin transfer limits
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb83475-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginPositionLimitAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin position limits
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb835b7-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginPositionLimitsAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin position limits
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb836ae-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginLeveragePositionLimitsAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin leverage position limits
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb838ef-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginLeveragePositionLimitsAsync(HTX.Net.Enums.BusinessType,System.Threading.CancellationToken)">
            <summary>
            Get cross margin leverage position limits
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb839e5-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetTradingStatusAsync(System.Threading.CancellationToken)">
            <summary>
            Get user trading status
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb840a5-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetIsolatedMarginPositionModeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin position mode
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=10000088-77b7-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiAccount.GetCrossMarginPositionModeAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin position mode
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=10000090-77b7-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData">
            <summary>
            HTX usdt futures exchange data endpoints. Exchange data includes market data (tickers, order books, etc) and system status.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetBasisDataAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.String,System.Threading.CancellationToken)">
            <summary>
            Get basis data
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8147e-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="interval">Kline interval</param>
            <param name="limit">Limit</param>
            <param name="basisPriceType">Price type (open, close, high, low, average)</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetBookTickerAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get the current best bid/ask values
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8098e-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="type">Type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetContractsAsync(System.String,System.Nullable{HTX.Net.Enums.MarginMode},System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get contract info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb802c2-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="supportMarginMode">Support margin mode</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetCrossMarginAdjustFactorInfoAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin adjust factor info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7fc0d-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="asset">Asset, for example `ETH`</param>
            <param name="contractType">Type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetCrossMarginTradeStatusAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin trade status
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb841ac-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetCrossMarginTransferStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin transfer status
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89abf-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetCrossTieredMarginInfoAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get cross tiered margin info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7f7a9-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetEstimatedFundingRateKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get estimated funding rate klines
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb813aa-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="interval">Kline interval</param>
            <param name="limit">Limit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetEstimatedSettlementPriceAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get estimated settlement price
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7f9d4-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetFundingRateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get funding rate
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7ec03-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetFundingRatesAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get funding rates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7ed6a-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetHistoricalFundingRatesAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical funding rates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7ee4a-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetHistoricalSettlementRecordsAsync(System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get historical settlement records
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7f323-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetInsuranceFundHistoryAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get insurance fund history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7fd58-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetInsuranceFundInfoAsync(System.Threading.CancellationToken)">
            <summary>
            Get the total amount of risk funds for all current business lines, priced in USDT.
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-192412eef1f" /></para>
            </summary>
            <param name="ct"></param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetIsolatedMarginAdjustFactorInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin adjust factor info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7fb2c-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetIsolatedMarginStatusAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin status
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7f665-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetIsolatedMarginTieredInfoAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin tier info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7f887-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get klines
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80aca-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="interval">Kline interval</param>
            <param name="limit">Limit</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetLastTradesAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get last trades
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80f4c-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetLiquidationOrdersAsync(System.String,HTX.Net.Enums.LiquidationTradeType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get liquidation orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7f19e-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="tradeType">Trade type</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="direction">Result direction</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetTickerAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get ticker
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80ce4-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetTickersAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get tickers
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80df2-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetOpenInterestHistoryAsync(HTX.Net.Enums.InterestPeriod,HTX.Net.Enums.Unit,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get open interest
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8117d-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="period">Period</param>
            <param name="unit">Unit</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="symbol">Symbol</param>
            <param name="type">Type</param>
            <param name="limit">Limit</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetOrderBookAsync(System.String,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get order book
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb808ad-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="mergeStep">Merge step</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetPremiumIndexKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get premium index klines
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb81255-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="interval">Interval</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetRecentTradesAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get recent trades
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb81024-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="limit">Max number of results to return</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetServerTimeAsync(System.Threading.CancellationToken)">
            <summary>
            Get server time
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80500-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetSwapIndexPriceAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get swap index price
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80424-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetSwapOpenInterestAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get swap open interest
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80166-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="businessType">Business tpye</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetSwapPriceLimitationAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get swap price limitation
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80013-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract tpye</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetSwapRiskInfoAsync(System.String,System.Nullable{HTX.Net.Enums.BusinessType},System.Threading.CancellationToken)">
            <summary>
            Get swap risk info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7feba-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="businessType">Business type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetTopTraderAccountSentimentAsync(System.String,HTX.Net.Enums.Period,System.Threading.CancellationToken)">
            <summary>
            Get top trader account sentiment
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7f487-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="period">Period</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetTopTraderPositionSentimentAsync(System.String,HTX.Net.Enums.Period,System.Threading.CancellationToken)">
            <summary>
            Get top trader position sentiment
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7f568-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="period">Period</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetContractElementsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get contract elements and info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-18bd764260c" /></para>
            </summary>
            <param name="contractCode">Filter by contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiExchangeData.GetMarkPriceKlinesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Get mark price klines
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb80ba5-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="klineInterval">Kline interval</param>
            <param name="limit">Max number of results</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount">
            <summary>
            HTX usdt futures sub account endpoints
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.GetCrossMarginAssetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin sub account assets
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8243c-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.GetIsolatedMarginAssetsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin sub account assets
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb822f5-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.GetMasterSubTransferRecordsAsync(System.String,System.Int32,System.Nullable{HTX.Net.Enums.MasterSubTransferType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get master sub account transfer records
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb83c2c-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="daysInHistory">Days in history</param>
            <param name="type">Filter by type</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.SetTradingPermissionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Threading.CancellationToken)">
            <summary>
            Set sub account trading permissions
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb81ffc-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subAccountUids">Uids of the subaccounts</param>
            <param name="enabled">Enable trading</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.TransferMasterSubAsync(System.String,System.String,System.String,System.String,System.Decimal,HTX.Net.Enums.MasterSubTransferType,System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Transfer between master and sub account
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb83b3e-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUid">Sub account uid</param>
            <param name="asset">Asset to transfer, for example `ETH`</param>
            <param name="fromMarginAccount">From account</param>
            <param name="toMarginAccount">To account</param>
            <param name="quantity">Quantity to transfer</param>
            <param name="type">Type</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.GetTradePermissionsAsync(System.Collections.Generic.IEnumerable{System.String},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get sub accounts trade permissions
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-18d119ebd6b" /></para>
            </summary>
            <param name="subAccountUids">Filter by sub user ids</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="filterDirection">Filter direction</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.GetIsolatedMarginAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin asset information
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb822f5-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.GetCrossMarginAssetInfoAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get cross margin asset info
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8243c-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="marginAccount">Margin account, for example `USDT`</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.GetIsolatedMarginPositionsAsync(System.Int64,System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin positions
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb827d0-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="contractCode">Filter by contract code, for example `ETH-USDT`</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiSubAccount.GetCrossMarginPositionsAsync(System.Int64,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin positions
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb827d0-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="subUserId">Sub user id</param>
            <param name="contractCode">Filter by contract code, for example `ETH-USDT`</param>
            <param name="pair">Filter by pair, for example `ETH-USDT`</param>
            <param name="contractType">Filter by contract type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading">
            <summary>
            HTX usdt futures trading endpoints, placing and managing orders.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelAllCrossMarginOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <summary>
            Cancel all cross margin orders fitting the parameters
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb84ea6-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair</param>
            <param name="contractType">Contract type</param>
            <param name="side">Side</param>
            <param name="offset">Offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelAllIsolatedMarginOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <summary>
            Cancel all isolated margin orders fitting the parameters
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb84dae-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="side">Side</param>
            <param name="offset">Offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelCrossMarginOrderAsync(System.Nullable{System.Int64},System.Nullable{System.Int64},System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Cancel a cross margin order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb84bb2-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderId">The order id</param>
            <param name="clientOrderId">The client order id</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair</param>
            <param name="contractType">Contract type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelCrossMarginOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Cancel cross margin orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb84bb2-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderIds">Order ids</param>
            <param name="clientOrderIds">Client order ids</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair</param>
            <param name="contractType">Contract type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginOrderAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel an isolated margin order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb84a62-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Cancel isolated margin orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb84a62-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order ids</param>
            <param name="clientOrderId">Client order ids</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.SetCrossMarginLeverageAsync(System.Int32,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Set cross margin leverage
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb850d7-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="leverageRate">Leverage rate</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.SetIsolatedMarginLeverageAsync(System.String,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Set isolated margin leverage
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb84ff2-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginClosedOrdersAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Boolean,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatusFilter},System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross margin closed orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb85ba1-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="tradeType">Trade type</param>
            <param name="allOrders">All orders (true), or only orders in finished status (false)</param>
            <param name="pair">Filter by pair, for example `ETH-USDT`</param>
            <param name="status">Filter by status</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="direction">Direction</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginOpenOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin open orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb858fe-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair</param>
            <param name="page">Pair, for example `ETH-USDT`</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by</param>
            <param name="tradeType">Trade type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginOrderAsync(System.String,System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross margin order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb85379-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginOrderDetailsAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get cross margin order details
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8562d-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginOrdersAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb85379-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderIds">Order ids</param>
            <param name="clientOrderIds">Client order ids</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginUserTradesAsync(System.String,HTX.Net.Enums.MarginTradeType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin user trades
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb85fa3-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="tradeType">Trade type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="filterDirection">Filter direction</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginUserTradesAsync(System.String,HTX.Net.Enums.MarginTradeType,System.String,System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get cross margin user trades
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb86121-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="tradeType">Trade type</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="filterDirection">Filter direction</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginClosedOrdersAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Boolean,System.Collections.Generic.IEnumerable{HTX.Net.Enums.OrderStatusFilter},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Nullable{HTX.Net.Enums.FilterDirection},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin closed orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb85a53-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="tradeType">Trade type</param>
            <param name="allOrders">All orders (true), or only orders in finished status (false)</param>
            <param name="status">Filter by status</param>
            <param name="startTime">Filter by start time</param>
            <param name="endTime">Filter by end time</param>
            <param name="direction">Direction</param>
            <param name="fromId">Return results after this id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOpenOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin open orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb85791-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by</param>
            <param name="tradeType">Trade type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOrderAsync(System.String,System.Nullable{System.Int64},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get an isolated margin order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb85222-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOrderDetailsAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin order details
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb854d2-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOrdersAsync(System.String,System.Collections.Generic.IEnumerable{System.Int64},System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb85222-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderIds">Order ids</param>
            <param name="clientOrderIds">Client order ids</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.PlaceCrossMarginOrderAsync(System.Int64,HTX.Net.Enums.OrderSide,System.Int32,HTX.Net.Enums.OrderPriceType,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Place a new cross margin order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb84611-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="quantity">Order quantity</param>
            <param name="side">Order side</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="price">Price</param>
            <param name="offset">Offset</param>
            <param name="orderPriceType">Order price type</param>
            <param name="takeProfitTriggerPrice">Take profit trigger price</param>
            <param name="takeProfitOrderPrice">Take profit order price</param>
            <param name="takeProfitOrderPriceType">Take profit order price type</param>
            <param name="stopLossTriggerPrice">Stop loss trigger price</param>
            <param name="stopLossOrderPrice">Stop loss order price</param>
            <param name="stopLossOrderPriceType">Stop loss order price type</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.PlaceIsolatedMarginOrderAsync(System.String,System.Int64,HTX.Net.Enums.OrderSide,System.Int32,HTX.Net.Enums.OrderPriceType,System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Boolean},System.Nullable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            Place a new isolated margin order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb844bb-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="quantity">Quantity</param>
            <param name="side">Order side</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="price">Price</param>
            <param name="offset">Offset</param>
            <param name="orderPriceType">Order price type</param>
            <param name="takeProfitTriggerPrice">Take profit trigger price</param>
            <param name="takeProfitOrderPrice">Take profit order price</param>
            <param name="takeProfitOrderPriceType">Take profit order price type</param>
            <param name="stopLossTriggerPrice">Stop loss trigger price</param>
            <param name="stopLossOrderPrice">Stop loss order price</param>
            <param name="stopLossOrderPriceType">Stop loss order price type</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="clientOrderId">Client order id</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelOrdersAfterAsync(System.Boolean,System.Nullable{System.TimeSpan},System.Threading.CancellationToken)">
            <summary>
            Cancel all orders after the timeout elapses. Can be called again to extend the timeout. Set enable to false to disable the timeout
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=10000068-77b7-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="enable">Enabled or disable cancelation</param>
            <param name="timeout">The timeout after which all order are canceled</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CloseIsolatedMarginPositionAsync(System.String,HTX.Net.Enums.OrderSide,System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.LightningPriceType},System.Threading.CancellationToken)">
            <summary>
            Lightning close isolated margin position
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb86944-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="direction">Direction</param>
            <param name="clientOrderId">Client order id</param>
            <param name="orderPriceType">Order price type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CloseCrossMarginPositionAsync(HTX.Net.Enums.OrderSide,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int64},System.Nullable{HTX.Net.Enums.LightningPriceType},System.Threading.CancellationToken)">
            <summary>
            Lightning close cross margin position
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb86944-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="direction">Direction</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="clientOrderId">Client order id</param>
            <param name="orderPriceType">Order price type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.PlaceIsolatedMarginTriggerOrderAsync(System.String,HTX.Net.Enums.TriggerType,System.Decimal,System.Decimal,HTX.Net.Enums.OrderSide,System.Nullable{HTX.Net.Enums.Offset},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place a new isolated margin trigger order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb86c95-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="triggerType">Trigger type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="quantity">Order quantity</param>
            <param name="side">Order side</param>
            <param name="offset">Offset</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="orderPrice">Order price</param>
            <param name="orderPriceType">Order price type</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.PlaceCrossMarginTriggerOrderAsync(HTX.Net.Enums.TriggerType,System.Decimal,System.Decimal,HTX.Net.Enums.OrderSide,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.Offset},System.Nullable{System.Boolean},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Place a new cross margin trigger order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb86dfe-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="triggerType">Trigger type</param>
            <param name="triggerPrice">Trigger price</param>
            <param name="quantity">Order quantity</param>
            <param name="side">Order side</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="offset">Offset</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="orderPrice">Order price</param>
            <param name="orderPriceType">Order price type</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginTriggerOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel isolated margin trigger order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb86f61-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelCrossMarginTriggerOrderAsync(System.String,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Cancel cross margin trigger order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87056-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelAllIsolatedMarginTriggerOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <summary>
            Cancel all isolated margin trigger orders matching the parameters
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87161-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="side">Filter by side</param>
            <param name="offset">Filter by offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelAllCrossMarginTriggerOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <summary>
            Cancel all cross margin trigger orders matching the parameters
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb872c3-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="side">Filter by side</param>
            <param name="offset">Filter by offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOpenTriggerOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <summary>
            Get isolated margin open trigger orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb873a8-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="tradeType">Trade type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginOpenTriggerOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <summary>
            Get cross margin open trigger orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb874fd-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="tradeType">Trade type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginTriggerOrderHistoryAsync(System.String,HTX.Net.Enums.MarginTradeType,System.Int32,HTX.Net.Enums.OrderStatusFilter,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin trigger order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87658-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="tradeType">Trade type</param>
            <param name="daysPast">Amount of days ago. Max 90</param>
            <param name="status">Status</param>
            <param name="page">Page</param>
            <param name="pageIndex">Page index</param>
            <param name="sortBy">Sort by; 'created_at' or 'update_time'</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginTriggerOrderHistoryAsync(HTX.Net.Enums.MarginTradeType,System.Int32,HTX.Net.Enums.OrderStatusFilter,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin trigger order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb877ac-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="tradeType">Trade type</param>
            <param name="daysPast">Amount of days ago. Max 90</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="status">Status</param>
            <param name="page">Page</param>
            <param name="pageIndex">Page index</param>
            <param name="sortBy">Sort by; 'created_at' or 'update_time'</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.SetIsolatedMarginTpSlAsync(System.String,HTX.Net.Enums.OrderSide,System.Decimal,System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Threading.CancellationToken)">
            <summary>
            Set isolated margin order take profit / stop loss for an existing position
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87911-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="side">Order side</param>
            <param name="quantity">Quantity</param>
            <param name="takeProfitTriggerPrice">Take profit trigger price</param>
            <param name="takeProfitOrderPrice">Take profit order price</param>
            <param name="takeProfitOrderPriceType">Take profit order price type</param>
            <param name="stopLossTriggerPrice">Stop loss trigger price</param>
            <param name="stopLossOrderPrice">Stop loss order price</param>
            <param name="stopLossOrderPriceType">Stop loss order price type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.SetCrossMarginTpSlAsync(HTX.Net.Enums.OrderSide,System.Decimal,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Nullable{System.Decimal},System.Nullable{System.Decimal},System.Nullable{HTX.Net.Enums.OrderPriceType},System.Threading.CancellationToken)">
            <summary>
            Set cross margin order take profit / stop loss for an existing position
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87a6f-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="side">Order side</param>
            <param name="quantity">Quantity</param>
            <param name="takeProfitTriggerPrice">Take profit trigger price</param>
            <param name="takeProfitOrderPrice">Take profit order price</param>
            <param name="takeProfitOrderPriceType">Take profit order price type</param>
            <param name="stopLossTriggerPrice">Stop loss trigger price</param>
            <param name="stopLossOrderPrice">Stop loss order price</param>
            <param name="stopLossOrderPriceType">Stop loss order price type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginTpSlAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel isolated margin take profit / stop loss orders for an existing position
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87bc0-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelCrossMarginTpSlAsync(System.String,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Cancel cross margin take profit / stop loss orders for an existing position
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87bc0-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelAllIsolatedMarginTpSlAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <summary>
            Cancel all isolated margin take profit / stop loss orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87d94-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="side">Side</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelAllCrossMarginTpSlAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Threading.CancellationToken)">
            <summary>
            Cancel all cross margin take profit / stop loss orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87edb-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="side">Side</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginOpenTpSlOrdersAsync(System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <summary>
            Get open isolated margin take profit / stop loss orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb87fb0-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="page">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="tradeType">Trade type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginOpenTpSlOrdersAsync(System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Threading.CancellationToken)">
            <summary>
            Get open cross margin take profit / stop loss orders
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="page">Page index</param>
            <param name="pageSize">Page size</param>
            <param name="tradeType">Trade type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginTpSlHistoryAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TpSlStatus},System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin take profit / stop loss order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb88253-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="tpSlOrderStatus">Status</param>
            <param name="daysPast">Amount of days ago. Max 90</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by; 'created_at' or 'update_time'</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginTpSlHistoryAsync(System.Collections.Generic.IEnumerable{HTX.Net.Enums.TpSlStatus},System.Int32,System.String,System.String,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross maring take profit / stop loss order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb883a0-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="tpSlOrderStatus">Status</param>
            <param name="daysPast">Amount of days ago. Max 90</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by; 'created_at' or 'update_time'</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetIsolatedMarginPositionOpenTpSlInfoAsync(System.String,System.Int64,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin position open info with attached tp/sl orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb884f1-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetCrossMarginPositionOpenTpSlInfoAsync(System.Int64,System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin position open info with attached tp/sl orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8864d-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="orderId">Order id</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.PlaceIsolatedMarginTrailingOrderAsync(System.String,System.Boolean,HTX.Net.Enums.OrderSide,HTX.Net.Enums.Offset,System.Int32,System.Decimal,System.Decimal,System.Decimal,HTX.Net.Enums.OrderPriceType,System.Threading.CancellationToken)">
            <summary>
            Place isolated margin trailing order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb88960-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="side">Side</param>
            <param name="offset">Offset</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="quantity">Quantity</param>
            <param name="callbackRate">Callback rate, 0.01 means 1%</param>
            <param name="activePrice">Active price</param>
            <param name="orderPriceType">Price type</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.PlaceCrossMarginTrailingOrderAsync(HTX.Net.Enums.OrderSide,HTX.Net.Enums.Offset,System.Int32,System.Decimal,System.Decimal,System.Decimal,HTX.Net.Enums.OrderPriceType,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Boolean},System.Threading.CancellationToken)">
            <summary>
            Place cross margin trailing order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb88bb5-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="side">Side</param>
            <param name="offset">Offset</param>
            <param name="leverageRate">Leverage rate</param>
            <param name="quantity">Quantity</param>
            <param name="callbackRate">Callback rate, 0.01 means 1%</param>
            <param name="activePrice">Active price</param>
            <param name="orderPriceType">Price type</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="reduceOnly">Reduce only</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelIsolatedMarginTrailingOrderAsync(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            Cancel an isolated margin trailing order
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb88f2c-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="orderId">Order id</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelCrossMarginTrailingOrderAsync(System.String,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Threading.CancellationToken)">
            <summary>
            Cancel a cross margin trailing order
            </summary>
            <param name="orderId">Order id</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelAllIsolatedMarginTrailingOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <summary>
            Cancel all open isolated margin trailing orders on a symbol
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8924f-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="side">Filter by side</param>
            <param name="offset">Filter by offset</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.CancelAllCrossMarginTrailingOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.OrderSide},System.Nullable{HTX.Net.Enums.Offset},System.Threading.CancellationToken)">
            <summary>
            Cancel all open cross margin trailing orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="side">Filter by side</param>
            <param name="offset">Filter by offset</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetOpenIsolatedMarginTrailingOrdersAsync(System.String,System.Nullable{HTX.Net.Enums.MarginTradeType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get open isolated margin trailing orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb894b7-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="tradeType">Trade type</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetOpenCrossMarginTrailingOrdersAsync(System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{HTX.Net.Enums.MarginTradeType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Get open cross margin trailing orders
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89614-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="tradeType">Trade type</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="ct">Cancellation token</param>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetClosedIsolatedMarginTrailingOrdersAsync(System.String,System.Collections.Generic.IEnumerable{HTX.Net.Enums.TpSlStatus},HTX.Net.Enums.MarginTradeType,System.Int32,System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get isolated margin trailing order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89781-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="tpSlOrderStatus">Status</param>
            <param name="tradeType">Trade type</param>
            <param name="daysPast">Amount of days ago. Max 90</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by; 'created_at' or 'update_time'</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXRestClientUsdtFuturesApiTrading.GetClosedCrossMarginTrailingOrdersAsync(System.Collections.Generic.IEnumerable{HTX.Net.Enums.TpSlStatus},HTX.Net.Enums.MarginTradeType,System.Int32,System.String,System.String,System.Nullable{HTX.Net.Enums.ContractType},System.Nullable{System.Int32},System.Nullable{System.Int32},System.String,System.Threading.CancellationToken)">
            <summary>
            Get cross margin trailing order history
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb8996a-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="tpSlOrderStatus">Status</param>
            <param name="tradeType">Trade type</param>
            <param name="daysPast">Amount of days ago. Max 90</param>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="pair">Pair, for example `ETH-USDT`</param>
            <param name="contractType">Contract type</param>
            <param name="page">Page</param>
            <param name="pageSize">Page size</param>
            <param name="sortBy">Sort by; 'created_at' or 'update_time'</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi">
            <summary>
            Usdt futures streams
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SharedClient">
            <summary>
            Get the shared socket subscription client. This interface is shared with other exhanges to allow for a common implementation for different exchanges.
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToBasisUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to basis updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7d374-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="period">Period</param>
            <param name="priceType">Price type</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToBookTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to best bid/ask updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7c802-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToEstimatedFundingRateKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to estimated funding rate kline updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7d138-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToIncrementalOrderBookUpdatesAsync(System.String,System.Boolean,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXIncrementalOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to incremental order book updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7c51d-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="snapshot">Snapshot or incremental</param>
            <param name="limit">Depth</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToIndexKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to index kline updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7cc15-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXSwapKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to kline updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7bf6d-77b5-11ed-9966-0242ac110003" /></para >
            </summary >
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToMarkPriceKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to mark price kline updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7d626-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToOrderBookUpdatesAsync(System.String,System.Int32,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXOrderBookUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order book updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7c385-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="mergeStep">Merge step</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToPremiumIndexKlineUpdatesAsync(System.String,HTX.Net.Enums.KlineInterval,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.HTXKline}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to premium index kline updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7cecd-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="period">Period</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToTickerUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol ticker updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7c694-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToTradeUpdatesAsync(System.String,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to symbol trade updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7cab7-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="contractCode">Contract code, for example `ETH-USDT`</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToSystemStatusUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXStatusUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to system status updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7e8d8-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToOrderUpdatesAsync(HTX.Net.Enums.MarginMode,System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to order updates
            <para><a href="https://www.htx.com/en-in/opend/newApiPages/?id=8cb7d8d9-77b5-11ed-9966-0242ac110003" /></para>
            <para><a href="https://www.htx.com/en-in/opend/newApiPages/?id=8cb7da4b-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="mode">Margin mode</param>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToIsolatedMarginBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to isolated margin balance updates
            <para><a href="https://www.htx.com/en-in/opend/newApiPages/?id=8cb7dbbb-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToCrossMarginBalanceUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to cross margin balance updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7dcca-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToIsolatedMarginPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to isolated margin position updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7dbbb-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToCrossMarginPositionUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to cross margin position updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7df0f-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToIsolatedMarginUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to isolated margin user trades
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7e05a-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToCrossMarginUserTradeUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTradeUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to cross margin user trades
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7e155-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToLiquidationUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to liquidation order updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7e25d-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToFundingRateUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to funding rate updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7e3b0-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToContractUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to contract info updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7e49a-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToContractElementsUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{System.Collections.Generic.IEnumerable{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate}}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to contract element updates. Only changed properties are send after the initial update, other properties will be `null`.
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb89359-77b5-11ed-9966-18ef15d1f28" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToIsolatedMarginTriggerOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to isolated margin trigger order updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7e5fc-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApi.SubscribeToCrossMarginTriggerOrderUpdatesAsync(System.Action{CryptoExchange.Net.Objects.Sockets.DataEvent{HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdate}},System.Threading.CancellationToken)">
            <summary>
            Subscribe to cross margin trigger order updates
            <para><a href="https://www.htx.com/en-us/opend/newApiPages/?id=8cb7e753-77b5-11ed-9966-0242ac110003" /></para>
            </summary>
            <param name="onData">Data handler</param>
            <param name="ct">Cancellation token</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.Clients.UsdtFuturesApi.IHTXSocketClientUsdtFuturesApiShared">
            <summary>
            Shared interface for Usdt futures socket API usage
            </summary>
        </member>
        <member name="T:HTX.Net.Interfaces.IHTXOrderBookFactory">
            <summary>
            HTX order book factory
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.IHTXOrderBookFactory.Spot">
            <summary>
            Spot order book factory methods
            </summary>
        </member>
        <member name="P:HTX.Net.Interfaces.IHTXOrderBookFactory.UsdtFutures">
            <summary>
            Usdt futures order book factory methods
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.IHTXOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Book options</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.IHTXOrderBookFactory.CreateSpot(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the Spot API
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Order book options</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.IHTXOrderBookFactory.CreateUsdtFutures(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <summary>
            Create a SymbolOrderBook for the Usdt futures API
            </summary>
            <param name="symbol">The symbol</param>
            <param name="options">Order book options</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Interfaces.IHTXTrackerFactory">
            <summary>
            Tracker factory
            </summary>
        </member>
        <member name="M:HTX.Net.Interfaces.IHTXTrackerFactory.CreateKlineTracker(CryptoExchange.Net.SharedApis.SharedSymbol,CryptoExchange.Net.SharedApis.SharedKlineInterval,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new kline tracker
            </summary>
            <param name="symbol">The symbol</param>
            <param name="interval">Kline interval</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="M:HTX.Net.Interfaces.IHTXTrackerFactory.CreateTradeTracker(CryptoExchange.Net.SharedApis.SharedSymbol,System.Nullable{System.Int32},System.Nullable{System.TimeSpan})">
            <summary>
            Create a new trade tracker for a symbol
            </summary>
            <param name="symbol">The symbol</param>
            <param name="limit">The max amount of klines to retain</param>
            <param name="period">The max period the data should be retained</param>
            <returns></returns>
        </member>
        <member name="T:HTX.Net.Objects.HTXApiAddresses">
            <summary>
            Api addresses usable for the HTX clients
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.HTXApiAddresses.RestClientAddress">
            <summary>
            The address used by the HTXRestClient for the rest spot API
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.HTXApiAddresses.SocketClientAddress">
            <summary>
            The address used by the HTXSocketClient for the public socket API
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.HTXApiAddresses.UsdtMarginSwapRestClientAddress">
            <summary>
            The address used by the HTXRestClient for the rest usdt margin swaps API
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.HTXApiAddresses.UsdtMarginSwapSocketClientAddress">
            <summary>
            The address used by the HTXSocketClient for the private user socket API
            </summary>
        </member>
        <member name="F:HTX.Net.Objects.HTXApiAddresses.Default">
            <summary>
            The default addresses to connect to the HTX.com API
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXSocketResponse`1.Timestamp">
            <summary>
            The timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXSocketResponse`1.Data">
            <summary>
            The data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXDataEvent`1.Action">
            <summary>
            The action
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXDataEvent`1.Channel">
            <summary>
            The name of the data channel
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXDataEvent`1.Timestamp">
            <summary>
            The timestamp of the update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Internal.HTXDataEvent`1.Data">
            <summary>
            The data of the update
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAccount">
            <summary>
            HTX account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccount.Id">
            <summary>
            The id of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccount.Status">
            <summary>
            The state of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccount.Type">
            <summary>
            The type of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccount.SubType">
            <summary>
            Sub state
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAccountBalances">
            <summary>
            Account and balance info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountBalances.Data">
            <summary>
            The list of balances
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountBalances.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAccountHistory">
            <summary>
            Account history data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.AccountId">
            <summary>
            Account ID
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Quantity">
            <summary>
            Quantity change (positive value if income, negative value if outcome)	
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Type">
            <summary>
            Blance change types
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Available">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Total">
            <summary>
            Account balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.Timestamp">
            <summary>
            Transaction time (database time)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountHistory.RecordId">
            <summary>
            Unique record ID in the database
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAccountValuation">
            <summary>
            Account valuation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountValuation.Balance">
            <summary>
            The balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAccountValuation.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAggBalance">
            <summary>
            HTX aggregated sub account balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAggBalance.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAggBalance.Type">
            <summary>
            The type of the balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAggBalance.Balance">
            <summary>
            The balance
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXApiKeyInfo">
            <summary>
            API key info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXApiKeyInfo.AccessKey">
            <summary>
            Access key
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXApiKeyInfo.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXApiKeyInfo.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXApiKeyInfo.Permissions">
            <summary>
            Permissions
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXApiKeyInfo.IpAddresses">
            <summary>
            Ip addresses
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXApiKeyInfo.ValidDays">
            <summary>
            Valid days
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXApiKeyInfo.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXApiKeyInfo.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAsset">
            <summary>
            Asset information
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.AssetAddressTag">
            <summary>
            Asset addrress with tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.FastConfirms">
            <summary>
            Fast confirms
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.SafeConfirms">
            <summary>
            Safe confirms
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.DepositMinQuantity">
            <summary>
            Minimal deposit quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.WithdrawMinQuantity">
            <summary>
            Minimal withdrawal quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.FeeType">
            <summary>
            Fee type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.WhiteEnabled">
            <summary>
            White enabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.CountryDisabled">
            <summary>
            Country disabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.IsQuoteAsset">
            <summary>
            Is this a quote asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.DisplayPrecision">
            <summary>
            Precision for displaying
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.WithdrawPrecision">
            <summary>
            Precision for withdrawing
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.FullName">
            <summary>
            Full asset name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.AssetType">
            <summary>
            Asset type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.AssetCode">
            <summary>
            Asset code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.DepositEnabled">
            <summary>
            Is deposit enabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.WithdrawEnabled">
            <summary>
            Is withdraw enabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.Weight">
            <summary>
            Weight
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.AssetStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.DepositDescription">
            <summary>
            Info regarding deposits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.SuspendDescription">
            <summary>
            Suspend description
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.SuspendWithdrawDescription">
            <summary>
            Suspend withdraw description
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.SuspendDepositDescription">
            <summary>
            Suspend deposit description
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAsset.WithdrawDescription">
            <summary>
            Withdrawal description
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAssetNetworkInfo">
            <summary>
            Network info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.NetworkType">
            <summary>
            Network type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.ContractNetwork">
            <summary>
            Network of the contract
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.Default">
            <summary>
            Whether this is the default network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.MinDeposit">
            <summary>
            Minimal deposit quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.MinWithdrawal">
            <summary>
            Minimal withdrawal quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.DepositEnabled">
            <summary>
            Is deposit enabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.WithdrawalEnabled">
            <summary>
            Is withdrawal enabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.WithdrawalPrecision">
            <summary>
            Withdrawal quantity precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.FeeType">
            <summary>
            Fee asset type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.FormalName">
            <summary>
            Formal name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.AddressWithdrawalTag">
            <summary>
            Withdrawal needs tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.AddressDepositTag">
            <summary>
            Deposit needs tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.AddressIsOneOff">
            <summary>
            Address is single use
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.FastConfirms">
            <summary>
            FastConfirms
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.SafeConfirms">
            <summary>
            SafeConfirms
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.ContractAddress">
            <summary>
            Contract address
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.ContractNetworkType">
            <summary>
            Contract network type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.Visible">
            <summary>
            Visible
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.DepositSuspendAnnouncement">
            <summary>
            Suspend deposit announcement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.WithdrawalSuspendAnnouncement">
            <summary>
            Suspend withdrawal announcement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.DepositDescription">
            <summary>
            Deposit description
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworkInfo.WithdrawDescription">
            <summary>
            Withdrawal description
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAssetNetworks">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworks.Networks">
            <summary>
            Networks
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworks.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetworks.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXAssetNetwork">
            <summary>
            Network info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.DisplayName">
            <summary>
            Display name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.BaseNetwork">
            <summary>
            Base network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.BaseNetworkProtocol">
            <summary>
            Base network protocol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.IsDynamic">
            <summary>
            Is dynamic
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.DepositStatus">
            <summary>
            Deposit status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.MaxTransactFeeWithdraw">
            <summary>
            Max transact fee withdraw
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.MaxWithdrawQuantity">
            <summary>
            Max withdraw quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.MinDepositQuantity">
            <summary>
            Min deposit quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.FixedWithdrawFee">
            <summary>
            Fixed withdraw fee, only applicable if fee type is fixed
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.RatioWithdrawFee">
            <summary>
            Ratio withdraw fee, only applicable if fee type is ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.MinTransactFeeWithdraw">
            <summary>
            Min transact fee withdraw
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.MinWithdrawQuantity">
            <summary>
            Min withdraw quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.NumOfConfirmations">
            <summary>
            Num of confirmations
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.NumOfFastConfirmations">
            <summary>
            Num of fast confirmations
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.WithdrawFeeType">
            <summary>
            Withdraw fee type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.WithdrawPrecision">
            <summary>
            Withdraw precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.WithdrawQuotaPerDay">
            <summary>
            Withdraw quota per day
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.WithdrawQuotaPerYear">
            <summary>
            Withdraw quota per year
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.WithdrawQuotaTotal">
            <summary>
            Withdraw quota total
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXAssetNetwork.WithdrawStatus">
            <summary>
            Withdraw status
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBalance">
            <summary>
            Balance data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalance.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalance.Type">
            <summary>
            The type of the balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalance.Balance">
            <summary>
            The balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalance.SequenceNumber">
            <summary>
            Sequence number of the update
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBalanceWrapper">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalanceWrapper.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalanceWrapper.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBalanceWrapper.Trade">
            <summary>
            Trade
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBatchCancelResult">
            <summary>
            Result of a batch cancel
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchCancelResult.Successful">
            <summary>
            Orders that were successfully canceled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchCancelResult.Failed">
            <summary>
            Orders that failed to cancel
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXFailedCancelResult">
            <summary>
            Cancel result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.ErrorCode">
            <summary>
            The error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.OrderId">
            <summary>
            The id of the failed order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.OrderStatus">
            <summary>
            The state of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFailedCancelResult.ClientOrderId">
            <summary>
            The id of the failed order
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBatchPlaceResult">
            <summary>
            Batch placement result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchPlaceResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchPlaceResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchPlaceResult.Success">
            <summary>
            Whether the placement was successful
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchPlaceResult.ErrorCode">
            <summary>
            The error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBatchPlaceResult.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBestOffer">
            <summary>
            Info on a symbol's best offer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.QuoteTime">
            <summary>
            Time of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.BestBidQuantity">
            <summary>
            Quantity of the best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.BestAskQuantity">
            <summary>
            Quantity of the best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBestOffer.Sequence">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXByCriteriaCancelResult">
            <summary>
            Result of Cancel Orders by Criteria
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXByCriteriaCancelResult.Successful">
            <summary>
            The number of cancel request sent successfully
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXByCriteriaCancelResult.Failed">
            <summary>
            The number of cancel request failed
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXByCriteriaCancelResult.NextId">
            <summary>
            the next order id that can be canceled
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXConditionalOrder">
            <summary>
            Conditional order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.AccountId">
            <summary>
            Acount id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Source">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.QuoteQuantity">
            <summary>
            Quote quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.TimeInForce">
            <summary>
            Time in force
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.TrailingRate">
            <summary>
            Trailing rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.ErrorCode">
            <summary>
            Error code if the conditional order is rejected
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrder.ErrorMessage">
            <summary>
            Error message if conditional order is rejected
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXConditionalOrderCancelResult">
            <summary>
            Conditional order cancelation result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrderCancelResult.Accepted">
            <summary>
            Orders accepted for cancelation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXConditionalOrderCancelResult.Rejected">
            <summary>
            Orders rejected for cancelation
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXDeductInfo">
            <summary>
            Deduction info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDeductInfo.PointSwitch">
            <summary>
            Point switch
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDeductInfo.HtxSwitch">
            <summary>
            Htx switch
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDeductInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXDeductionAssets">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDeductionAssets.Assets">
            <summary>
            Asset
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXDepositAddress">
            <summary>
            Deposit address info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.Address">
            <summary>
            Deposit address
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.AddressTag">
            <summary>
            Deposit address tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXDepositAddress.Network">
            <summary>
            Block chain name
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXFeeRate">
            <summary>
            Current transaction fee rate applied to the user
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.ActualMakerRate">
            <summary>
            Basic fee rate – passive side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.ActualTakerRate">
            <summary>
            Basic fee rate – aggressive side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.MakerFeeRate">
            <summary>
            Deducted fee rate – passive side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXFeeRate.TakerFeeRate">
            <summary>
            Basic fee rate – aggressive side
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXLedgerEntry">
            <summary>
            Ledger entry
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransactionQuantity">
            <summary>
            Quantity of the transaction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransactionType">
            <summary>
            Type of transaction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransferType">
            <summary>
            Type of transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransactionId">
            <summary>
            Transaction id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.TransactionTime">
            <summary>
            Transaction time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.Transferer">
            <summary>
            Transferer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLedgerEntry.Transferee">
            <summary>
            Transferee
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXLoanInfo">
            <summary>
            Loan info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfo.Symbol">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfo.Assets">
            <summary>
            Currencies
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXLoanInfoAsset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.InterestRate">
            <summary>
            Interest rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.MinLoanQuantity">
            <summary>
            Minimal loan quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.MaxLoanQuantity">
            <summary>
            Maximal loan quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.LoanableQuantity">
            <summary>
            Remaining loanable quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXLoanInfoAsset.ActualRate">
            <summary>
            Actual interest rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXMarginBalances">
            <summary>
            Margin account balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.Type">
            <summary>
            Type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.AccountBalanceSum">
            <summary>
            Account balance sum
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.DebtBalanceSum">
            <summary>
            Debt balance sum
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.FlPrice">
            <summary>
            The price which margin closeout was triggered
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.FlType">
            <summary>
            Fl type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginBalances.List">
            <summary>
            Account details
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXIsolatedBalance">
            <summary>
            Balance info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIsolatedBalance.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIsolatedBalance.Type">
            <summary>
            Balance type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIsolatedBalance.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXMarginOrder">
            <summary>
            Margin order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.Id">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.AccrueTime">
            <summary>
            Accrue time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.LoanQuantity">
            <summary>
            Loan quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.LoanBalance">
            <summary>
            Loan balance left
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.InterestRate">
            <summary>
            Interst rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.InterestQuantity">
            <summary>
            Interest quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.InterestBalance">
            <summary>
            Interest left
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.Status">
            <summary>
            State
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.PaidPoints">
            <summary>
            Paid HTX points
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.PaidAsset">
            <summary>
            Paid asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.FilledPoints">
            <summary>
            Filled HTX points
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.FilledHt">
            <summary>
            HT deduction amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.DeductRate">
            <summary>
            Deduct rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.DeductAsset">
            <summary>
            Deduct asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.DeductQuantity">
            <summary>
            Deduct quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.UpdateTime">
            <summary>
            Last updated
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.HourInterestRate">
            <summary>
            Hourly interest rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMarginOrder.DayInterestRate">
            <summary>
            Daily interest rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXMaxHolding">
            <summary>
            Max holdings
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMaxHolding.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXMaxHolding.MaxHoldings">
            <summary>
            Max holdings
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXNav">
            <summary>
            NAV info for ETP
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.Nav">
            <summary>
            Latest Nav
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.NavTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.Outstanding">
            <summary>
            Outstanding shares
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.Basket">
            <summary>
            Baskets
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXNav.ActualLeverage">
            <summary>
            Actual leverage ratio
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXBasket">
            <summary>
            Basket
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBasket.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXBasket.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOpenOrder">
            <summary>
            Open order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Id">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.ClientOrderId">
            <summary>
            The order id as specified by the client
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.AccountId">
            <summary>
            The id of the account that placed the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.CreateTime">
            <summary>
            The time the order was created
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.CancelTime">
            <summary>
            The time the order was canceled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.CompleteTime">
            <summary>
            The time the order was completed
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Source">
            <summary>
            The source of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Status">
            <summary>
            The state of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.QuantityFilled">
            <summary>
            The quantity of the order that is filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.QuoteQuantityFilled">
            <summary>
            Filled cash quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOpenOrder.Fee">
            <summary>
            The quantity of fees paid for the filled quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Id">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.ClientOrderId">
            <summary>
            The order id as specified by the client
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Symbol">
            <summary>
            The symbol of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.AccountId">
            <summary>
            The id of the account that placed the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Quantity">
            <summary>
            The quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Price">
            <summary>
            The price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.CreateTime">
            <summary>
            The time the order was created
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.CancelTime">
            <summary>
            The time the order was canceled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.CompleteTime">
            <summary>
            The time the order was finished
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Source">
            <summary>
            The source of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Status">
            <summary>
            The state of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.QuantityFilled">
            <summary>
            The quantity of the order that is filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.QuoteQuantityFilled">
            <summary>
            Filled cash quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.Fee">
            <summary>
            The quantity of fees paid for the filled quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.CancelSource">
            <summary>
            Source of cancelation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrder.UpdateTime">
            <summary>
            The time the order was last updated
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrderBook">
            <summary>
            Order book
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBook.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBook.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBook.Bids">
            <summary>
            List of bids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBook.Asks">
            <summary>
            List of asks
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXIncementalOrderBook">
            <summary>
            Incremental order book update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIncementalOrderBook.SequenceNumber">
            <summary>
            Sequence number
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIncementalOrderBook.PreviousSequenceNumber">
            <summary>
            Previous sequence number
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIncementalOrderBook.Bids">
            <summary>
            List of changed bids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXIncementalOrderBook.Asks">
            <summary>
            List of changed asks
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderId.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrderRequest">
            <summary>
            Order request
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.Quantity">
            <summary>
            Order quantity. For Buy Market orders this is in quote asset.
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.Price">
            <summary>
            Limit price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.Source">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderRequest.StopOperator">
            <summary>
            Stop operator
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrders">
            <summary>
            Orders info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrders.NextTime">
            <summary>
            Timestamp for pagination
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrders.Orders">
            <summary>
            List of ticks for symbols
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrderTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Symbol">
            <summary>
            The symbol of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Timestamp">
            <summary>
            The timestamp in milliseconds when this record is created
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Quantity">
            <summary>
            The quantity which has been filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Fee">
            <summary>
            Transaction fee (positive value). If maker rebate applicable, revert maker rebate value per trade (negative value).
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.FilledPoints">
            <summary>
            Deduction amount (unit: in ht or hbpoint).
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.TradeId">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.MatchId">
            <summary>
            The id of the match
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.OrderId">
            <summary>
            The id of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Price">
            <summary>
            The limit price of limit order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Source">
            <summary>
            The source where the order was triggered, possible values: sys, web, api, app
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Side">
            <summary>
            The side of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.Role">
            <summary>
            The role in the transaction: taker or maker
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.FeeAsset">
            <summary>
            Asset of transaction fee or transaction fee rebate (transaction fee of buy order is based on base asset, transaction fee of sell order is based on quote asset; transaction fee rebate of buy order is based on quote asset, transaction fee rebate of sell order is based on base asset)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.FeeDeductAsset">
            <summary>
            Deduction type: ht or hbpoint.
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderTrade.FeeDeductStatus">
            <summary>
            Fee deduction status.
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPlacedConditionalOrder">
            <summary>
            Placed conditional order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlacedConditionalOrder.ClientOrderId">
            <summary>
            The id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPlacedOrder">
            <summary>
            Placed order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlacedOrder.Id">
            <summary>
            The id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPlatformValuation">
            <summary>
            Platform wide valuation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuation.Updated">
            <summary>
            Updated
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuation.TodayProfitRate">
            <summary>
            Today profit rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuation.TotalBalance">
            <summary>
            Total balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuation.TodayProfit">
            <summary>
            Todays profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuation.Balances">
            <summary>
            Account balance list
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPlatformValuationUpdate">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuationUpdate.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuationUpdate.UpdateTime">
            <summary>
            Last update time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPlatformValuationBalance">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuationBalance.BalanceType">
            <summary>
            Balance type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuationBalance.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuationBalance.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPlatformValuationBalance.AccountBalance">
            <summary>
            Account balance
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPointBalance">
            <summary>
            Point balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointBalance.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointBalance.GroupIds">
            <summary>
            Group ids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointBalance.AccountBalance">
            <summary>
            Accountt balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointBalance.AccountStatus">
            <summary>
            Account status
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPointBalanceGroup">
            <summary>
            Group info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointBalanceGroup.GroupId">
            <summary>
            Group id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointBalanceGroup.ExpiryDate">
            <summary>
            Expiry date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointBalanceGroup.RemainingQuantity">
            <summary>
            Remaining quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPointTransfer">
            <summary>
            Transfer result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointTransfer.TransactId">
            <summary>
            Transact id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPointTransfer.TransactTime">
            <summary>
            Transact time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXRepayment">
            <summary>
            Repayment info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.RepayId">
            <summary>
            Repayment id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.RepayTime">
            <summary>
            Repay time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.RepaidQuantity">
            <summary>
            Repay quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayment.Transactions">
            <summary>
            Transactions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXRepayTransaction">
            <summary>
            Repayment transaction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.TransactId">
            <summary>
            Transact id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.RepaidPrincipal">
            <summary>
            Principal repaid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.RepaidInterest">
            <summary>
            Interest repaid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.PaidHt">
            <summary>
            HT paid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepayTransaction.PaidPoint">
            <summary>
            Points paid
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXRepaymentResult">
            <summary>
            Repayment result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepaymentResult.RepayId">
            <summary>
            Repayment id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXRepaymentResult.RepayTime">
            <summary>
            Repay time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubAccountInfo">
            <summary>
            Sub account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountInfo.UserName">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountInfo.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountInfo.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountInfo.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountInfo.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubAccountLock">
            <summary>
            Sub account lock
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountLock.SubUserId">
            <summary>
            Sub user id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountLock.UserState">
            <summary>
            User lock state
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubAccountRequest">
            <summary>
            Sub account request
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountRequest.UserName">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubAccountRequest.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubApiKey">
            <summary>
            Sub account API key
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubApiKey.AccessKey">
            <summary>
            Access key
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubApiKey.SecretKey">
            <summary>
            Secret key
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubApiKey.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubApiKey.Permission">
            <summary>
            Permission, comma seperated
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubApiKey.IpAddresses">
            <summary>
            Ip addresses, comma seperated
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubApiKeyEdit">
            <summary>
            Edit result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubApiKeyEdit.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubApiKeyEdit.Permission">
            <summary>
            Permission, comma seperated
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubApiKeyEdit.IpAddresses">
            <summary>
            Ip addresses, comma seperated
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubDeductMode">
            <summary>
            Sub account deduct mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeductMode.SubUid">
            <summary>
            Sub uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeductMode.DeductMode">
            <summary>
            Deduct mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeductMode.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeductMode.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubDeposit">
            <summary>
            Sub account deposit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.DepositStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.TransactionHash">
            <summary>
            Transaction hash
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.AddressTag">
            <summary>
            Address tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubDeposit.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubMarketTradable">
            <summary>
            Sub account tradable market status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubMarketTradable.SubUserId">
            <summary>
            Sub user id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubMarketTradable.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubMarketTradable.Activation">
            <summary>
            Activation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubMarketTradable.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubMarketTradable.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubTransferPermission">
            <summary>
            Transfer permission
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubTransferPermission.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubTransferPermission.Transferrable">
            <summary>
            Transferrable
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubTransferPermission.SubUserId">
            <summary>
            Sub user id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubTransferPermission.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubTransferPermission.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubUserAccount">
            <summary>
            HTX sub-user account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccount.Type">
            <summary>
            The type of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccount.Activation">
            <summary>
            Whether the account is active of not
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccount.Transferrable">
            <summary>
            Whether transfers are allowed (only for spot account type)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccount.AccountIds">
            <summary>
            Account ids
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubUserAccountId">
            <summary>
            HTX sub-user account id and state
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccountId.Id">
            <summary>
            The id of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccountId.Status">
            <summary>
            The status of the account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccountId.SubType">
            <summary>
            Sub state
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSubUserAccounts">
            <summary>
            HTX sub-user account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccounts.UserId">
            <summary>
            The id of the sub-user
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccounts.DeductMode">
            <summary>
            Deduct mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSubUserAccounts.Accounts">
            <summary>
            List of accounts for the sub-user
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbol">
            <summary>
            Symbol information
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.SymbolStatus">
            <summary>
            State
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.WithdrawRisk">
            <summary>
            WithdrawRisk
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.Name">
            <summary>
            Symbol name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.BaseAssetName">
            <summary>
            Base asset display name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.QuoteAssetName">
            <summary>
            Quote asset display name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.EtpLeverageRatio">
            <summary>
            Etp leverage ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.PricePrecision">
            <summary>
            Price precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.QuantityPrecision">
            <summary>
            Quantity precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.FeePrecision">
            <summary>
            Fee precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.SuperMarginLeverageRatio">
            <summary>
            Super margin leverage ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.C2CLeverageRatio">
            <summary>
            C2C leverage ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.WhiteEnabled">
            <summary>
            White enabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.CountryDisabled">
            <summary>
            Country disabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.TradeEnabled">
            <summary>
            Trade enabled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.Partition">
            <summary>
            Symbol partition
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.TradeOpenTime">
            <summary>
            Time trading starts
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.TradeTotalPrecision">
            <summary>
            trade total precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.WeightSort">
            <summary>
            Weight sort
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.LeverageRatio">
            <summary>
            Leverage ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbol.DisplayName">
            <summary>
            DisplayName
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolConfig">
            <summary>
            Symbol configuration
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.BaseAsset">
            <summary>
            Base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.QuoteAsset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.PricePrecision">
            <summary>
            Price precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.QuantityPrecision">
            <summary>
            Quantity precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.Partition">
            <summary>
            Partition
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.ValuePrecision">
            <summary>
            Value precision
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MinOrderQuantity">
            <summary>
            Minimal order quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MaxOrderQuantity">
            <summary>
            Max order quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MinOrderValue">
            <summary>
            Minimal order value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MinQuantityLimitOrder">
            <summary>
            Minimal quantity of limit order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MaxQuantityLimitOrder">
            <summary>
            Max quantity of limit order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MaxQuantityLimitBuyOrder">
            <summary>
            Max quantity of limit buy order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MaxQuantityLimitSellOrder">
            <summary>
            Max quantity of limit sell order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MinQuantityMarketSellOrder">
            <summary>
            Minimal quantity of market sell order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.BuyLimitLessThan">
            <summary>
            Buy limit order must be less than this
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.SellLimitLessThan">
            <summary>
            Sell limit order must be less than this
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MaxQuantityMarketSellOrder">
            <summary>
            Max quantity of market sell order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MaxQuantityMarketBuyOrder">
            <summary>
            Max quantity of market buy order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.SellMarketLessThan">
            <summary>
            Sell market order rate must be less than this
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.BuyMarketLessThan">
            <summary>
            Buy market order rate must be less than this
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.MaxValueMarketOrder">
            <summary>
            Max value of a market order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.EtpSymbol">
            <summary>
            Etp symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.Mfr">
            <summary>
            Mfr
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.ChareTime">
            <summary>
            ETP charge time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.RebalTime">
            <summary>
            ETP rebal time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.RebalThreshold">
            <summary>
            ETP rebal threshold
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.InitialNav">
            <summary>
            ETP initial NAV
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.ApiTrading">
            <summary>
            ApiTrading
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolConfig.Tags">
            <summary>
            Tags
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolData">
            <summary>
            Symbol data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.HighPrice">
            <summary>
            The highest price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.LowPrice">
            <summary>
            The lowest price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.OpenPrice">
            <summary>
            The price at the opening
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.ClosePrice">
            <summary>
            The last price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.Volume">
            <summary>
            The volume in base asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.QuoteVolume">
            <summary>
            The volume in quote asset (quantity * price)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.TradeCount">
            <summary>
            The number of trades
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolData.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTicker">
            <summary>
            Ticker data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTicker.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXKline">
            <summary>
            Symbol kline data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXKline.OpenTime">
            <summary>
            The start time of the kline
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXKline.Value">
            <summary>
            Turnover, quantity * contract value * price
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSwapKline">
            <summary>
            Kline data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSwapKline.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolDetails">
            <summary>
            Symbol details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolDetails.Id">
            <summary>
            The id of the details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolDetails.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTick">
            <summary>
            Symbol tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.BestBidQuantity">
            <summary>
            Quantity of the best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.BestAskQuantity">
            <summary>
            Quantity of the best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.BestBidPrice">
            <summary>
            Best bid price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.BestAskPrice">
            <summary>
            Best ask price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.LastTradePrice">
            <summary>
            Last trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTick.LastTradeQuantity">
            <summary>
            Last trade quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolStatus">
            <summary>
            Status of the symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.Status">
            <summary>
            The status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.HaltStartTime">
            <summary>
            Start time of when market halted
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.HaltEndTime">
            <summary>
            Estimated end time of the halt
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.HaltReason">
            <summary>
            Reason for halting
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolStatus.AffectedSymbols">
            <summary>
            Affected symbols, comma separated or 'all' if all symbols are affected
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTickMerged">
            <summary>
            Symbol tick info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTickMerged.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTickMerged.Id">
            <summary>
            The id of the tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTickMerged.BestBid">
            <summary>
            The current best bid for the symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTickMerged.BestAsk">
            <summary>
            The current best ask for the symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXOrderBookEntry">
            <summary>
            Order book entry
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBookEntry.Price">
            <summary>
            The price for this entry
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXOrderBookEntry.Quantity">
            <summary>
            The quantity for this entry
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolDatas">
            <summary>
            Symbol ticks
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolDatas.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolDatas.Ticks">
            <summary>
            List of ticks for symbols
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTicks">
            <summary>
            Symbol ticks
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTicks.Timestamp">
            <summary>
            Timestamp of the data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTicks.Ticks">
            <summary>
            List of ticks for symbols
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTrade">
            <summary>
            Symbol trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTrade.Id">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTrade.Timestamp">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTrade.Details">
            <summary>
            The details of the trade
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSymbolTradeDetails">
            <summary>
            Symbol trade details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Id">
            <summary>
            The id of the update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.TradeId">
            <summary>
            The id of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Price">
            <summary>
            The price of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Quantity">
            <summary>
            The quantity of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Side">
            <summary>
            The side of the trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSymbolTradeDetails.Timestamp">
            <summary>
            The timestamp of the trade
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSystemStatus">
            <summary>
            System status info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemStatus.Page">
            <summary>
            Page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemStatus.Components">
            <summary>
            Components
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemStatus.Incidents">
            <summary>
            Incidents
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemStatus.ScheduledMaintenances">
            <summary>
            Scheduled maintenances
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemStatus.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXPageInfo">
            <summary>
            Page info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPageInfo.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPageInfo.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPageInfo.Url">
            <summary>
            Url
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPageInfo.TimeZone">
            <summary>
            Time zone
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXPageInfo.UpdatedAt">
            <summary>
            Updated at
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSystemComponent">
            <summary>
            System component
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.SystemStatus">
            <summary>
            System status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.CreatedAt">
            <summary>
            Created at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.UpdatedAt">
            <summary>
            Updated at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.Position">
            <summary>
            Position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.Showcase">
            <summary>
            Showcase
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.GroupId">
            <summary>
            Group id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.PageId">
            <summary>
            Page id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.Group">
            <summary>
            Group
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemComponent.OnlyShowIfDegraded">
            <summary>
            Only show if degraded
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSystemIncident">
            <summary>
            System incident
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.IncidentStatus">
            <summary>
            Incident status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.CreatedAt">
            <summary>
            Created at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.UpdatedAt">
            <summary>
            Updated at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.MonitoringAt">
            <summary>
            Monitoring at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.ResolvedAt">
            <summary>
            Resolved at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.Impact">
            <summary>
            Impact
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.Shortlink">
            <summary>
            Shortlink
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.StartedAt">
            <summary>
            Started at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.PageId">
            <summary>
            Page id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.IncidentUpdates">
            <summary>
            Incident updates
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncident.Components">
            <summary>
            Components
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSystemIncidentUpdate">
            <summary>
            System incident update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.IncidentStatus">
            <summary>
            Incident status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.Body">
            <summary>
            Body
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.IncidentId">
            <summary>
            Incident id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.CreatedAt">
            <summary>
            Created at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.UpdatedAt">
            <summary>
            Updated at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.DisplayAt">
            <summary>
            Display at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.AffectedComponents">
            <summary>
            Affected components
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.DeliverNotifications">
            <summary>
            Deliver notifications
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.CustomTweet">
            <summary>
            Custom tweet
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentUpdate.TweetId">
            <summary>
            Tweet id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSystemIncidentComponent">
            <summary>
            System incident affacted component
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentComponent.Code">
            <summary>
            Code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentComponent.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentComponent.OldStatus">
            <summary>
            Old status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemIncidentComponent.NewStatus">
            <summary>
            New status
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSystemMaintenance">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.CreatedAt">
            <summary>
            Created at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.UpdatedAt">
            <summary>
            Updated at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.MonitoringAt">
            <summary>
            Monitoring at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.ResolvedAt">
            <summary>
            Resolved at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.Impact">
            <summary>
            Impact
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.Shortlink">
            <summary>
            Shortlink
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.StartedAt">
            <summary>
            Started at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.PageId">
            <summary>
            Page id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.IncidentUpdates">
            <summary>
            Incident updates
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.Components">
            <summary>
            Components
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.ScheduledFor">
            <summary>
            Scheduled for
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemMaintenance.ScheduledUntil">
            <summary>
            Scheduled until
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXSystemStatusIndicator">
            <summary>
            Indicator
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemStatusIndicator.Indicator">
            <summary>
            Indicator
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXSystemStatusIndicator.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXTransactionResult">
            <summary>
            Transaction result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXTransactionResult.TransactionId">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXTransactionResult.TransactionTime">
            <summary>
            Time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXUser">
            <summary>
            HTX user info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXUser.Id">
            <summary>
            The id of the user
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXUser.Status">
            <summary>
            The status of the user
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXUser.UserName">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXUser.Note">
            <summary>
            User name
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXWithdrawalAddress">
            <summary>
            Withdrawal address info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalAddress.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalAddress.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalAddress.Note">
            <summary>
            Note
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalAddress.AddressTag">
            <summary>
            Address tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalAddress.Address">
            <summary>
            Address
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXWithdrawalQuota">
            <summary>
            Asset quota
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalQuota.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalQuota.Networks">
            <summary>
            Networks
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota">
            <summary>
            Network quota
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota.Network">
            <summary>
            Network
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota.MaxWithdrawAmt">
            <summary>
            Max withdraw amt
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota.WithdrawQuotaPerDay">
            <summary>
            Withdraw quota per day
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota.RemainWithdrawQuotaPerDay">
            <summary>
            Remain withdraw quota per day
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota.WithdrawQuotaPerYear">
            <summary>
            Withdraw quota per year
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota.RemainWithdrawQuotaPerYear">
            <summary>
            Remain withdraw quota per year
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota.WithdrawQuotaTotal">
            <summary>
            Withdraw quota total
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawalNetworkQuota.RemainWithdrawQuotaTotal">
            <summary>
            Remain withdraw quota total
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.HTXWithdrawDeposit">
            <summary>
            Withdraw or Deposit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Id">
            <summary>
            Transfer id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Type">
            <summary>
            Define transfer type to search, possible values: [deposit, withdraw]
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.SubType">
            <summary>
            Sub type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Asset">
            <summary>
            The crypto asset to withdraw
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.TransactionHash">
            <summary>
            The on-chain transaction hash
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Network">
            <summary>
            Block chain name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Quantity">
            <summary>
            The number of crypto asset transfered in its minimum unit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Address">
            <summary>
            The deposit or withdraw target address
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.AddressTag">
            <summary>
            The user defined address tag
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.FromAddressTag">
            <summary>
            The address tag of the address its from
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Fee">
            <summary>
            Withdraw fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.Status">
            <summary>
            The status of this transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.ErrorCode">
            <summary>
            Error code for withdrawal failure, only returned when the type is "withdraw" and the state is "reject", "wallet-reject" and "failed".
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.ErrorMessage">
            <summary>
            Error description of withdrawal failure, only returned when the type is "withdraw" and the state is "reject", "wallet-reject" and "failed".
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.CreateTime">
            <summary>
            The timestamp in milliseconds for the transfer creation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.HTXWithdrawDeposit.UpdateTime">
            <summary>
            The timestamp in milliseconds for the transfer's latest update
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXAccountUpdate">
            <summary>
            Account update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.Balance">
            <summary>
            Total balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.Available">
            <summary>
            Available balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.ChangeType">
            <summary>
            Type of change
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.AccountType">
            <summary>
            Account type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.ChangeTime">
            <summary>
            Change time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXAccountUpdate.SequenceNumber">
            <summary>
            Update sequence number
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate">
            <summary>
            Best offer update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.Id">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.Bid">
            <summary>
            Best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.Ask">
            <summary>
            Best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXBestOfferUpdate.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXIncrementalOrderBookUpdate">
            <summary>
            Incremental order book update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXIncrementalOrderBookUpdate.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXOrderBookUpdate">
            <summary>
            Order book update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderBookUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderBookUpdate.Id">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderBookUpdate.Version">
            <summary>
            Version
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderBookUpdate.Bids">
            <summary>
            List of changed bids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderBookUpdate.Asks">
            <summary>
            List of changed asks
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate">
            <summary>
            Cancelation details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderQuantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.Operator">
            <summary>
            Operator
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderCreateTime">
            <summary>
            Order creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderCancelationUpdate.QuantityRemaining">
            <summary>
            Remaining quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXOrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.UpdateTime">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXOrderUpdate.TotalTradeQuantity">
            <summary>
            Total trade quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate">
            <summary>
            Submitted order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.Price">
            <summary>
            Price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.Quantity">
            <summary>
            Quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.QuoteQuantity">
            <summary>
            Value of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSubmittedOrderUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate">
            <summary>
            Matched order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.TradePrice">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.TradeQuantity">
            <summary>
            Trade volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.TradeTime">
            <summary>
            Timestamp of trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.IsTaker">
            <summary>
            Is the taker
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.QuantityRemaining">
            <summary>
            Remaining quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.QuantityFilled">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.Price">
            <summary>
            Price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.Quantity">
            <summary>
            Quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXMatchedOrderUpdate.QuoteQuantity">
            <summary>
            Value of the order
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate">
            <summary>
            Canceled order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.RawType">
            <summary>
            The raw type string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.Type">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.Side">
            <summary>
            The type of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.QuantityRemaining">
            <summary>
            Remaining quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.QuantityFilled">
            <summary>
            Executed quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.Price">
            <summary>
            Price of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.Quantity">
            <summary>
            Quantity of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXCanceledOrderUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate">
            <summary>
            Info on a failed trigger for a conditional order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate.Side">
            <summary>
            Side of the order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate.ErrorCode">
            <summary>
            The error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTriggerFailureOrderUpdate.ErrorMessage">
            <summary>
            The error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXStatusUpdate">
            <summary>
            System status update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXStatusUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXStatusUpdate.Event">
            <summary>
            Event, init (initial) status or update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXStatusUpdate.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXStatus">
            <summary>
            System status update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXStatus.Available">
            <summary>
            Is system available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXStatus.EstimatedRecoveryTime">
            <summary>
            Estimated recovery time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate">
            <summary>
            Symbol update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.TradeTurnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.BestBid">
            <summary>
            Best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXSymbolTickUpdate.BestAsk">
            <summary>
            Best ask
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXTradeUpdate">
            <summary>
            Trade update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.EventType">
            <summary>
            Event type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Symbol">
            <summary>
            The symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Price">
            <summary>
            Price of this trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Quantity">
            <summary>
            Volume of this trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Side">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Type">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.IsTaker">
            <summary>
            Is the taker
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Timestamp">
            <summary>
            Time of trade
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.TransactionFee">
            <summary>
            Transaction fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.FeeAsset">
            <summary>
            Asset of the fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.FeeDeduct">
            <summary>
            Fee deduction quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.FeeDeductType">
            <summary>
            Fee deduction type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.AccountId">
            <summary>
            Account id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderQuantity">
            <summary>
            Order quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.StopPrice">
            <summary>
            Stop price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.Operator">
            <summary>
            Operator
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderCreateTime">
            <summary>
            Order creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXTradeUpdate.OrderStatus">
            <summary>
            Order status
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate">
            <summary>
            Basis update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.ContractPrice">
            <summary>
            Contract price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.Basis">
            <summary>
            Basis
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapBasisUpdate.BasisRate">
            <summary>
            Basis rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdateWrapper.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdateWrapper.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdateWrapper.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate">
            <summary>
            Contract element info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.FundingRateCap">
            <summary>
            Funding rate cap
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.FundingRateFloor">
            <summary>
            Funding rate floor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.ModeType">
            <summary>
            Mode type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.SwapDeliveryType">
            <summary>
            Swap delivery type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.SettlePeriod">
            <summary>
            Settle period
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.InstrumentIndexCode">
            <summary>
            Instrument index code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.PriceTicks">
            <summary>
            Price ticks
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.InstrumentValues">
            <summary>
            Instrument values
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.MinLevel">
            <summary>
            Min level
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.MaxLevel">
            <summary>
            Max level
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.OrderLimits">
            <summary>
            Order limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.NormalLimits">
            <summary>
            Normal limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.OpenLimits">
            <summary>
            Open limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.TradeLimits">
            <summary>
            Trade limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.InstrumentTypes">
            <summary>
            Instrument types
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.RealTimeSettlement">
            <summary>
            Real time settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.TransferProfitRatio">
            <summary>
            Transfer profit ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.CrossTransferProfitRatio">
            <summary>
            Cross transfer profit ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.PriceTick">
            <summary>
            Price tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.InstrumentValue">
            <summary>
            Instrument value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.TradePartition">
            <summary>
            Trade partition
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.OpenOrderLimit">
            <summary>
            Open order limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.OffsetOrderLimit">
            <summary>
            Offset order limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.LongPositionLimit">
            <summary>
            Long position limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.ShortPositionLimit">
            <summary>
            Short position limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractElementsUpdate.ContractInfos">
            <summary>
            Contract infos
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdateWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdateWrapper.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdateWrapper.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdateWrapper.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate">
            <summary>
            Contract update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.ContractQuantity">
            <summary>
            Contract quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.PriceTick">
            <summary>
            Price tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.SettlementDate">
            <summary>
            Settlement date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.CreateDate">
            <summary>
            Create date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.ContractStatus">
            <summary>
            Contract status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.SupportMarginMode">
            <summary>
            Support margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapContractUpdate.DeliveryDate">
            <summary>
            Delivery date
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdate">
            <summary>
            Cross margin balance update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdate.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdate.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.MarginStatic">
            <summary>
            Static margin
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.WithdrawAvailable">
            <summary>
            Withdraw available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.ContractDetail">
            <summary>
            Contract detail
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateData.FuturesContractDetail">
            <summary>
            Futures contract detail
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract">
            <summary>
            Contract info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateContract.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures">
            <summary>
            Futures contract
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossBalanceUpdateFutures.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdate">
            <summary>
            Cross margin position update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdate.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdate.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdate.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdateData">
            <summary>
            Cross margin position data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdateData.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdateData.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossPositionUpdateData.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTradeUpdate">
            <summary>
            Cross margin trade update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTradeUpdate.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTradeUpdate.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTradeUpdate.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdate">
            <summary>
            Trigger order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdate.EventOrderTrigger">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdate.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdateData">
            <summary>
            Trigger update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdateData.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdateData.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapCrossTriggerOrderUpdateData.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdateWrapper">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdateWrapper.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdateWrapper.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate">
            <summary>
            Funding rate update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate.FundingTime">
            <summary>
            Funding time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate.SettlementTime">
            <summary>
            Settlement time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapFundingRateUpdate.EstimatedRate">
            <summary>
            Estimated rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdate">
            <summary>
            Isolated balance update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdate.Event">
            <summary>
            Event trigger
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdate.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData">
            <summary>
            Isolated margin balance update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.MarginStatic">
            <summary>
            Static equity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.UnrealizedPnl">
            <summary>
            Unrealized proft and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.WithdrawAvailable">
            <summary>
            Withdraw available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedBalanceUpdateData.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdate">
            <summary>
            Position data update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdate.Timestamp">
            <summary>
            Data timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdate.Event">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdate.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData">
            <summary>
            Position data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.OpenPrice">
            <summary>
            Open price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.PositionPrice">
            <summary>
            Position price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.ProfitRate">
            <summary>
            Profit / loss ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.Pnl">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.PositionMargin">
            <summary>
            Position margin
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.OrderSide">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedPositionUpdateData.AdlRiskPercent">
            <summary>
            Adl risk percent
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate">
            <summary>
            Order trade update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.IsTpsl">
            <summary>
            Is take profit / stop loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdate.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdateTrade">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdateTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdateTrade.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdateTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdateTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdateTrade.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdateTrade.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTradeUpdateTrade.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdate">
            <summary>
            Trigger order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdate.EventOrderTrigger">
            <summary>
            Event
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdate.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderSide">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.RelationOrderId">
            <summary>
            Relation order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.TriggeredPrice">
            <summary>
            Triggered price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.TriggerTime">
            <summary>
            Triggered time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.OrderInsertTime">
            <summary>
            Order insert time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.CancelTime">
            <summary>
            Cancel time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.FailCode">
            <summary>
            Fail code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.FailReason">
            <summary>
            Fail reason
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapIsolatedTriggerOrderUpdateData.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdate">
            <summary>
            Liquidation update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdate.Data">
            <summary>
            Data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.OrderSide">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.Quantity">
            <summary>
            Liquidation quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.TradeTurnover">
            <summary>
            Trade turnover
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapLiquidationUpdateData.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate">
            <summary>
            Order update
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.Timestamp">
            <summary>
            Update timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.UserId">
            <summary>
            User id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.OrderSide">
            <summary>
            Order side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.OrderStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.CreatedAt">
            <summary>
            Created at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.ValueFilled">
            <summary>
            Value filled in quote asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.LiquidationType">
            <summary>
            Liquidation type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.AveragePrice">
            <summary>
            Average trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.CanceledAt">
            <summary>
            Canceled at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.IsTpsl">
            <summary>
            Is take profit / stop loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.RealizedPnl">
            <summary>
            Profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.CanceledSource">
            <summary>
            Canceled source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdate.Trade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.DeductionAssetPrice">
            <summary>
            Deduction asset price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.Value">
            <summary>
            Trade value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.CreatedAt">
            <summary>
            Created at
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapOrderUpdateTrade.RealProfit">
            <summary>
            Real profit
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate.Id">
            <summary>
            Update id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate.Timestamp">
            <summary>
            Update timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradesUpdate.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Amount">
            <summary>
            Amount of trades
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Id">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.Socket.HTXUsdtMarginSwapTradeUpdate.TradeTurnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentiment">
            <summary>
            Account sentiment
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentiment.List">
            <summary>
            List
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentiment.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentiment.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentiment.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentiment.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentimentValue">
            <summary>
            Sentiment value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentimentValue.BuyRatio">
            <summary>
            Buy ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentimentValue.SellRatio">
            <summary>
            Sell ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentimentValue.LockedRatio">
            <summary>
            Locked ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAccountSentimentValue.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAssetValue">
            <summary>
            Asset valuation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAssetValue.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXAssetValue.Balance">
            <summary>
            Balance
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData">
            <summary>
            Basis data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.Basis">
            <summary>
            Basis
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.BasisRate">
            <summary>
            Basis rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.ContractPrice">
            <summary>
            Contract price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBasisData.Id">
            <summary>
            Unique id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchResult">
            <summary>
            Batch result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchResult.Errors">
            <summary>
            Errors in the batch
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchResult.Successes">
            <summary>
            Success
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchError">
            <summary>
            Batch operation error
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchError.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchError.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXBatchError.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCancelAfter">
            <summary>
            Cancel after status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCancelAfter.CurrentTime">
            <summary>
            Current time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCancelAfter.TriggerTime">
            <summary>
            Trigger time
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrderPage">
            <summary>
            Trigger order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder">
            <summary>
            Trigger order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder.CancelTime">
            <summary>
            Cancel time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder.TriggerTime">
            <summary>
            Trigger time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder.OrderInsertTime">
            <summary>
            Order insert time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder.FailCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder.FailReason">
            <summary>
            Error reason
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder.TriggeredPrice">
            <summary>
            Triggered price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedCrossTriggerOrder.RelationOrderId">
            <summary>
            Relation order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrderPage">
            <summary>
            Trigger order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder">
            <summary>
            Trigger order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder.CancelTime">
            <summary>
            Cancel time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder.TriggerTime">
            <summary>
            Trigger time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder.OrderInsertTime">
            <summary>
            Order insert time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder.FailCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder.FailReason">
            <summary>
            Error reason
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder.TriggeredPrice">
            <summary>
            Triggered price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosedTriggerOrder.RelationOrderId">
            <summary>
            Relation order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosePositionResult">
            <summary>
            Close position result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosePositionResult.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosePositionResult.OrderIdStr">
            <summary>
            Order id str
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXClosePositionResult.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements">
            <summary>
            Contract element info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.FundingRateCap">
            <summary>
            Funding rate cap
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.FundingRateFloor">
            <summary>
            Funding rate floor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.ModeType">
            <summary>
            Mode type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.SwapDeliveryType">
            <summary>
            Swap delivery type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.SettlePeriod">
            <summary>
            Settle period
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.InstrumentIndexCode">
            <summary>
            Instrument index code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.PriceTicks">
            <summary>
            Price ticks
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.InstrumentValues">
            <summary>
            Instrument values
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.MinLevel">
            <summary>
            Min level
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.MaxLevel">
            <summary>
            Max level
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.OrderLimits">
            <summary>
            Order limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.NormalLimits">
            <summary>
            Normal limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.OpenLimits">
            <summary>
            Open limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.TradeLimits">
            <summary>
            Trade limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.RealTimeSettlement">
            <summary>
            Real time settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.TransferProfitRatio">
            <summary>
            Transfer profit ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.CrossTransferProfitRatio">
            <summary>
            Cross transfer profit ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.InstrumentTypes">
            <summary>
            Instrument types
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.PriceTick">
            <summary>
            Price tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.InstrumentValue">
            <summary>
            Instrument value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.TradePartition">
            <summary>
            Trade partition
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.OpenOrderLimit">
            <summary>
            Open order limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.OffsetOrderLimit">
            <summary>
            Offset order limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.LongPositionLimit">
            <summary>
            Long position limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.ShortPositionLimit">
            <summary>
            Short position limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElements.ContractInfos">
            <summary>
            Contract infos
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsPriceTick">
            <summary>
            Price info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsPriceTick.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsPriceTick.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsLimit">
            <summary>
            Limit info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsLimit.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsLimit.Open">
            <summary>
            Open
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsLimit.Close">
            <summary>
            Close
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsOrderLimit">
            <summary>
            Order limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsOrderLimit.OpenAfterClosing">
            <summary>
            Open after closing
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsContractInfo">
            <summary>
            Contract info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsContractInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsContractInfo.InstrumentType">
            <summary>
            Instrument type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsContractInfo.SettlementDate">
            <summary>
            Settlement date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsContractInfo.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsContractInfo.CreateDate">
            <summary>
            Create date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsContractInfo.ContractStatus">
            <summary>
            Contract status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractElementsContractInfo.DeliveryDate">
            <summary>
            Delivery date
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo">
            <summary>
            Contract info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.ContractSize">
            <summary>
            Contract size
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.PriceTick">
            <summary>
            Price tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.DeliveryDate">
            <summary>
            Deliverty date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.DeliveryTime">
            <summary>
            Delivery time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.CreateDate">
            <summary>
            Created date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.SettlementDate">
            <summary>
            Settlement date
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractInfo.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus">
            <summary>
            Contract status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.Open">
            <summary>
            Open order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.Close">
            <summary>
            Close order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.Cancel">
            <summary>
            Cancel order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.TranferIn">
            <summary>
            Deposit access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.TransferOut">
            <summary>
            Withdrawal access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MasterTransferSub">
            <summary>
            Transfer from master to sub
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.SubTransferMaster">
            <summary>
            Transfer from sub to master
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MasterTransferSubInnerIn">
            <summary>
            Master transfer sub inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.MasterTransferSubInnerOut">
            <summary>
            Master transfer sub inner out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.SubTransferMasterInnerIn">
            <summary>
            Sub transfer master inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.SubTransferMasterInnerOut">
            <summary>
            Sub transfer master inner out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.TransferInnerIn">
            <summary>
            Transfer inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXContractStatus.TransferInnerOut">
            <summary>
            Tranfer inner out
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimit">
            <summary>
            Levearege position limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimit.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimit.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimit.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimit.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimit.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimit.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimit.List">
            <summary>
            List
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimitLeverage">
            <summary>
            Limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimitLeverage.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimitLeverage.BuyLimitValue">
            <summary>
            Buy limit value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossLeveragePositionLimitLeverage.SellLimitValue">
            <summary>
            Sell limit value
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract">
            <summary>
            Cross margin account contract details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.ContractCode">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.CrossMaxAvaialble">
            <summary>
            Cross max available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountContract.TradePartition">
            <summary>
            Trade partition
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.NewRiskRate">
            <summary>
            New risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.WithdrawAvailable">
            <summary>
            Withdraw available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MoneyIn">
            <summary>
            Money in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MoneyOut">
            <summary>
            Money out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginStatic">
            <summary>
            Margin static
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.CrossMaxAvailable">
            <summary>
            Cross max available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.AdlRiskPercentage">
            <summary>
            ADL risk percentage
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.ContractDetails">
            <summary>
            Contract details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAccountInfo.FuturesContractDetails">
            <summary>
            Futures contract details
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAssetsAndPositions">
            <summary>
            Cross margin assets and positions info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginAssetsAndPositions.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageAvailable">
            <summary>
            Available leverage info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageAvailable.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageAvailable.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageAvailable.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrderPage">
            <summary>
            Order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit">
            <summary>
            Positions limits
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.BuyLimit">
            <summary>
            Buy limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.SellLimit">
            <summary>
            Sell limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.LeverRate">
            <summary>
            Lever rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.BuyLimitValue">
            <summary>
            Buy limit value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.SellLimitValue">
            <summary>
            Sell limit value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginPositionLimit.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAssets">
            <summary>
            Sub account assets info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAssets.SubUid">
            <summary>
            Sub account uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAssets.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset">
            <summary>
            Sub account asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSubAccountAsset.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus">
            <summary>
            Cross margin trade status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Open">
            <summary>
            Open order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Close">
            <summary>
            Close order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Cancel">
            <summary>
            Cancel order access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTradeStatus.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus">
            <summary>
            Cross margin transfer status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.TranferIn">
            <summary>
            Deposit access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.TransferOut">
            <summary>
            Withdrawal access
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MasterTransferSub">
            <summary>
            Transfer from master to sub
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.SubTransferMaster">
            <summary>
            Transfer from sub to master
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MasterTransferSubInnerIn">
            <summary>
            Master transfer sub inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.MasterTransferSubInnerOut">
            <summary>
            Master transfer sub inner out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.SubTransferMasterInnerIn">
            <summary>
            Sub transfer master inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.SubTransferMasterInnerOut">
            <summary>
            Sub transfer master inner out
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.TransferInnerIn">
            <summary>
            Transfer inner in
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginTransferStatus.TransferInnerOut">
            <summary>
            Tranfer inner out
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage">
            <summary>
            User settlement record page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage.CurrentPage">
            <summary>
            Current pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecordPage.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord">
            <summary>
            User settlement record
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.MarginBalanceInit">
            <summary>
            Margin balance init
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.SettlementRealizedPnl">
            <summary>
            Settlement profit realized
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.SettlementTime">
            <summary>
            Settlement time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.Clawback">
            <summary>
            Clawback
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.FundingFee">
            <summary>
            Funding fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.OffsetProfitLoss">
            <summary>
            Offset profit loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserSettlementRecord.ContractDetails">
            <summary>
            Contract details
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract">
            <summary>
            Settlement contract details
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.OffsetProfitLoss">
            <summary>
            Offset profit loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginSettlementAccountContract.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition">
            <summary>
            Settlement position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.CostOpen">
            <summary>
            Cost open
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.CostHoldPre">
            <summary>
            Cost hold before settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.ColdHold">
            <summary>
            Cost hold after settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.SettlementUnrealizedPnl">
            <summary>
            Settlement profit unrealized
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.SettlementPrice">
            <summary>
            Settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPosition.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginUserTrade">
            <summary>
            User trade info
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossPositionOpenTpSlOrders">
            <summary>
            Position open and tp/sl info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossPositionOpenTpSlOrders.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossPositionOpenTpSlOrders.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossPositionOpenTpSlOrders.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrderPage">
            <summary>
            Take profit / stop loss order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrder">
            <summary>
            Tp/Sl order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrder.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlClosedOrder.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrderPage">
            <summary>
            Take profit / stop loss order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrder">
            <summary>
            Tp/Sl order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrder.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTpSlOrder.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrderPage">
            <summary>
            Trailing order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrder">
            <summary>
            Trailing order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrder.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingClosedOrder.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrderPage">
            <summary>
            Trailing order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrder">
            <summary>
            Trailing order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrder.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTrailingOrder.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit">
            <summary>
            Cross margin transfer limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.TransferInMaxEach">
            <summary>
            Transfer in max per transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.TransferInMinEach">
            <summary>
            Transfer in min per transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.TransferOutMaxEach">
            <summary>
            Transfer out max per transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.TransferOutMinEach">
            <summary>
            Transfer out min per transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.TransferInMaxDaily">
            <summary>
            Transfer in max daily
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.TransferOutMaxDaily">
            <summary>
            Transfer out max daily
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.NetTransferInMaxDaily">
            <summary>
            Net transfer in max daily
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.NetTransferOutMaxDaily">
            <summary>
            Net transfer out max daily
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTransferLimit.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrderPage">
            <summary>
            Trigger cross margin order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrder">
            <summary>
            Trigger order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrder.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossTriggerOrder.Pair">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice">
            <summary>
            Estimated settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.EstimatedSettlementPrice">
            <summary>
            Estimated settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXEstimatedSettlementPrice.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord">
            <summary>
            Financial records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.QueryId">
            <summary>
            Query id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Id">
            <summary>
            Record id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Type">
            <summary>
            Record type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Quantity">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFinancialRecord.FaceMarginAccount">
            <summary>
            Face margin account
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.Asset">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRate.FundingTime">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage">
            <summary>
            Funding rates page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage.TotalResults">
            <summary>
            Total results
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFundingRatePage.Rates">
            <summary>
            Rates
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate">
            <summary>
            Historical funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.AveragePremiumIndex">
            <summary>
            Average premium index
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.FundingRate">
            <summary>
            Funding rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.RealizedRate">
            <summary>
            Realized rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.FundingTime">
            <summary>
            Funding time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.Asset">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXHistoricalFundingRate.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo">
            <summary>
            Insurance info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.TotalPage">
            <summary>
            Total amount of pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.TotalSize">
            <summary>
            Total amount of results
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceInfo.History">
            <summary>
            The history data
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceValue">
            <summary>
            Insurance value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceValue.InsuranceFund">
            <summary>
            Insurance fund
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXInsuranceValue.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo">
            <summary>
            Account info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.Asset">
            <summary>
            Asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginPosition">
            <summary>
            Margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginAvailable">
            <summary>
            Margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.RealizedProfit">
            <summary>
            Profit real
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.NewRiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.WithdrawAvailable">
            <summary>
            Withdraw available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginStatic">
            <summary>
            Margin static
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.TradePartition">
            <summary>
            Trade partition
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAccountInfo.AdlRiskPercentage">
            <summary>
            ADL risk percentage
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAssetsAndPositions">
            <summary>
            Isolated margin assets and positions info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginAssetsAndPositions.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageAvailable">
            <summary>
            Available leverage info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageAvailable.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageAvailable.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageAvailable.AvailableLevelRate">
            <summary>
            Available rates
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder">
            <summary>
            Isolated margin order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Quantity">
            <summary>
            Quantity of contract
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Side">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.CancelTime">
            <summary>
            Cancel time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.QuantityFilled">
            <summary>
            Quantity filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.ValueFilled">
            <summary>
            Value of the quantity filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.AverageFillPrice">
            <summary>
            Average fill price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Status">
            <summary>
            Order status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.OrderSource">
            <summary>
            Source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.LiquidationType">
            <summary>
            Liquidation type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.IsTakeProfitStopLoss">
            <summary>
            Is take profit/stop loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.RealizedPnl">
            <summary>
            Realized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.FeeQuantity">
            <summary>
            HTX fee quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.FeeQuoteQuantity">
            <summary>
            HTX fee quote quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.CancelSource">
            <summary>
            Cancel source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrder.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrder">
            <summary>
            Cross margin order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrder.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrderPage">
            <summary>
            Order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAssets">
            <summary>
            Sub account assets info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAssets.SubUid">
            <summary>
            Sub account uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAssets.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset">
            <summary>
            Sub account asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginSubAccountAsset.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage">
            <summary>
            User settlement record page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage.CurrentPage">
            <summary>
            Current pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecordPage.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord">
            <summary>
            User settlement record
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.MarginBalanceInit">
            <summary>
            Margin balance init
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.SettlementRealizedPnl">
            <summary>
            Settlement profit realized
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.SettlementTime">
            <summary>
            Settlement time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.Clawback">
            <summary>
            Clawback
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.FundingFee">
            <summary>
            Funding fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.OffsetProfitLoss">
            <summary>
            Offset profit loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserSettlementRecord.Positions">
            <summary>
            Positions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition">
            <summary>
            Settlement position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.CostOpen">
            <summary>
            Cost open
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.CostHoldPre">
            <summary>
            Cost hold before settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.ColdHold">
            <summary>
            Cost hold after settlement
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.SettlementUnrealizedPnl">
            <summary>
            Settlement unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.SettlementPrice">
            <summary>
            Settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSettlementPosition.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.QueryId">
            <summary>
            Query id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.MatchId">
            <summary>
            Match id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.OffsetProfitLoss">
            <summary>
            Offset profit loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Role">
            <summary>
            Role
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.OrderIdStr">
            <summary>
            Order id str
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.RealProfit">
            <summary>
            Real profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginUserTrade.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade">
            <summary>
            Last trade data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Amount">
            <summary>
            Amount of contracts
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrade.QuoteQuantity">
            <summary>
            Value
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLastTrade">
            <summary>
            Last trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLastTrade.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLastTrade.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLimit">
            <summary>
            Leverage position limit info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLimit.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLimit.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLimit.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLimit.Limits">
            <summary>
            Limits
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLeverageLimit">
            <summary>
            Leverage position limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLeverageLimit.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLeverageLimit.BuyLimitValue">
            <summary>
            Buy limit value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLeveragePositionLeverageLimit.SellLimitValue">
            <summary>
            Sell limit value
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageRate.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageRate.Mode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXIsolatedMarginLeverageRate.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageRate.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageRate.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossMarginLeverageRate.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder">
            <summary>
            Liquidation order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.QueryId">
            <summary>
            Query id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Direction">
            <summary>
            Direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Turnover">
            <summary>
            Turnover
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXLiquidationOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails">
            <summary>
            Isolated margin order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.InstrumentPrice">
            <summary>
            Instrument price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.FinalInterest">
            <summary>
            Final interest
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.AdjustValue">
            <summary>
            Adjust value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginOrderDetails.Trades">
            <summary>
            Trades
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade">
            <summary>
            Trade info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.TradeId">
            <summary>
            Trade id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Price">
            <summary>
            Trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Quantity">
            <summary>
            Trade quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Value">
            <summary>
            Trade value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Role">
            <summary>
            Trade role
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMarginTrade.RealizedPnl">
            <summary>
            Real pnl
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransferPage">
            <summary>
            Sub transfer page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransferPage.Transfers">
            <summary>
            Transfers
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer">
            <summary>
            Transfer between master and sub account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.Asset">
            <summary>
            Asset name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.FromMarginAccount">
            <summary>
            From margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.ToMarginAccount">
            <summary>
            To margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.SubUid">
            <summary>
            Sub uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.SubAccountName">
            <summary>
            Sub account name
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.Type">
            <summary>
            Transfer type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXMasterSubTransfer.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest">
            <summary>
            Open interest
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Amount">
            <summary>
            Amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.TradeAmount">
            <summary>
            Trade amount
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.TradeVolume">
            <summary>
            Trade volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.TradeTurnover">
            <summary>
            Trade turnover
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterest.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue">
            <summary>
            Open interest value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValue.Tick">
            <summary>
            Tick
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick">
            <summary>
            Open interest value tick
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick.Volume">
            <summary>
            Volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick.Unit">
            <summary>
            Unit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick.Value">
            <summary>
            Value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOpenInterestValueTick.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderId.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderIds">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderIds.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderIds.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderIds.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderLimit">
            <summary>
            Order limit info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderLimit.OrderType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderLimit.Limits">
            <summary>
            Limits
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderTypeLimit">
            <summary>
            Limit info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderTypeLimit.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderTypeLimit.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderTypeLimit.OpenLimit">
            <summary>
            Max open order limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderTypeLimit.CloseLimit">
            <summary>
            Max close order limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderTypeLimit.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderTypeLimit.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXOrderTypeLimit.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPage">
            <summary>
            Page of data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPage.TotalPages">
            <summary>
            Total amount of pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPage.TotalRecords">
            <summary>
            Total amount of records
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPlacedOrderId">
            <summary>
            Placed order id 
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPlacedOrderId.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPlacedOrderId.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition">
            <summary>
            Isolated margin position info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Available">
            <summary>
            Available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Frozen">
            <summary>
            Frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.CostOpen">
            <summary>
            Opening average price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.CostHold">
            <summary>
            Average price of position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.UnrealizedPnl">
            <summary>
            Unrealized profit and loss
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.ProfitRate">
            <summary>
            Profit rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.PositionMargin">
            <summary>
            Position margin
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Side">
            <summary>
            Order direction
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.LastPrice">
            <summary>
            Last price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.NewRiskRate">
            <summary>
            New risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.AdlRiskPercentage">
            <summary>
            ADL risk percentage
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPosition.TradePartition">
            <summary>
            Trade partition
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossPosition">
            <summary>
            Cross margin position
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossPosition.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossPosition.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossPosition.Pair">
            <summary>
            Pair
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit">
            <summary>
            Position limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.BuyLimit">
            <summary>
            Buy limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.SellLimit">
            <summary>
            Sell limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.LevererageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.BuyLimitValue">
            <summary>
            Buy limit value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.SellLimitValue">
            <summary>
            Sell limit value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionLimit.MarkPrice">
            <summary>
            Mark price
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionMode.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionMode.PositionMode">
            <summary>
            Position mode
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders">
            <summary>
            Position open and tp/sl info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.Price">
            <summary>
            Price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.ClientOrderId">
            <summary>
            Client order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.QuantityFilled">
            <summary>
            Filled quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.ValueFilled">
            <summary>
            Value filled
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.Fee">
            <summary>
            Fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.AveragePrice">
            <summary>
            Average trade price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.MarginFrozen">
            <summary>
            Margin frozen
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.Profit">
            <summary>
            Profit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.CancelTime">
            <summary>
            Cancelation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrders.TpslOrderInfo">
            <summary>
            Tpsl order info
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB">
            <summary>
            
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.TpslOrderType">
            <summary>
            Tpsl order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.RelationTpslOrderId">
            <summary>
            Relation tpsl order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.CancelTime">
            <summary>
            Cancelation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.FailCode">
            <summary>
            Fail code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.FailReason">
            <summary>
            Fail reason
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.TriggeredPrice">
            <summary>
            Triggered price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPositionOpenTpSlOrdersSUB.RelationOrderId">
            <summary>
            Relation order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation">
            <summary>
            Price limitation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.Asset">
            <summary>
            The asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.HighLimit">
            <summary>
            High limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.LowLimit">
            <summary>
            Low limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXPriceLimitation.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage">
            <summary>
            Settlement page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage.TotalPages">
            <summary>
            Total pages
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage.TotalSize">
            <summary>
            Total size
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementPage.Records">
            <summary>
            Records
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord">
            <summary>
            Settlement info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.SettlementTime">
            <summary>
            Settlement time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.ClawbackRatio">
            <summary>
            Clawback ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.SettlementPrice">
            <summary>
            Settlement price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.SettlementType">
            <summary>
            Settlement type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSettlementRecord.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoPage">
            <summary>
            Sub account asset info page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoPage.Total">
            <summary>
            Total items
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoPage.SubAccounts">
            <summary>
            Sub accounts
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfo">
            <summary>
            Sub account asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfo.SubUserId">
            <summary>
            Sub user id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfo.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset">
            <summary>
            Sub account asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset.LiquidationPrice">
            <summary>
            Liquidation price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountAssetInfoAsset.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoPage">
            <summary>
            Sub account asset info page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoPage.Total">
            <summary>
            Total items
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoPage.SubAccounts">
            <summary>
            Sub accounts
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfo">
            <summary>
            Sub account asset info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfo.SubUserId">
            <summary>
            Sub user id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfo.Assets">
            <summary>
            Assets
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoAsset">
            <summary>
            Sub account asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoAsset.MarginBalance">
            <summary>
            Margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoAsset.RiskRate">
            <summary>
            Risk rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoAsset.MarginAsset">
            <summary>
            Margin asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoAsset.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountCrossAssetInfoAsset.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountResult">
            <summary>
            sub account results
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountResult.Successes">
            <summary>
            Successfully updated ids
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountResult.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountError">
            <summary>
            Sub account error info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountError.SubUid">
            <summary>
            Sub uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountError.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubAccountError.ErrorMessage">
            <summary>
            Error message
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissions">
            <summary>
            Trade permissions result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissions.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissions.Successes">
            <summary>
            Successes
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissionsError">
            <summary>
            Error
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissionsError.SubUserId">
            <summary>
            Sub user id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissionsError.ErrorCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissionsError.ErrorMsg">
            <summary>
            Error msg
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissionsStatus">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissionsStatus.QueryId">
            <summary>
            Query id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissionsStatus.SubUid">
            <summary>
            Sub uid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSubTradePermissionsStatus.SubAuth">
            <summary>
            Sub auth
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo">
            <summary>
            Adjust factor info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapAdjustFactorInfo.List">
            <summary>
            list
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSwapAdjustFactorInfo">
            <summary>
            Cross margin adjust factor info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSwapAdjustFactorInfo.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSwapAdjustFactorInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXCrossSwapAdjustFactorInfo.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorInfo">
            <summary>
            Factor info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorInfo.LeverageRate">
            <summary>
            Lever rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorInfo.Ladders">
            <summary>
            Ladders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry">
            <summary>
            Factor info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry.Ladder">
            <summary>
            Ladder
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry.MinSize">
            <summary>
            Min size
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry.MaxSize">
            <summary>
            Max size
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXFactorEntry.AdjustFactor">
            <summary>
            Adjust factor
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBookTicker">
            <summary>
            Best offer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBookTicker.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBookTicker.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBookTicker.Ask">
            <summary>
            Best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBookTicker.Bid">
            <summary>
            Best bid
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBookTicker.Id">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapBookTicker.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapIndex">
            <summary>
            Swap index
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapIndex.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapIndex.IndexPrice">
            <summary>
            Index price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapIndex.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo">
            <summary>
            Swap risk info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.InsuranceFund">
            <summary>
            Insurance fund
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.EstimatedClawback">
            <summary>
            Estimated clawback
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.BusinuessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXSwapRiskInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTicker">
            <summary>
            Market data
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTicker.OpenTime">
            <summary>
            Open time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTicker.Timestamp">
            <summary>
            Timestamp
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTicker.Value">
            <summary>
            Turnover, quantity * contract value * price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTicker.Ask">
            <summary>
            Best ask
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTicker.Bid">
            <summary>
            Best bid
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXListTicker">
            <summary>
            Ticker info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXListTicker.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXListTicker.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXListTicker.Trades">
            <summary>
            Number of buys and sells in last 24h
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo">
            <summary>
            Tiered margin info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginInfo.List">
            <summary>
            List
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredCrossMarginInfo">
            <summary>
            Tiered cross margin info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredCrossMarginInfo.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredCrossMarginInfo.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredCrossMarginInfo.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginRate">
            <summary>
            Margin rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginRate.LeverageRate">
            <summary>
            Lever rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginRate.Ladders">
            <summary>
            Ladders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder">
            <summary>
            Ladder info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder.MinMarginBalance">
            <summary>
            Min marging balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder.MaxMarginBalance">
            <summary>
            Max margin balance
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder.MinMarginAvailable">
            <summary>
            Min margin available
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTieredMarginLadder.MaxMarginAvailable">
            <summary>
            Max margin available
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTotalInsuranceInfo">
            <summary>
            Insurance value
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTotalInsuranceInfo.InsuranceFund">
            <summary>
            Insurance fund
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTotalInsuranceInfo.Asset">
            <summary>
            Quote asset
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrderPage">
            <summary>
            Take profit / stop loss order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrder">
            <summary>
            Tp/Sl order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrder.CancelTime">
            <summary>
            Cancel time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrder.FailCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrder.FailReason">
            <summary>
            Error reason
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrder.TriggeredPrice">
            <summary>
            Triggered price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlClosedOrder.RelationOrderId">
            <summary>
            Relation order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrderPage">
            <summary>
            Take profit / stop loss order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder">
            <summary>
            Tp/Sl order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.OrderSide">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.TpslOrderType">
            <summary>
            Tpsl order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.SourceOrderId">
            <summary>
            Source order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlOrder.RelationTpslOrderId">
            <summary>
            Relation tpsl order id
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlResult">
            <summary>
            Tp/sl set result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlResult.TpOrder">
            <summary>
            Take profit order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlResult.SlOrder">
            <summary>
            Stop loss order
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlResultOrder">
            <summary>
            Order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlResultOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTpSlResultOrder.OrderIdStr">
            <summary>
            Order id string
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee">
            <summary>
            Trading fee info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.Asset">
            <summary>
            Asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.OpenMakerFee">
            <summary>
            Open position maker fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.OpenTakerFee">
            <summary>
            Open position taker fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.CloseMakerfee">
            <summary>
            Close position maker fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.CloseTakerFee">
            <summary>
            Close position taker fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.FeeAsset">
            <summary>
            Fee asset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.DeliveryFee">
            <summary>
            Delivery fee
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.BusinessType">
            <summary>
            Business type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.ContractType">
            <summary>
            Contract type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingFee.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatus">
            <summary>
            Trading status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatus.IsDisable">
            <summary>
            Is disable
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatus.OrderPriceTypes">
            <summary>
            Order price types
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatus.DisableReason">
            <summary>
            Disable reason
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatus.DisableInterval">
            <summary>
            Disable interval
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatus.RecoveryTime">
            <summary>
            Recovery time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatus.CancelOrderRatio">
            <summary>
            Cancel order ratio info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatus.TotalDisables">
            <summary>
            Total disables info
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusCor">
            <summary>
            Cancel order ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusCor.OrdersThreshold">
            <summary>
            Orders threshold
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusCor.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusCor.InvalidCancelOrders">
            <summary>
            Invalid cancel orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusCor.CancelRatioThreshold">
            <summary>
            Cancel ratio threshold
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusCor.CancelRatio">
            <summary>
            Cancel ratio
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusCor.IsTrigger">
            <summary>
            Is trigger
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusCor.IsActive">
            <summary>
            Is active
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusTdn">
            <summary>
            Total disables
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusTdn.DisablesThreshold">
            <summary>
            Disables threshold
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusTdn.Disables">
            <summary>
            Disables
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusTdn.IsTrigger">
            <summary>
            Is trigger
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTradingStatusTdn.IsActive">
            <summary>
            Is active
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrderPage">
            <summary>
            Trailing order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder">
            <summary>
            Trailing order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.TriggeredPrice">
            <summary>
            Triggered price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.UpdateTime">
            <summary>
            Update time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.CancelTime">
            <summary>
            Cancel time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.FailCode">
            <summary>
            Error code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.FailReason">
            <summary>
            Error reason
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.RelationOrderId">
            <summary>
            Relation order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.MarketLimitPrice">
            <summary>
            Lowest/highest market price (use the lowest price when buy. use the highest when sell)
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.RealVolume">
            <summary>
            Real volume
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingClosedOrder.FormulaPrice">
            <summary>
            Formula price(the lowest (highest) market price* (1 ± callback rate))
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrderPage">
            <summary>
            Trailing order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder">
            <summary>
            Trailing order info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.Side">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.OrderIdStr">
            <summary>
            Order id str
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.CreateTime">
            <summary>
            Creation time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.CallbackRate">
            <summary>
            Callback rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.ActivePrice">
            <summary>
            Active price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.IsActive">
            <summary>
            Is active
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTrailingOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit">
            <summary>
            Transfer limit
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.TransferInMaxEach">
            <summary>
            Transfer in max per transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.TransferInMinEach">
            <summary>
            Transfer in min per transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.TransferOutMaxEach">
            <summary>
            Transfer out max per transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.TransferOutMinEach">
            <summary>
            Transfer out min per transfer
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.TransferInMaxDaily">
            <summary>
            Transfer in max daily
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.TransferOutMaxDaily">
            <summary>
            Transfer out max daily
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.NetTransferInMaxDaily">
            <summary>
            Net transfer in max daily
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTransferLimit.NetTransferOutMaxDaily">
            <summary>
            Net transfer out max daily
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderPage">
            <summary>
            Trigger order page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderPage.Orders">
            <summary>
            Orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderPage.TotalPage">
            <summary>
            Total page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderPage.CurrentPage">
            <summary>
            Current page
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderPage.Total">
            <summary>
            Total results
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder">
            <summary>
            Trigger order
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.Symbol">
            <summary>
            Symbol
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.ContractCode">
            <summary>
            Contract code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.TriggerType">
            <summary>
            Trigger type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.Quantity">
            <summary>
            Quantity
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.OrderType">
            <summary>
            Order type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.OrderSide">
            <summary>
            Side
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.Offset">
            <summary>
            Offset
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.LeverageRate">
            <summary>
            Leverage rate
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.OrderIdStr">
            <summary>
            Order id str
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.OrderSource">
            <summary>
            Order source
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.TriggerPrice">
            <summary>
            Trigger price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.OrderPrice">
            <summary>
            Order price
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.CreateTime">
            <summary>
            Create time
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.OrderPriceType">
            <summary>
            Order price type
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.MarginMode">
            <summary>
            Margin mode
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.MarginAccount">
            <summary>
            Margin account
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrder.ReduceOnly">
            <summary>
            Reduce only
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderResult">
            <summary>
            Trigger order operation result
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderResult.Errors">
            <summary>
            Errors
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderResult.Successes">
            <summary>
            Successful operations, comma seperated
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderResultError">
            <summary>
            Error info
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderResultError.OrderId">
            <summary>
            Order id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderResultError.ErrorCode">
            <summary>
            Err code
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Models.UsdtMarginSwap.HTXTriggerOrderResultError.ErrorMessage">
            <summary>
            Err msg
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Options.HTXOptions">
            <summary>
            HTX options
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOptions.AllowAppendingClientOrderId">
            <summary>
            Whether to allow the client to adjust the clientOrderId parameter send by the user when placing orders to include a client reference. This reference is used by the exchange to allocate a small percentage of the paid trading fees to developer of this library. Defaults to false.<br />
            Note that:<br />
            * It does not impact the amount of fees a user pays in any way<br />
            * It does not impact functionality. The reference is added just before sending the request and removed again during data deserialization<br />
            * It does respect client order id field limitations. For example if the user provided client order id parameter is too long to fit the reference it will not be added<br />
            * Toggling this option might fail operations using a clientOrderId parameter for pre-existing orders which were placed before the toggle. Operations on orders placed after the toggle will work as expected. It's adviced to toggle when there are no open orders
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Options.HTXOrderBookOptions">
            <summary>
            Options for the HTX SymbolOrderBook
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOrderBookOptions.Default">
            <summary>
            Default options for the HTX SymbolOrderBook
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOrderBookOptions.MergeStep">
            <summary>
            The way the entries are merged. 0 is no merge, 2 means to combine the entries on 2 decimal places
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOrderBookOptions.Levels">
            <summary>
            The amount of entries to maintain. Either 5, 20 or 150. Level 5 and 20 are currently only supported for the following symbols: btcusdt, ethusdt, xrpusdt, eosusdt, ltcusdt, etcusdt, adausdt, dashusdt, bsvusdt.
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXOrderBookOptions.InitialDataTimeout">
            <summary>
            After how much time we should consider the connection dropped if no data is received for this time after the initial subscriptions
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Options.HTXRestOptions">
            <summary>
            Options for the HTXRestClient
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.Default">
            <summary>
            Default options for the HTXRestClient
            </summary>
        </member>
        <member name="M:HTX.Net.Objects.Options.HTXRestOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.AllowAppendingClientOrderId">
            <summary>
            Whether to allow the client to adjust the clientOrderId parameter send by the user when placing orders to include a client reference. This reference is used by the exchange to allocate a small percentage of the paid trading fees to developer of this library. Defaults to false.<br />
            Note that:<br />
            * It does not impact the amount of fees a user pays in any way<br />
            * It does not impact functionality. The reference is added just before sending the request and removed again during data deserialization<br />
            * It does respect client order id field limitations. For example if the user provided client order id parameter is too long to fit the reference it will not be added<br />
            * Toggling this option might fail operations using a clientOrderId parameter for pre-existing orders which were placed before the toggle. Operations on orders placed after the toggle will work as expected. It's adviced to toggle when there are no open orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.SignPublicRequests">
            <summary>
            Whether public requests should be signed if ApiCredentials are provided. Needed for accurate rate limiting.
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXRestOptions.UsdtMarginSwapOptions">
            <summary>
            USDT margin swap API options
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Options.HTXSocketOptions">
            <summary>
            Options for the HTXSocketClient
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXSocketOptions.Default">
            <summary>
            Default options for the HTXSocketClient
            </summary>
        </member>
        <member name="M:HTX.Net.Objects.Options.HTXSocketOptions.#ctor">
            <summary>
            ctor
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXSocketOptions.AllowAppendingClientOrderId">
            <summary>
            Whether to allow the client to adjust the clientOrderId parameter send by the user when placing orders to include a client reference. This reference is used by the exchange to allocate a small percentage of the paid trading fees to developer of this library. Defaults to false.<br />
            Note that:<br />
            * It does not impact the amount of fees a user pays in any way<br />
            * It does not impact functionality. The reference is added just before sending the request and removed again during data deserialization<br />
            * It does respect client order id field limitations. For example if the user provided client order id parameter is too long to fit the reference it will not be added<br />
            * Toggling this option might fail operations using a clientOrderId parameter for pre-existing orders which were placed before the toggle. Operations on orders placed after the toggle will work as expected. It's adviced to toggle when there are no open orders
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXSocketOptions.SpotOptions">
            <summary>
            Spot API options
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Options.HTXSocketOptions.UsdtMarginSwapOptions">
            <summary>
            Usdt Margin Swap API options
            </summary>
        </member>
        <member name="T:HTX.Net.Objects.Sockets.HTXOpMessage">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Sockets.HTXOpMessage.Operation">
            <summary>
            Operation
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Sockets.HTXOpMessage.RequestId">
            <summary>
            Request id
            </summary>
        </member>
        <member name="P:HTX.Net.Objects.Sockets.HTXOpMessage.Topic">
            <summary>
            Topic
            </summary>
        </member>
        <member name="T:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.Spot">
            <inheritdoc />
        </member>
        <member name="P:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.UsdtFutures">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.#ctor(System.IServiceProvider)">
            <summary>
            ctor
            </summary>
            <param name="serviceProvider">Service provider for resolving logging and clients</param>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.Create(CryptoExchange.Net.SharedApis.SharedSymbol,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.CreateSpot(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXOrderBookFactory.CreateUsdtFutures(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook">
            <summary>
            HTX order book implementation
            </summary>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.#ctor(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.#ctor(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,HTX.Net.Interfaces.Clients.IHTXSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXSpotSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:HTX.Net.SymbolOrderBooks.HTXUsdtFuturesSymbolOrderBook">
            <summary>
            HTX order book implementation
            </summary>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXUsdtFuturesSymbolOrderBook.#ctor(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions})">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXUsdtFuturesSymbolOrderBook.#ctor(System.String,System.Action{HTX.Net.Objects.Options.HTXOrderBookOptions},Microsoft.Extensions.Logging.ILoggerFactory,HTX.Net.Interfaces.Clients.IHTXSocketClient)">
            <summary>
            Create a new order book instance
            </summary>
            <param name="symbol">The symbol the order book is for</param>
            <param name="optionsDelegate">Option configuration delegate</param>
            <param name="logger">Logger</param>
            <param name="socketClient">Socket client instance</param>
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXUsdtFuturesSymbolOrderBook.DoStartAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXUsdtFuturesSymbolOrderBook.DoResyncAsync(System.Threading.CancellationToken)">
            <inheritdoc />
        </member>
        <member name="M:HTX.Net.SymbolOrderBooks.HTXUsdtFuturesSymbolOrderBook.Dispose(System.Boolean)">
            <inheritdoc />
        </member>
        <member name="T:CryptoExchange.Net.Interfaces.CryptoClientExtensions">
            <summary>
            Extensions for the ICryptoRestClient and ICryptoSocketClient interfaces
            </summary>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.HTX(CryptoExchange.Net.Interfaces.ICryptoRestClient)">
            <summary>
            Get the HTX REST Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="M:CryptoExchange.Net.Interfaces.CryptoClientExtensions.HTX(CryptoExchange.Net.Interfaces.ICryptoSocketClient)">
            <summary>
            Get the HTX Websocket Api client
            </summary>
            <param name="baseClient"></param>
            <returns></returns>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions">
            <summary>
            Extensions for DI
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddHTX(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Add services such as the IHTXRestClient and IHTXSocketClient. Configures the services based on the provided configuration.
            </summary>
            <param name="services">The service collection</param>
            <param name="configuration">The configuration(section) containing the options</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddHTX(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{HTX.Net.Objects.Options.HTXOptions})">
            <summary>
            Add services such as the IHTXRestClient and IHTXSocketClient. Services will be configured based on the provided options.
            </summary>
            <param name="services">The service collection</param>
            <param name="optionsDelegate">Set options for the HTX services</param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddHTX(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{HTX.Net.Objects.Options.HTXRestOptions},System.Action{HTX.Net.Objects.Options.HTXSocketOptions},System.Nullable{Microsoft.Extensions.DependencyInjection.ServiceLifetime})">
            <summary>
            DEPRECATED; use <see cref="M:Microsoft.Extensions.DependencyInjection.ServiceCollectionExtensions.AddHTX(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{HTX.Net.Objects.Options.HTXOptions})" /> instead
            </summary>
        </member>
    </members>
</doc>
